

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat May 20 11:30:02 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og9 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	functab,global,class=ENTRY,delta=2
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 2.40
    69                           ; Generated 17/11/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F628A Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  008C                     	;# 
   131  008E                     	;# 
   132  0092                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009F                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  008C                     	;# 
   168  008E                     	;# 
   169  0092                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009F                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  008C                     	;# 
   205  008E                     	;# 
   206  0092                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009F                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  008C                     	;# 
   242  008E                     	;# 
   243  0092                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009F                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  008C                     	;# 
   279  008E                     	;# 
   280  0092                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009F                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001F                     	;# 
   312  0081                     	;# 
   313  0085                     	;# 
   314  0086                     	;# 
   315  008C                     	;# 
   316  008E                     	;# 
   317  0092                     	;# 
   318  0098                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009C                     	;# 
   323  009D                     	;# 
   324  009F                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  008C                     	;# 
   353  008E                     	;# 
   354  0092                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009F                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000E                     	;# 
   373  000E                     	;# 
   374  000F                     	;# 
   375  0010                     	;# 
   376  0011                     	;# 
   377  0012                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  008C                     	;# 
   390  008E                     	;# 
   391  0092                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009F                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  008C                     	;# 
   427  008E                     	;# 
   428  0092                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009F                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  000A                     	;# 
   444  000B                     	;# 
   445  000C                     	;# 
   446  000E                     	;# 
   447  000E                     	;# 
   448  000F                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0015                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0017                     	;# 
   456  0018                     	;# 
   457  0019                     	;# 
   458  001A                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  008C                     	;# 
   464  008E                     	;# 
   465  0092                     	;# 
   466  0098                     	;# 
   467  0099                     	;# 
   468  009A                     	;# 
   469  009B                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009F                     	;# 
   473                           
   474                           	psect	idataBANK0
   475  07CC                     __pidataBANK0:
   476                           
   477                           ;initializer for ISR@tmpPORTB
   478  07CC  34FF               	retlw	255
   479  000E                     _TMR1	set	14
   480  0003                     _STATUSbits	set	3
   481  0010                     _T1CONbits	set	16
   482  0019                     _TXREG	set	25
   483  0006                     _PORTB	set	6
   484  001A                     _RCREG	set	26
   485  0001                     _TMR0	set	1
   486  0018                     _RCSTAbits	set	24
   487  000C                     _PIR1bits	set	12
   488  000B                     _INTCONbits	set	11
   489  001F                     _CMCONbits	set	31
   490  0006                     _PORTBbits	set	6
   491  0005                     _PORTAbits	set	5
   492  009D                     _EECON2	set	157
   493  009A                     _EEDATA	set	154
   494  009C                     _EECON1	set	156
   495  009B                     _EEADR	set	155
   496  009C                     _EECON1bits	set	156
   497  0099                     _SPBRG	set	153
   498  0098                     _TXSTAbits	set	152
   499  0086                     _TRISB	set	134
   500  0086                     _TRISBbits	set	134
   501  008C                     _PIE1bits	set	140
   502  0081                     _OPTION_REGbits	set	129
   503  0085                     _TRISAbits	set	133
   504                           
   505                           	psect	cinit
   506  0011                     start_initialization:	
   507                           ; #config settings
   508                           
   509  0011                     __initialization:
   510                           
   511                           ; Initialize objects allocated to BANK0
   512  0011  27CC               	fcall	__pidataBANK0	;fetch initializer
   513  0012  00E2               	movwf	__pdataBANK0& (0+127)
   514                           
   515                           ; Clear objects allocated to BANK1
   516  0013  1383               	bcf	3,7	;select IRP bank0
   517  0014  30A0               	movlw	low __pbssBANK1
   518  0015  0084               	movwf	4
   519  0016  30DA               	movlw	low (__pbssBANK1+58)
   520  0017  27A1               	fcall	clear_ram0
   521                           
   522                           ; Clear objects allocated to BANK0
   523  0018  3050               	movlw	low __pbssBANK0
   524  0019  0084               	movwf	4
   525  001A  3062               	movlw	low (__pbssBANK0+18)
   526  001B  27A1               	fcall	clear_ram0
   527  001C                     end_of_initialization:	
   528                           ;End of C runtime variable initialization code
   529                           
   530  001C                     __end_of__initialization:
   531  001C  0183               	clrf	3
   532  001D  282C               	ljmp	_main	;jump to C main() function
   533                           
   534                           	psect	bssBANK0
   535  0050                     __pbssBANK0:
   536  0050                     _last_cmd_rcv:
   537  0050                     	ds	2
   538  0052                     _relay_node_addr:
   539  0052                     	ds	2
   540  0054                     znp_frame_parser@rcv_index:
   541  0054                     	ds	1
   542  0055                     znp_frame_parser@znp_fcs:
   543  0055                     	ds	1
   544  0056                     _znp_state:
   545  0056                     	ds	1
   546  0057                     __zb_znp_cb:
   547  0057                     	ds	1
   548  0058                     _led_blink_handle:
   549  0058                     	ds	1
   550  0059                     __ioc_rb5_isr:
   551  0059                     	ds	1
   552  005A                     __ioc_rb4_isr:
   553  005A                     	ds	1
   554  005B                     __ex_int_isr:
   555  005B                     	ds	1
   556  005C                     __tmr2_isr:
   557  005C                     	ds	1
   558  005D                     __tmr1_isr:
   559  005D                     	ds	1
   560  005E                     __usart_rx_isr:
   561  005E                     	ds	1
   562  005F                     _uxBits:
   563  005F                     	ds	1
   564  0060                     _button_data:
   565  0060                     	ds	2
   566                           
   567                           	psect	dataBANK0
   568  0062                     __pdataBANK0:
   569  0062                     ISR@tmpPORTB:
   570  0062                     	ds	1
   571                           
   572                           	psect	bssBANK1
   573  00A0                     __pbssBANK1:
   574  00A0                     __sys_tick:
   575  00A0                     	ds	25
   576  00B9                     _znp_recv_msg:
   577  00B9                     	ds	33
   578                           
   579                           	psect	clrtext
   580  07A1                     clear_ram0:	
   581                           ;	Called with FSR containing the base address, and
   582                           ;	W with the last address+1
   583                           
   584  07A1  0064               	clrwdt	;clear the watchdog before getting into this loop
   585  07A2                     clrloop0:
   586  07A2  0180               	clrf	0	;clear RAM location pointed to by FSR
   587  07A3  0A84               	incf	4,f	;increment pointer
   588  07A4  0604               	xorwf	4,w	;XOR with final address
   589  07A5  1903               	btfsc	3,2	;have we reached the end yet?
   590  07A6  3400               	retlw	0	;all done for this memory range, return
   591  07A7  0604               	xorwf	4,w	;XOR again to restore value
   592  07A8  2FA2               	goto	clrloop0	;do the next byte
   593                           
   594                           	psect	cstackCOMMON
   595  0070                     __pcstackCOMMON:
   596  0070                     ?_xEventGroupClearBits:
   597  0070                     ?_xEventGroupSetBits:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ??_xEventGroupSetBits:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_ioc_rb5_add_isr_handler:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_ioc_rb4_add_isr_handler:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_ex_int_add_isr_handler:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_eeprom_read:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_sys_tick_init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_xEventGroupCreate:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_led_ind_init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_led_ind_blink_start:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_znp_init:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_znp_router_start:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_led_ind_blink_stop:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_xEventGroupGetBits:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_led_ind_on:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_led_ind_off:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_led_ind_toggle:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ??_led_ind_toggle:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_sys_tick_register_callback_handler:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_sys_tick_stop:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_znp_hard_reset:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_led_button_init:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_button1_handler:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_button2_handler:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_button3_handler:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_button_init:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_main:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_usart_add_isr_handler:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_timer1_add_isr_handler:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_ISR:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?__blink_handler:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_usart_init:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_usart_send:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_znp_frame_parser:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_znp_set_startopt:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_znp_set_logical_type:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_znp_set_channels:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_znp_af_register:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_znp_zdo_startup_from_app:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_sys_tick_handler:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?i1___bmul:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     i1___bmul@multiplicand:	
   721                           ; 1 bytes @ 0x0
   722                           
   723                           
   724                           ; 1 bytes @ 0x0
   725  0070                     	ds	1
   726  0071                     ??__blink_handler:
   727  0071                     ??i1___bmul:	
   728                           ; 1 bytes @ 0x1
   729                           
   730  0071                     xEventGroupSetBits@uxBitsToSet:	
   731                           ; 1 bytes @ 0x1
   732                           
   733                           
   734                           ; 1 bytes @ 0x1
   735  0071                     	ds	1
   736  0072                     ??_button1_handler:
   737  0072                     ??_button2_handler:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     ??_button3_handler:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     ?_znp_msg_handler:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0072                     i1___bmul@product:	
   747                           ; 1 bytes @ 0x2
   748                           
   749  0072                     znp_msg_handler@cmd:	
   750                           ; 1 bytes @ 0x2
   751                           
   752                           
   753                           ; 2 bytes @ 0x2
   754  0072                     	ds	1
   755  0073                     i1___bmul@multiplier:
   756                           
   757                           ; 1 bytes @ 0x3
   758  0073                     	ds	1
   759  0074                     ??_sys_tick_handler:
   760  0074                     znp_msg_handler@data:	
   761                           ; 1 bytes @ 0x4
   762                           
   763                           
   764                           ; 1 bytes @ 0x4
   765  0074                     	ds	1
   766  0075                     znp_msg_handler@len:
   767                           
   768                           ; 1 bytes @ 0x5
   769  0075                     	ds	1
   770  0076                     ??_znp_msg_handler:
   771                           
   772                           ; 1 bytes @ 0x6
   773  0076                     	ds	2
   774  0078                     znp_msg_handler@endpoint:
   775                           
   776                           ; 1 bytes @ 0x8
   777  0078                     	ds	1
   778  0079                     ??_znp_frame_parser:
   779                           
   780                           ; 1 bytes @ 0x9
   781  0079                     	ds	2
   782  007B                     znp_frame_parser@ch:
   783                           
   784                           ; 1 bytes @ 0xB
   785  007B                     	ds	1
   786  007C                     ?_znp_usart_event_handler:
   787  007C                     znp_usart_event_handler@rx_event:	
   788                           ; 1 bytes @ 0xC
   789                           
   790                           
   791                           ; 1 bytes @ 0xC
   792  007C                     	ds	1
   793  007D                     znp_usart_event_handler@event_data:
   794                           
   795                           ; 1 bytes @ 0xD
   796  007D                     	ds	1
   797                           
   798                           	psect	cstackBANK0
   799  0020                     __pcstackBANK0:
   800  0020                     ??_znp_usart_event_handler:
   801  0020                     sys_tick_handler@i:	
   802                           ; 1 bytes @ 0x0
   803                           
   804                           
   805                           ; 1 bytes @ 0x0
   806  0020                     	ds	2
   807  0022                     ??_ISR:
   808                           
   809                           ; 1 bytes @ 0x2
   810  0022                     	ds	5
   811  0027                     ISR@c:
   812                           
   813                           ; 1 bytes @ 0x7
   814  0027                     	ds	1
   815  0028                     ISR@newPORTB:
   816                           
   817                           ; 1 bytes @ 0x8
   818  0028                     	ds	1
   819  0029                     ISR@iocMask:
   820                           
   821                           ; 1 bytes @ 0x9
   822  0029                     	ds	1
   823  002A                     ??_xEventGroupClearBits:
   824  002A                     ??_ioc_rb5_add_isr_handler:	
   825                           ; 1 bytes @ 0xA
   826                           
   827  002A                     ??_ioc_rb4_add_isr_handler:	
   828                           ; 1 bytes @ 0xA
   829                           
   830  002A                     ??_ex_int_add_isr_handler:	
   831                           ; 1 bytes @ 0xA
   832                           
   833  002A                     ?_eeprom_write:	
   834                           ; 1 bytes @ 0xA
   835                           
   836  002A                     ??_eeprom_read:	
   837                           ; 1 bytes @ 0xA
   838                           
   839  002A                     ??_xEventGroupCreate:	
   840                           ; 1 bytes @ 0xA
   841                           
   842  002A                     ??_xEventGroupGetBits:	
   843                           ; 1 bytes @ 0xA
   844                           
   845  002A                     ??_led_ind_on:	
   846                           ; 1 bytes @ 0xA
   847                           
   848  002A                     ??_led_ind_off:	
   849                           ; 1 bytes @ 0xA
   850                           
   851  002A                     ??_usart_add_isr_handler:	
   852                           ; 1 bytes @ 0xA
   853                           
   854  002A                     ??_timer1_add_isr_handler:	
   855                           ; 1 bytes @ 0xA
   856                           
   857  002A                     ??_usart_init:	
   858                           ; 1 bytes @ 0xA
   859                           
   860  002A                     ??_usart_send:	
   861                           ; 1 bytes @ 0xA
   862                           
   863  002A                     ?_wait_for_msg:	
   864                           ; 1 bytes @ 0xA
   865                           
   866  002A                     ?___bmul:	
   867                           ; 1 bytes @ 0xA
   868                           
   869  002A                     ?_sys_tick_get_tick:	
   870                           ; 1 bytes @ 0xA
   871                           
   872  002A                     usart_send@c:	
   873                           ; 4 bytes @ 0xA
   874                           
   875  002A                     eeprom_write@value:	
   876                           ; 1 bytes @ 0xA
   877                           
   878  002A                     ___bmul@multiplicand:	
   879                           ; 1 bytes @ 0xA
   880                           
   881  002A                     wait_for_msg@cmd:	
   882                           ; 1 bytes @ 0xA
   883                           
   884                           
   885                           ; 2 bytes @ 0xA
   886  002A                     	ds	1
   887  002B                     ??_eeprom_write:
   888  002B                     ??___bmul:	
   889                           ; 1 bytes @ 0xB
   890                           
   891  002B                     usart_add_isr_handler@handler:	
   892                           ; 1 bytes @ 0xB
   893                           
   894  002B                     timer1_add_isr_handler@handler:	
   895                           ; 1 bytes @ 0xB
   896                           
   897  002B                     ex_int_add_isr_handler@handler:	
   898                           ; 1 bytes @ 0xB
   899                           
   900  002B                     ioc_rb4_add_isr_handler@handler:	
   901                           ; 1 bytes @ 0xB
   902                           
   903  002B                     ioc_rb5_add_isr_handler@handler:	
   904                           ; 1 bytes @ 0xB
   905                           
   906  002B                     xEventGroupClearBits@uxBitsToClear:	
   907                           ; 1 bytes @ 0xB
   908                           
   909  002B                     eeprom_read@addr:	
   910                           ; 1 bytes @ 0xB
   911                           
   912                           
   913                           ; 1 bytes @ 0xB
   914  002B                     	ds	1
   915  002C                     ??_sys_tick_init:
   916  002C                     ??_znp_init:	
   917                           ; 1 bytes @ 0xC
   918                           
   919  002C                     ??_znp_hard_reset:	
   920                           ; 1 bytes @ 0xC
   921                           
   922  002C                     ??_led_button_init:	
   923                           ; 1 bytes @ 0xC
   924                           
   925  002C                     ??_button_init:	
   926                           ; 1 bytes @ 0xC
   927                           
   928  002C                     ??_wait_for_msg:	
   929                           ; 1 bytes @ 0xC
   930                           
   931  002C                     ?_wait_for_status:	
   932                           ; 1 bytes @ 0xC
   933                           
   934  002C                     ??_znp_zdo_startup_from_app:	
   935                           ; 1 bytes @ 0xC
   936                           
   937  002C                     eeprom_write@addr:	
   938                           ; 1 bytes @ 0xC
   939                           
   940  002C                     ___bmul@product:	
   941                           ; 1 bytes @ 0xC
   942                           
   943  002C                     wait_for_status@cmd:	
   944                           ; 1 bytes @ 0xC
   945                           
   946                           
   947                           ; 2 bytes @ 0xC
   948  002C                     	ds	1
   949  002D                     znp_init@callback:
   950  002D                     ___bmul@multiplier:	
   951                           ; 1 bytes @ 0xD
   952                           
   953                           
   954                           ; 1 bytes @ 0xD
   955  002D                     	ds	1
   956  002E                     ?_xEventGroupWaitBits:
   957  002E                     ??_sys_tick_get_tick:	
   958                           ; 1 bytes @ 0xE
   959                           
   960  002E                     ??_sys_tick_register_callback_handler:	
   961                           ; 1 bytes @ 0xE
   962                           
   963  002E                     ?_sys_tick_start_periodic:	
   964                           ; 1 bytes @ 0xE
   965                           
   966  002E                     ??_sys_tick_stop:	
   967                           ; 1 bytes @ 0xE
   968                           
   969  002E                     wait_for_status@offset:	
   970                           ; 1 bytes @ 0xE
   971                           
   972  002E                     xEventGroupWaitBits@ticks_to_wait:	
   973                           ; 1 bytes @ 0xE
   974                           
   975  002E                     sys_tick_start_periodic@tick:	
   976                           ; 4 bytes @ 0xE
   977                           
   978                           
   979                           ; 4 bytes @ 0xE
   980  002E                     	ds	1
   981  002F                     wait_for_status@status_to_wait:
   982                           
   983                           ; 1 bytes @ 0xF
   984  002F                     	ds	1
   985  0030                     ?_znp_af_data_request:
   986  0030                     ??_wait_for_status:	
   987                           ; 1 bytes @ 0x10
   988                           
   989  0030                     ??_znp_set_startopt:	
   990                           ; 1 bytes @ 0x10
   991                           
   992  0030                     ??_znp_set_logical_type:	
   993                           ; 1 bytes @ 0x10
   994                           
   995  0030                     ??_znp_set_channels:	
   996                           ; 1 bytes @ 0x10
   997                           
   998  0030                     ??_znp_af_register:	
   999                           ; 1 bytes @ 0x10
  1000                           
  1001  0030                     znp_set_startopt@startopt:	
  1002                           ; 1 bytes @ 0x10
  1003                           
  1004  0030                     znp_af_register@endpoint:	
  1005                           ; 1 bytes @ 0x10
  1006                           
  1007  0030                     sys_tick_register_callback_handler@cb:	
  1008                           ; 1 bytes @ 0x10
  1009                           
  1010  0030                     sys_tick_stop@handle:	
  1011                           ; 1 bytes @ 0x10
  1012                           
  1013  0030                     znp_af_data_request@dst_addr:	
  1014                           ; 1 bytes @ 0x10
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x10
  1018  0030                     	ds	1
  1019  0031                     ??_znp_router_start:
  1020  0031                     sys_tick_register_callback_handler@_handler_index:	
  1021                           ; 1 bytes @ 0x11
  1022                           
  1023  0031                     sys_tick_stop@i:	
  1024                           ; 1 bytes @ 0x11
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x11
  1028  0031                     	ds	1
  1029  0032                     ??_led_ind_init:
  1030  0032                     ??_xEventGroupWaitBits:	
  1031                           ; 1 bytes @ 0x12
  1032                           
  1033  0032                     ??_led_ind_blink_stop:	
  1034                           ; 1 bytes @ 0x12
  1035                           
  1036  0032                     ??_sys_tick_start_periodic:	
  1037                           ; 1 bytes @ 0x12
  1038                           
  1039  0032                     znp_af_data_request@endpoint:	
  1040                           ; 1 bytes @ 0x12
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x12
  1044  0032                     	ds	1
  1045  0033                     znp_router_start@start_opt:
  1046  0033                     znp_af_data_request@cluster_id:	
  1047                           ; 1 bytes @ 0x13
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0x13
  1051  0033                     	ds	1
  1052  0034                     sys_tick_start_periodic@handle:
  1053                           
  1054                           ; 1 bytes @ 0x14
  1055  0034                     	ds	1
  1056  0035                     znp_af_data_request@data:
  1057  0035                     sys_tick_start_periodic@i:	
  1058                           ; 1 bytes @ 0x15
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x15
  1062  0035                     	ds	1
  1063  0036                     ??_led_ind_blink_start:
  1064  0036                     znp_af_data_request@len:	
  1065                           ; 1 bytes @ 0x16
  1066                           
  1067  0036                     xEventGroupWaitBits@last_tick:	
  1068                           ; 1 bytes @ 0x16
  1069                           
  1070                           
  1071                           ; 4 bytes @ 0x16
  1072  0036                     	ds	1
  1073  0037                     znp_af_data_request@wait_for_rsps:
  1074                           
  1075                           ; 1 bytes @ 0x17
  1076  0037                     	ds	1
  1077  0038                     ??_znp_af_data_request:
  1078                           
  1079                           ; 1 bytes @ 0x18
  1080  0038                     	ds	2
  1081  003A                     znp_af_data_request@fcs_calc:
  1082  003A                     xEventGroupWaitBits@uxBitsToWaitFor:	
  1083                           ; 1 bytes @ 0x1A
  1084                           
  1085                           
  1086                           ; 1 bytes @ 0x1A
  1087  003A                     	ds	1
  1088  003B                     znp_af_data_request@i:
  1089                           
  1090                           ; 1 bytes @ 0x1B
  1091  003B                     	ds	1
  1092  003C                     ?_znp_send_msg:
  1093  003C                     znp_send_msg@dst_addr:	
  1094                           ; 1 bytes @ 0x1C
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x1C
  1098  003C                     	ds	2
  1099  003E                     znp_send_msg@endpoint:
  1100                           
  1101                           ; 1 bytes @ 0x1E
  1102  003E                     	ds	1
  1103  003F                     znp_send_msg@wait_for_rsps:
  1104                           
  1105                           ; 1 bytes @ 0x1F
  1106  003F                     	ds	1
  1107  0040                     ??_znp_send_msg:
  1108                           
  1109                           ; 1 bytes @ 0x20
  1110  0040                     	ds	4
  1111  0044                     znp_send_msg@data:
  1112                           
  1113                           ; 1 bytes @ 0x24
  1114  0044                     	ds	1
  1115  0045                     znp_send_msg@len:
  1116                           
  1117                           ; 1 bytes @ 0x25
  1118  0045                     	ds	1
  1119  0046                     ??_main:
  1120                           
  1121                           ; 1 bytes @ 0x26
  1122  0046                     	ds	4
  1123  004A                     main@keepalive_tick:
  1124                           
  1125                           ; 4 bytes @ 0x2A
  1126  004A                     	ds	4
  1127  004E                     main@relay_node_lsb_addr:
  1128                           
  1129                           ; 1 bytes @ 0x2E
  1130  004E                     	ds	1
  1131  004F                     main@relay_node_msb_addr:
  1132                           
  1133                           ; 1 bytes @ 0x2F
  1134  004F                     	ds	1
  1135                           
  1136                           	psect	maintext
  1137  002C                     __pmaintext:	
  1138 ;;
  1139 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1140 ;;
  1141 ;; *************** function _main *****************
  1142 ;; Defined at:
  1143 ;;		line 154 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  keepalive_ti    4   42[BANK0 ] unsigned long 
  1148 ;;  relay_node_m    1   47[BANK0 ] unsigned char 
  1149 ;;  relay_node_l    1   46[BANK0 ] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : B00/0
  1156 ;;		On exit  : 300/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1159 ;;      Params:         0       0       0       0
  1160 ;;      Locals:         0       6       0       0
  1161 ;;      Temps:          0       4       0       0
  1162 ;;      Totals:         0      10       0       0
  1163 ;;Total ram usage:       10 bytes
  1164 ;; Hardware stack levels required when called: 9
  1165 ;; This function calls:
  1166 ;;		_button_init
  1167 ;;		_eeprom_read
  1168 ;;		_eeprom_write
  1169 ;;		_led_button_init
  1170 ;;		_led_ind_blink_start
  1171 ;;		_led_ind_blink_stop
  1172 ;;		_led_ind_init
  1173 ;;		_led_ind_off
  1174 ;;		_led_ind_on
  1175 ;;		_sys_tick_get_tick
  1176 ;;		_sys_tick_init
  1177 ;;		_xEventGroupClearBits
  1178 ;;		_xEventGroupCreate
  1179 ;;		_xEventGroupGetBits
  1180 ;;		_xEventGroupWaitBits
  1181 ;;		_znp_init
  1182 ;;		_znp_router_start
  1183 ;;		_znp_send_msg
  1184 ;; This function is called by:
  1185 ;;		Startup code after reset
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189  002C                     _main:	
  1190                           ;psect for function _main
  1191                           
  1192                           
  1193                           ;main.c: 155:     CMCONbits.CM = 0b111;
  1194                           
  1195                           ;incstack = 0
  1196 ;; hardware stack exceeded
  1197                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1198  002C  3007               	movlw	7
  1199  002D  049F               	iorwf	31,f	;volatile
  1200                           
  1201                           ;main.c: 156:     INTCONbits.GIE = 1;
  1202  002E  178B               	bsf	11,7	;volatile
  1203                           
  1204                           ;main.c: 157:     INTCONbits.PEIE = 1;
  1205  002F  170B               	bsf	11,6	;volatile
  1206                           
  1207                           ;main.c: 158:     OPTION_REGbits.nRBPU = 0;
  1208  0030  1683               	bsf	3,5	;RP0=1, select bank1
  1209  0031  1381               	bcf	1,7	;volatile
  1210                           
  1211                           ;main.c: 160:     if (!PORTBbits.RB7) eeprom_write(0, 0x00);
  1212  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0033  1B86               	btfsc	6,7	;volatile
  1214  0034  2838               	goto	l2341
  1215  0035  01AA               	clrf	eeprom_write@value
  1216  0036  3000               	movlw	0
  1217  0037  25BE               	fcall	_eeprom_write
  1218  0038                     l2341:
  1219                           
  1220                           ;main.c: 162:     button_data.raw[1] |= 0xE0;
  1221  0038  30E0               	movlw	224
  1222  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1223  003A  00C6               	movwf	??_main
  1224  003B  0846               	movf	??_main,w
  1225  003C  04E1               	iorwf	_button_data+1,f
  1226                           
  1227                           ;main.c: 164:     uint8_t relay_node_lsb_addr
  1228  003D  3002               	movlw	2
  1229  003E  2663               	fcall	_eeprom_read
  1230  003F  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0040  00C6               	movwf	??_main
  1232  0041  0846               	movf	??_main,w
  1233  0042  00CE               	movwf	main@relay_node_lsb_addr
  1234                           
  1235                           ;main.c: 166:     uint8_t relay_node_msb_addr
  1236  0043  3003               	movlw	3
  1237  0044  2663               	fcall	_eeprom_read
  1238  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0046  00C6               	movwf	??_main
  1240  0047  0846               	movf	??_main,w
  1241  0048  00CF               	movwf	main@relay_node_msb_addr
  1242                           
  1243                           ;main.c: 168:     relay_node_addr
  1244  0049  084F               	movf	main@relay_node_msb_addr,w
  1245  004A  00C6               	movwf	??_main
  1246  004B  01C7               	clrf	??_main+1
  1247  004C  0846               	movf	??_main,w
  1248  004D  00C7               	movwf	??_main+1
  1249  004E  01C6               	clrf	??_main
  1250  004F  084E               	movf	main@relay_node_lsb_addr,w
  1251  0050  0746               	addwf	??_main,w
  1252  0051  00D2               	movwf	_relay_node_addr
  1253  0052  0847               	movf	??_main+1,w
  1254  0053  1803               	skipnc
  1255  0054  0A47               	incf	??_main+1,w
  1256  0055  00D3               	movwf	_relay_node_addr+1
  1257                           
  1258                           ;main.c: 171:     sys_tick_init();
  1259  0056  261A               	fcall	_sys_tick_init
  1260                           
  1261                           ;main.c: 172:     xEventGroupCreate();
  1262  0057  27C5               	fcall	_xEventGroupCreate
  1263                           
  1264                           ;main.c: 173:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1265  0058  3082               	movlw	130
  1266  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1267  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1268  005B  00C7               	movwf	??_main+1
  1269  005C  30DD               	movlw	221
  1270  005D  00C6               	movwf	??_main
  1271  005E                     u1657:
  1272  005E  0BC6               	decfsz	??_main,f
  1273  005F  285E               	goto	u1657
  1274  0060  0BC7               	decfsz	??_main+1,f
  1275  0061  285E               	goto	u1657
  1276  0062  0000               	nop
  1277                           
  1278                           ;main.c: 175:     led_ind_init();
  1279  0063  278E               	fcall	_led_ind_init
  1280                           
  1281                           ;main.c: 176:     led_button_init();
  1282  0064  26ED               	fcall	_led_button_init
  1283                           
  1284                           ;main.c: 177:     button_init();
  1285  0065  2798               	fcall	_button_init
  1286                           
  1287                           ;main.c: 179:     led_ind_blink_start();
  1288  0066  2758               	fcall	_led_ind_blink_start
  1289                           
  1290                           ;main.c: 180:     znp_init(znp_msg_handler);
  1291  0067  3006               	movlw	(low (fp__znp_msg_handler-i1fpbase))& (0+255)
  1292  0068  2728               	fcall	_znp_init
  1293  0069                     l2365:
  1294                           
  1295                           ;main.c: 182:         if (eeprom_read(0) == 0xFE)
  1296  0069  3000               	movlw	0
  1297  006A  2663               	fcall	_eeprom_read
  1298  006B  3AFE               	xorlw	254
  1299  006C  1D03               	skipz
  1300  006D  2870               	goto	l2369
  1301                           
  1302                           ;main.c: 183:             znp_router_start(ROUTER_START_REJOIN);
  1303  006E  3001               	movlw	1
  1304  006F  2871               	goto	L1
  1305  0070                     l2369:
  1306  0070  3000               	movlw	0
  1307  0071                     L1:
  1308  0071  259B               	fcall	_znp_router_start
  1309                           
  1310                           ;main.c: 186:         uxBits = xEventGroupWaitBits((1 << 0), 100);
  1311  0072  3000               	movlw	0
  1312  0073  00B1               	movwf	xEventGroupWaitBits@ticks_to_wait+3
  1313  0074  3000               	movlw	0
  1314  0075  00B0               	movwf	xEventGroupWaitBits@ticks_to_wait+2
  1315  0076  3000               	movlw	0
  1316  0077  00AF               	movwf	xEventGroupWaitBits@ticks_to_wait+1
  1317  0078  3064               	movlw	100
  1318  0079  00AE               	movwf	xEventGroupWaitBits@ticks_to_wait
  1319  007A  3001               	movlw	1
  1320  007B  249C               	fcall	_xEventGroupWaitBits
  1321  007C  00C6               	movwf	??_main
  1322  007D  0846               	movf	??_main,w
  1323  007E  00DF               	movwf	_uxBits
  1324                           
  1325                           ;main.c: 187:     } while (!(uxBits & (1 << 0)));
  1326  007F  1C5F               	btfss	_uxBits,0
  1327  0080  2869               	goto	l2365
  1328                           
  1329                           ;main.c: 189:     eeprom_write(0, 0xFE);
  1330  0081  30FE               	movlw	254
  1331  0082  00C6               	movwf	??_main
  1332  0083  0846               	movf	??_main,w
  1333  0084  00AA               	movwf	eeprom_write@value
  1334  0085  3000               	movlw	0
  1335  0086  25BE               	fcall	_eeprom_write
  1336                           
  1337                           ;main.c: 190:     znp_send_msg(0x0000, 0x01, 1);
  1338  0087  3000               	movlw	0
  1339  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0089  00BC               	movwf	znp_send_msg@dst_addr
  1341  008A  00BD               	movwf	znp_send_msg@dst_addr+1
  1342  008B  01BE               	clrf	znp_send_msg@endpoint
  1343  008C  0ABE               	incf	znp_send_msg@endpoint,f
  1344  008D  01BF               	clrf	znp_send_msg@wait_for_rsps
  1345  008E  0ABF               	incf	znp_send_msg@wait_for_rsps,f
  1346  008F  24DD               	fcall	_znp_send_msg
  1347                           
  1348                           ;main.c: 191:     led_ind_blink_stop();
  1349  0090  27BD               	fcall	_led_ind_blink_stop
  1350                           
  1351                           ;main.c: 193:     sys_tick_t keepalive_tick = sys_tick_get_tick();
  1352  0091  268A               	fcall	_sys_tick_get_tick
  1353  0092  082D               	movf	?_sys_tick_get_tick+3,w
  1354  0093  00CD               	movwf	main@keepalive_tick+3
  1355  0094  082C               	movf	?_sys_tick_get_tick+2,w
  1356  0095  00CC               	movwf	main@keepalive_tick+2
  1357  0096  082B               	movf	?_sys_tick_get_tick+1,w
  1358  0097  00CB               	movwf	main@keepalive_tick+1
  1359  0098  082A               	movf	?_sys_tick_get_tick,w
  1360  0099  00CA               	movwf	main@keepalive_tick
  1361  009A                     l2381:
  1362                           
  1363                           ;main.c: 196:         uxBits = xEventGroupGetBits();
  1364  009A  27B9               	fcall	_xEventGroupGetBits
  1365  009B  00C6               	movwf	??_main
  1366  009C  0846               	movf	??_main,w
  1367  009D  00DF               	movwf	_uxBits
  1368                           
  1369                           ;main.c: 197:         if (uxBits & (1 << 1)) {
  1370  009E  1CDF               	btfss	_uxBits,1
  1371  009F  28AC               	goto	l2389
  1372                           
  1373                           ;main.c: 198:             znp_send_msg(0x0000, 0x02, 1);
  1374  00A0  3000               	movlw	0
  1375  00A1  00BC               	movwf	znp_send_msg@dst_addr
  1376  00A2  00BD               	movwf	znp_send_msg@dst_addr+1
  1377  00A3  3002               	movlw	2
  1378  00A4  00C6               	movwf	??_main
  1379  00A5  0846               	movf	??_main,w
  1380  00A6  00BE               	movwf	znp_send_msg@endpoint
  1381  00A7  01BF               	clrf	znp_send_msg@wait_for_rsps
  1382  00A8  0ABF               	incf	znp_send_msg@wait_for_rsps,f
  1383  00A9  24DD               	fcall	_znp_send_msg
  1384                           
  1385                           ;main.c: 199:             xEventGroupClearBits((1 << 1));
  1386  00AA  3002               	movlw	2
  1387  00AB  2763               	fcall	_xEventGroupClearBits
  1388  00AC                     l2389:
  1389                           
  1390                           ;main.c: 202:         if (uxBits & (1 << 2)) {
  1391  00AC  1D5F               	btfss	_uxBits,2
  1392  00AD  28BF               	goto	l2397
  1393                           
  1394                           ;main.c: 203:             if (relay_node_addr != 0)
  1395  00AE  0852               	movf	_relay_node_addr,w
  1396  00AF  0453               	iorwf	_relay_node_addr+1,w
  1397  00B0  1903               	btfsc	3,2
  1398  00B1  28BD               	goto	l2395
  1399                           
  1400                           ;main.c: 204:                 znp_send_msg(relay_node_addr, 0x02, 1);
  1401  00B2  0853               	movf	_relay_node_addr+1,w
  1402  00B3  00BD               	movwf	znp_send_msg@dst_addr+1
  1403  00B4  0852               	movf	_relay_node_addr,w
  1404  00B5  00BC               	movwf	znp_send_msg@dst_addr
  1405  00B6  3002               	movlw	2
  1406  00B7  00C6               	movwf	??_main
  1407  00B8  0846               	movf	??_main,w
  1408  00B9  00BE               	movwf	znp_send_msg@endpoint
  1409  00BA  01BF               	clrf	znp_send_msg@wait_for_rsps
  1410  00BB  0ABF               	incf	znp_send_msg@wait_for_rsps,f
  1411  00BC  24DD               	fcall	_znp_send_msg
  1412  00BD                     l2395:
  1413                           
  1414                           ;main.c: 205:             xEventGroupClearBits((1 << 2));
  1415  00BD  3004               	movlw	4
  1416  00BE  2763               	fcall	_xEventGroupClearBits
  1417  00BF                     l2397:
  1418                           
  1419                           ;main.c: 208:         if (uxBits & (1 << 3)) {
  1420  00BF  1DDF               	btfss	_uxBits,3
  1421  00C0  28D0               	goto	l2401
  1422                           
  1423                           ;main.c: 209:             eeprom_write(2, ((relay_node_addr) & 0xFF));
  1424  00C1  0852               	movf	_relay_node_addr,w
  1425  00C2  00C6               	movwf	??_main
  1426  00C3  0846               	movf	??_main,w
  1427  00C4  00AA               	movwf	eeprom_write@value
  1428  00C5  3002               	movlw	2
  1429  00C6  25BE               	fcall	_eeprom_write
  1430                           
  1431                           ;main.c: 210:             eeprom_write(3, (((relay_node_addr) >> 8) & 0xFF));
  1432  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1433  00C8  0853               	movf	_relay_node_addr+1,w
  1434  00C9  00C6               	movwf	??_main
  1435  00CA  0846               	movf	??_main,w
  1436  00CB  00AA               	movwf	eeprom_write@value
  1437  00CC  3003               	movlw	3
  1438  00CD  25BE               	fcall	_eeprom_write
  1439                           
  1440                           ;main.c: 211:             xEventGroupClearBits((1 << 3));
  1441  00CE  3008               	movlw	8
  1442  00CF  2763               	fcall	_xEventGroupClearBits
  1443  00D0                     l2401:
  1444                           
  1445                           ;main.c: 214:         if (sys_tick_get_tick() - keepalive_tick >= 20) {
  1446  00D0  268A               	fcall	_sys_tick_get_tick
  1447  00D1  082A               	movf	?_sys_tick_get_tick,w
  1448  00D2  00C6               	movwf	??_main
  1449  00D3  082B               	movf	?_sys_tick_get_tick+1,w
  1450  00D4  00C7               	movwf	??_main+1
  1451  00D5  082C               	movf	?_sys_tick_get_tick+2,w
  1452  00D6  00C8               	movwf	??_main+2
  1453  00D7  082D               	movf	?_sys_tick_get_tick+3,w
  1454  00D8  00C9               	movwf	??_main+3
  1455  00D9  084A               	movf	main@keepalive_tick,w
  1456  00DA  02C6               	subwf	??_main,f
  1457  00DB  084B               	movf	main@keepalive_tick+1,w
  1458  00DC  1C03               	skipc
  1459  00DD  0F4B               	incfsz	main@keepalive_tick+1,w
  1460  00DE  28E0               	goto	u1481
  1461  00DF  28E1               	goto	u1482
  1462  00E0                     u1481:
  1463  00E0  02C7               	subwf	??_main+1,f
  1464  00E1                     u1482:
  1465  00E1  084C               	movf	main@keepalive_tick+2,w
  1466  00E2  1C03               	skipc
  1467  00E3  0F4C               	incfsz	main@keepalive_tick+2,w
  1468  00E4  28E6               	goto	u1483
  1469  00E5  28E7               	goto	u1484
  1470  00E6                     u1483:
  1471  00E6  02C8               	subwf	??_main+2,f
  1472  00E7                     u1484:
  1473  00E7  084D               	movf	main@keepalive_tick+3,w
  1474  00E8  1C03               	skipc
  1475  00E9  0F4D               	incfsz	main@keepalive_tick+3,w
  1476  00EA  28EC               	goto	u1485
  1477  00EB  28ED               	goto	u1486
  1478  00EC                     u1485:
  1479  00EC  02C9               	subwf	??_main+3,f
  1480  00ED                     u1486:
  1481  00ED  0849               	movf	??_main+3,w
  1482  00EE  1D03               	btfss	3,2
  1483  00EF  28FC               	goto	l2403
  1484  00F0  0848               	movf	??_main+2,w
  1485  00F1  1D03               	btfss	3,2
  1486  00F2  28FC               	goto	l2403
  1487  00F3  0847               	movf	??_main+1,w
  1488  00F4  1D03               	btfss	3,2
  1489  00F5  28FC               	goto	l2403
  1490  00F6  3014               	movlw	20
  1491  00F7  0246               	subwf	??_main,w
  1492  00F8  1D03               	skipz
  1493  00F9  28FA               	goto	u1493
  1494  00FA                     u1493:
  1495  00FA  1C03               	btfss	3,0
  1496  00FB  289A               	goto	l2381
  1497  00FC                     l2403:
  1498                           
  1499                           ;main.c: 215:             keepalive_tick = sys_tick_get_tick();
  1500  00FC  268A               	fcall	_sys_tick_get_tick
  1501  00FD  082D               	movf	?_sys_tick_get_tick+3,w
  1502  00FE  00CD               	movwf	main@keepalive_tick+3
  1503  00FF  082C               	movf	?_sys_tick_get_tick+2,w
  1504  0100  00CC               	movwf	main@keepalive_tick+2
  1505  0101  082B               	movf	?_sys_tick_get_tick+1,w
  1506  0102  00CB               	movwf	main@keepalive_tick+1
  1507  0103  082A               	movf	?_sys_tick_get_tick,w
  1508  0104  00CA               	movwf	main@keepalive_tick
  1509                           
  1510                           ;main.c: 216:             znp_send_msg(0x0000, 0x04, 0);
  1511  0105  3000               	movlw	0
  1512  0106  00BC               	movwf	znp_send_msg@dst_addr
  1513  0107  00BD               	movwf	znp_send_msg@dst_addr+1
  1514  0108  3004               	movlw	4
  1515  0109  00C6               	movwf	??_main
  1516  010A  0846               	movf	??_main,w
  1517  010B  00BE               	movwf	znp_send_msg@endpoint
  1518  010C  01BF               	clrf	znp_send_msg@wait_for_rsps
  1519  010D  24DD               	fcall	_znp_send_msg
  1520                           
  1521                           ;main.c: 217:             led_ind_on();
  1522  010E  27C8               	fcall	_led_ind_on
  1523                           
  1524                           ;main.c: 218:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1525  010F  300D               	movlw	13
  1526  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0112  00C7               	movwf	??_main+1
  1529  0113  30FB               	movlw	251
  1530  0114  00C6               	movwf	??_main
  1531  0115                     u1667:
  1532  0115  0BC6               	decfsz	??_main,f
  1533  0116  2915               	goto	u1667
  1534  0117  0BC7               	decfsz	??_main+1,f
  1535  0118  2915               	goto	u1667
  1536  0119  0000               	nop
  1537                           
  1538                           ;main.c: 219:             led_ind_off();
  1539  011A  27C1               	fcall	_led_ind_off
  1540  011B  289A               	goto	l2381
  1541  011C                     __end_of_main:
  1542                           
  1543                           	psect	text1
  1544  04DD                     __ptext1:	
  1545 ;; *************** function _znp_send_msg *****************
  1546 ;; Defined at:
  1547 ;;		line 135 in file "main.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  dst_addr        2   28[BANK0 ] unsigned int 
  1550 ;;  endpoint        1   30[BANK0 ] unsigned char 
  1551 ;;  wait_for_rsp    1   31[BANK0 ] _Bool 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  len             1   37[BANK0 ] unsigned char 
  1554 ;;  data            1   36[BANK0 ] PTR unsigned char 
  1555 ;;		 -> NULL(0), button_data(2), 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 300/0
  1562 ;;		On exit  : 300/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1565 ;;      Params:         0       4       0       0
  1566 ;;      Locals:         0       2       0       0
  1567 ;;      Temps:          0       4       0       0
  1568 ;;      Totals:         0      10       0       0
  1569 ;;Total ram usage:       10 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 8
  1572 ;; This function calls:
  1573 ;;		_znp_af_data_request
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579  04DD                     _znp_send_msg:	
  1580                           ;psect for function _znp_send_msg
  1581                           
  1582                           
  1583                           ;main.c: 136:     uint8_t* data = (0);
  1584                           
  1585                           ;incstack = 0
  1586 ;; hardware stack exceeded
  1587                           ; Regs used in _znp_send_msg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1588  04DD  01C4               	clrf	znp_send_msg@data
  1589                           
  1590                           ;main.c: 137:     uint8_t len = 0;
  1591  04DE  01C5               	clrf	znp_send_msg@len
  1592                           
  1593                           ;main.c: 138:     if (endpoint == 0x02) {
  1594  04DF  3002               	movlw	2
  1595  04E0  063E               	xorwf	znp_send_msg@endpoint,w
  1596  04E1  1D03               	btfss	3,2
  1597  04E2  2CFB               	goto	l2199
  1598                           
  1599                           ;main.c: 139:         button_data.button1 = PORTAbits.RA7;
  1600  04E3  1061               	bcf	_button_data+1,0
  1601  04E4  1F85               	btfss	5,7	;volatile
  1602  04E5  2CE7               	goto	u1275
  1603  04E6  1461               	bsf	_button_data+1,0
  1604  04E7                     u1275:
  1605                           
  1606                           ;main.c: 140:         button_data.button2 = PORTAbits.RA0;
  1607  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1608  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1609  04E9  10E1               	bcf	_button_data+1,1
  1610  04EA  1805               	btfsc	5,0	;volatile
  1611  04EB  14E1               	bsf	_button_data+1,1
  1612                           
  1613                           ;main.c: 141:         button_data.button3 = PORTAbits.RA1;
  1614  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1615  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1616  04EE  1161               	bcf	_button_data+1,2
  1617  04EF  1885               	btfsc	5,1	;volatile
  1618  04F0  1561               	bsf	_button_data+1,2
  1619                           
  1620                           ;main.c: 142:         data = button_data.raw;
  1621  04F1  3060               	movlw	(low (_button_data| 0))& (0+255)
  1622  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1623  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1624  04F4  00C0               	movwf	??_znp_send_msg
  1625  04F5  0840               	movf	??_znp_send_msg,w
  1626  04F6  00C4               	movwf	znp_send_msg@data
  1627                           
  1628                           ;main.c: 143:         len = sizeof (button_data.raw);
  1629  04F7  3002               	movlw	2
  1630  04F8  00C0               	movwf	??_znp_send_msg
  1631  04F9  0840               	movf	??_znp_send_msg,w
  1632  04FA  00C5               	movwf	znp_send_msg@len
  1633  04FB                     l2199:
  1634                           
  1635                           ;main.c: 146:     znp_af_data_request(dst_addr,
  1636  04FB  083D               	movf	znp_send_msg@dst_addr+1,w
  1637  04FC  00B1               	movwf	znp_af_data_request@dst_addr+1
  1638  04FD  083C               	movf	znp_send_msg@dst_addr,w
  1639  04FE  00B0               	movwf	znp_af_data_request@dst_addr
  1640  04FF  083E               	movf	znp_send_msg@endpoint,w
  1641  0500  00C0               	movwf	??_znp_send_msg
  1642  0501  0840               	movf	??_znp_send_msg,w
  1643  0502  00B2               	movwf	znp_af_data_request@endpoint
  1644  0503  3002               	movlw	2
  1645  0504  00B3               	movwf	znp_af_data_request@cluster_id
  1646  0505  3000               	movlw	0
  1647  0506  00B4               	movwf	znp_af_data_request@cluster_id+1
  1648  0507  0844               	movf	znp_send_msg@data,w
  1649  0508  00C1               	movwf	??_znp_send_msg+1
  1650  0509  0841               	movf	??_znp_send_msg+1,w
  1651  050A  00B5               	movwf	znp_af_data_request@data
  1652  050B  0845               	movf	znp_send_msg@len,w
  1653  050C  00C2               	movwf	??_znp_send_msg+2
  1654  050D  0842               	movf	??_znp_send_msg+2,w
  1655  050E  00B6               	movwf	znp_af_data_request@len
  1656  050F  083F               	movf	znp_send_msg@wait_for_rsps,w
  1657  0510  00C3               	movwf	??_znp_send_msg+3
  1658  0511  0843               	movf	??_znp_send_msg+3,w
  1659  0512  00B7               	movwf	znp_af_data_request@wait_for_rsps
  1660  0513  2386               	fcall	_znp_af_data_request
  1661  0514  0008               	return
  1662  0515                     __end_of_znp_send_msg:
  1663                           
  1664                           	psect	text2
  1665  0386                     __ptext2:	
  1666 ;; *************** function _znp_af_data_request *****************
  1667 ;; Defined at:
  1668 ;;		line 196 in file "zb_znp.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  dst_addr        2   16[BANK0 ] unsigned int 
  1671 ;;  endpoint        1   18[BANK0 ] unsigned char 
  1672 ;;  cluster_id      2   19[BANK0 ] unsigned int 
  1673 ;;  data            1   21[BANK0 ] PTR unsigned char 
  1674 ;;		 -> NULL(0), button_data(2), 
  1675 ;;  len             1   22[BANK0 ] unsigned char 
  1676 ;;  wait_for_rsp    1   23[BANK0 ] _Bool 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  i               1   27[BANK0 ] unsigned char 
  1679 ;;  fcs_calc        1   26[BANK0 ] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 300/0
  1686 ;;		On exit  : 300/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1689 ;;      Params:         0       8       0       0
  1690 ;;      Locals:         0       2       0       0
  1691 ;;      Temps:          0       2       0       0
  1692 ;;      Totals:         0      12       0       0
  1693 ;;Total ram usage:       12 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 7
  1696 ;; This function calls:
  1697 ;;		_usart_send
  1698 ;;		_wait_for_status
  1699 ;; This function is called by:
  1700 ;;		_znp_send_msg
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704  0386                     _znp_af_data_request:	
  1705                           ;psect for function _znp_af_data_request
  1706                           
  1707                           
  1708                           ;zb_znp.c: 196: void znp_af_data_request(uint16_t dst_addr,;zb_znp.c: 197:              
      +                                      uint8_t endpoint,;zb_znp.c: 198:                          uint16_t cluster_i
      +                          d,;zb_znp.c: 199:                          uint8_t* data,;zb_znp.c: 200:                
      +                                    uint8_t len,;zb_znp.c: 201:                          _Bool wait_for_rsps) {;zb
      +                          _znp.c: 202:     uint8_t fcs_calc = 0x2A;
  1709                           
  1710                           ;incstack = 0
  1711 ;; hardware stack exceeded
  1712                           ; Regs used in _znp_af_data_request: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1713  0386  302A               	movlw	42
  1714  0387  00B8               	movwf	??_znp_af_data_request
  1715  0388  0838               	movf	??_znp_af_data_request,w
  1716  0389  00BA               	movwf	znp_af_data_request@fcs_calc
  1717                           
  1718                           ;zb_znp.c: 203:     if (data == (0)) len = 0;
  1719  038A  0835               	movf	znp_af_data_request@data,w
  1720  038B  1903               	btfsc	3,2
  1721  038C  01B6               	clrf	znp_af_data_request@len
  1722                           
  1723                           ;zb_znp.c: 204:     fcs_calc ^= 10 + len;
  1724  038D  0836               	movf	znp_af_data_request@len,w
  1725  038E  3E0A               	addlw	10
  1726  038F  00B8               	movwf	??_znp_af_data_request
  1727  0390  0838               	movf	??_znp_af_data_request,w
  1728  0391  06BA               	xorwf	znp_af_data_request@fcs_calc,f
  1729                           
  1730                           ;zb_znp.c: 205:     fcs_calc ^= len;
  1731  0392  0836               	movf	znp_af_data_request@len,w
  1732  0393  00B8               	movwf	??_znp_af_data_request
  1733  0394  0838               	movf	??_znp_af_data_request,w
  1734  0395  06BA               	xorwf	znp_af_data_request@fcs_calc,f
  1735                           
  1736                           ;zb_znp.c: 206:     fcs_calc ^= ((dst_addr) & 0xFF);
  1737  0396  0830               	movf	znp_af_data_request@dst_addr,w
  1738  0397  00B8               	movwf	??_znp_af_data_request
  1739  0398  0838               	movf	??_znp_af_data_request,w
  1740  0399  06BA               	xorwf	znp_af_data_request@fcs_calc,f
  1741                           
  1742                           ;zb_znp.c: 207:     fcs_calc ^= (((dst_addr) >> 8) & 0xFF);
  1743  039A  0831               	movf	znp_af_data_request@dst_addr+1,w
  1744  039B  00B8               	movwf	??_znp_af_data_request
  1745  039C  0838               	movf	??_znp_af_data_request,w
  1746  039D  06BA               	xorwf	znp_af_data_request@fcs_calc,f
  1747                           
  1748                           ;zb_znp.c: 208:     fcs_calc ^= ((cluster_id) & 0xFF);
  1749  039E  0833               	movf	znp_af_data_request@cluster_id,w
  1750  039F  00B8               	movwf	??_znp_af_data_request
  1751  03A0  0838               	movf	??_znp_af_data_request,w
  1752  03A1  06BA               	xorwf	znp_af_data_request@fcs_calc,f
  1753                           
  1754                           ;zb_znp.c: 209:     fcs_calc ^= (((cluster_id) >> 8) & 0xFF);
  1755  03A2  0834               	movf	znp_af_data_request@cluster_id+1,w
  1756  03A3  00B8               	movwf	??_znp_af_data_request
  1757  03A4  0838               	movf	??_znp_af_data_request,w
  1758  03A5  06BA               	xorwf	znp_af_data_request@fcs_calc,f
  1759                           
  1760                           ;zb_znp.c: 211:     usart_send(0xFE);
  1761  03A6  30FE               	movlw	254
  1762  03A7  27A9               	fcall	_usart_send
  1763                           
  1764                           ;zb_znp.c: 212:     usart_send(10 + len);
  1765  03A8  0836               	movf	znp_af_data_request@len,w
  1766  03A9  3E0A               	addlw	10
  1767  03AA  27A9               	fcall	_usart_send
  1768                           
  1769                           ;zb_znp.c: 213:     usart_send(0x24);
  1770  03AB  3024               	movlw	36
  1771  03AC  27A9               	fcall	_usart_send
  1772                           
  1773                           ;zb_znp.c: 214:     usart_send(0x01);
  1774  03AD  3001               	movlw	1
  1775  03AE  27A9               	fcall	_usart_send
  1776                           
  1777                           ;zb_znp.c: 215:     usart_send(((dst_addr) & 0xFF));
  1778  03AF  0830               	movf	znp_af_data_request@dst_addr,w
  1779  03B0  27A9               	fcall	_usart_send
  1780                           
  1781                           ;zb_znp.c: 216:     usart_send((((dst_addr) >> 8) & 0xFF));
  1782  03B1  0831               	movf	znp_af_data_request@dst_addr+1,w
  1783  03B2  27A9               	fcall	_usart_send
  1784                           
  1785                           ;zb_znp.c: 217:     usart_send(endpoint);
  1786  03B3  0832               	movf	znp_af_data_request@endpoint,w
  1787  03B4  27A9               	fcall	_usart_send
  1788                           
  1789                           ;zb_znp.c: 218:     usart_send(endpoint);
  1790  03B5  0832               	movf	znp_af_data_request@endpoint,w
  1791  03B6  27A9               	fcall	_usart_send
  1792                           
  1793                           ;zb_znp.c: 219:     usart_send(((cluster_id) & 0xFF));
  1794  03B7  0833               	movf	znp_af_data_request@cluster_id,w
  1795  03B8  27A9               	fcall	_usart_send
  1796                           
  1797                           ;zb_znp.c: 220:     usart_send((((cluster_id) >> 8) & 0xFF));
  1798  03B9  0834               	movf	znp_af_data_request@cluster_id+1,w
  1799  03BA  27A9               	fcall	_usart_send
  1800                           
  1801                           ;zb_znp.c: 221:     usart_send(0x00);
  1802  03BB  3000               	movlw	0
  1803  03BC  27A9               	fcall	_usart_send
  1804                           
  1805                           ;zb_znp.c: 222:     usart_send(0x00);
  1806  03BD  3000               	movlw	0
  1807  03BE  27A9               	fcall	_usart_send
  1808                           
  1809                           ;zb_znp.c: 223:     usart_send(0x0F);
  1810  03BF  300F               	movlw	15
  1811  03C0  27A9               	fcall	_usart_send
  1812                           
  1813                           ;zb_znp.c: 224:     usart_send(len);
  1814  03C1  0836               	movf	znp_af_data_request@len,w
  1815  03C2  27A9               	fcall	_usart_send
  1816                           
  1817                           ;zb_znp.c: 225:     for (uint8_t i = 0; i < len; i++) {
  1818  03C3  01BB               	clrf	znp_af_data_request@i
  1819  03C4                     l1965:
  1820  03C4  0836               	movf	znp_af_data_request@len,w
  1821  03C5  023B               	subwf	znp_af_data_request@i,w
  1822  03C6  1803               	btfsc	3,0
  1823  03C7  2BDF               	goto	l1967
  1824                           
  1825                           ;zb_znp.c: 226:         usart_send(data[i]);
  1826  03C8  083B               	movf	znp_af_data_request@i,w
  1827  03C9  0735               	addwf	znp_af_data_request@data,w
  1828  03CA  00B8               	movwf	??_znp_af_data_request
  1829  03CB  0838               	movf	??_znp_af_data_request,w
  1830  03CC  0084               	movwf	4
  1831  03CD  1383               	bcf	3,7	;select IRP bank0
  1832  03CE  0800               	movf	0,w
  1833  03CF  27A9               	fcall	_usart_send
  1834                           
  1835                           ;zb_znp.c: 227:         fcs_calc ^= data[i];
  1836  03D0  083B               	movf	znp_af_data_request@i,w
  1837  03D1  0735               	addwf	znp_af_data_request@data,w
  1838  03D2  00B8               	movwf	??_znp_af_data_request
  1839  03D3  0838               	movf	??_znp_af_data_request,w
  1840  03D4  0084               	movwf	4
  1841  03D5  1383               	bcf	3,7	;select IRP bank0
  1842  03D6  0800               	movf	0,w
  1843  03D7  00B9               	movwf	??_znp_af_data_request+1
  1844  03D8  0839               	movf	??_znp_af_data_request+1,w
  1845  03D9  06BA               	xorwf	znp_af_data_request@fcs_calc,f
  1846                           
  1847                           ;zb_znp.c: 228:     }
  1848  03DA  3001               	movlw	1
  1849  03DB  00B8               	movwf	??_znp_af_data_request
  1850  03DC  0838               	movf	??_znp_af_data_request,w
  1851  03DD  07BB               	addwf	znp_af_data_request@i,f
  1852  03DE  2BC4               	goto	l1965
  1853  03DF                     l1967:
  1854                           
  1855                           ;zb_znp.c: 229:     usart_send(fcs_calc);
  1856  03DF  083A               	movf	znp_af_data_request@fcs_calc,w
  1857  03E0  27A9               	fcall	_usart_send
  1858                           
  1859                           ;zb_znp.c: 231:     if (wait_for_rsps)
  1860  03E1  0837               	movf	znp_af_data_request@wait_for_rsps,w
  1861  03E2  1903               	btfsc	3,2
  1862  03E3  0008               	return
  1863                           
  1864                           ;zb_znp.c: 232:         wait_for_status(0x6401, 0, 0x00);
  1865  03E4  3001               	movlw	1
  1866  03E5  00AC               	movwf	wait_for_status@cmd
  1867  03E6  3064               	movlw	100
  1868  03E7  00AD               	movwf	wait_for_status@cmd+1
  1869  03E8  01AE               	clrf	wait_for_status@offset
  1870  03E9  01AF               	clrf	wait_for_status@status_to_wait
  1871  03EA  271A               	fcall	_wait_for_status
  1872  03EB  0008               	return
  1873  03EC                     __end_of_znp_af_data_request:
  1874                           
  1875                           	psect	text3
  1876  059B                     __ptext3:	
  1877 ;; *************** function _znp_router_start *****************
  1878 ;; Defined at:
  1879 ;;		line 235 in file "zb_znp.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  start_opt       1    wreg     enum E716
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  start_opt       1   19[BANK0 ] enum E716
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 300/100
  1890 ;;		On exit  : B00/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1893 ;;      Params:         0       0       0       0
  1894 ;;      Locals:         0       1       0       0
  1895 ;;      Temps:          0       2       0       0
  1896 ;;      Totals:         0       3       0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 8
  1900 ;; This function calls:
  1901 ;;		_znp_af_register
  1902 ;;		_znp_hard_reset
  1903 ;;		_znp_set_channels
  1904 ;;		_znp_set_logical_type
  1905 ;;		_znp_set_startopt
  1906 ;;		_znp_zdo_startup_from_app
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912  059B                     _znp_router_start:	
  1913                           ;psect for function _znp_router_start
  1914                           
  1915                           
  1916                           ;incstack = 0
  1917 ;; hardware stack exceeded
  1918                           ; Regs used in _znp_router_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1919                           ;znp_router_start@start_opt stored from wreg
  1920  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1921  059C  00B3               	movwf	znp_router_start@start_opt
  1922                           
  1923                           ;zb_znp.c: 236:     znp_hard_reset();
  1924  059D  264E               	fcall	_znp_hard_reset
  1925                           
  1926                           ;zb_znp.c: 237:     switch (start_opt) {
  1927  059E  2DA5               	goto	l2267
  1928  059F                     l2261:
  1929                           
  1930                           ;zb_znp.c: 239:             znp_set_startopt(((1 << 0) | (1 << 1)));
  1931  059F  3003               	movlw	3
  1932  05A0  25DF               	fcall	_znp_set_startopt
  1933                           
  1934                           ;zb_znp.c: 240:             znp_set_logical_type();
  1935  05A1  25FE               	fcall	_znp_set_logical_type
  1936                           
  1937                           ;zb_znp.c: 241:             znp_set_channels();
  1938  05A2  2515               	fcall	_znp_set_channels
  1939  05A3                     l2263:
  1940                           
  1941                           ;zb_znp.c: 243:             znp_zdo_startup_from_app();
  1942  05A3  2678               	fcall	_znp_zdo_startup_from_app
  1943                           
  1944                           ;zb_znp.c: 244:             break;
  1945  05A4  2DB5               	goto	l2269
  1946  05A5                     l2267:
  1947  05A5  0833               	movf	znp_router_start@start_opt,w
  1948  05A6  00B1               	movwf	??_znp_router_start
  1949  05A7  01B2               	clrf	??_znp_router_start+1
  1950                           
  1951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1952                           ; Switch size 1, requested type "simple"
  1953                           ; Number of cases is 1, Range of values is 0 to 0
  1954                           ; switch strategies available:
  1955                           ; Name         Instructions Cycles
  1956                           ; simple_byte            4     3 (average)
  1957                           ; direct_byte            7     6 (fixed)
  1958                           ; jumptable            260     6 (fixed)
  1959                           ;	Chosen strategy is simple_byte
  1960  05A8  0832               	movf	??_znp_router_start+1,w
  1961  05A9  3A00               	xorlw	0	; case 0
  1962  05AA  1903               	skipnz
  1963  05AB  2DAD               	goto	l2569
  1964  05AC  2DB5               	goto	l2269
  1965  05AD                     l2569:
  1966                           
  1967                           ; Switch size 1, requested type "simple"
  1968                           ; Number of cases is 2, Range of values is 0 to 1
  1969                           ; switch strategies available:
  1970                           ; Name         Instructions Cycles
  1971                           ; simple_byte            7     4 (average)
  1972                           ; direct_byte            8     6 (fixed)
  1973                           ; jumptable            260     6 (fixed)
  1974                           ;	Chosen strategy is simple_byte
  1975  05AD  0831               	movf	??_znp_router_start,w
  1976  05AE  3A00               	xorlw	0	; case 0
  1977  05AF  1903               	skipnz
  1978  05B0  2D9F               	goto	l2261
  1979  05B1  3A01               	xorlw	1	; case 1
  1980  05B2  1903               	skipnz
  1981  05B3  2DA3               	goto	l2263
  1982  05B4  2DB5               	goto	l2269
  1983  05B5                     l2269:
  1984                           
  1985                           ;zb_znp.c: 248:     znp_af_register(0x01);
  1986  05B5  3001               	movlw	1
  1987  05B6  2575               	fcall	_znp_af_register
  1988                           
  1989                           ;zb_znp.c: 249:     znp_af_register(0x02);
  1990  05B7  3002               	movlw	2
  1991  05B8  2575               	fcall	_znp_af_register
  1992                           
  1993                           ;zb_znp.c: 250:     znp_af_register(0x03);
  1994  05B9  3003               	movlw	3
  1995  05BA  2575               	fcall	_znp_af_register
  1996                           
  1997                           ;zb_znp.c: 251:     znp_af_register(0x04);
  1998  05BB  3004               	movlw	4
  1999  05BC  2575               	fcall	_znp_af_register
  2000  05BD  0008               	return
  2001  05BE                     __end_of_znp_router_start:
  2002                           
  2003                           	psect	text4
  2004  0678                     __ptext4:	
  2005 ;; *************** function _znp_zdo_startup_from_app *****************
  2006 ;; Defined at:
  2007 ;;		line 186 in file "zb_znp.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 300/0
  2018 ;;		On exit  : 300/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2021 ;;      Params:         0       0       0       0
  2022 ;;      Locals:         0       0       0       0
  2023 ;;      Temps:          0       0       0       0
  2024 ;;      Totals:         0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 6
  2028 ;; This function calls:
  2029 ;;		_usart_send
  2030 ;;		_wait_for_msg
  2031 ;; This function is called by:
  2032 ;;		_znp_router_start
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036  0678                     _znp_zdo_startup_from_app:	
  2037                           ;psect for function _znp_zdo_startup_from_app
  2038                           
  2039                           
  2040                           ;zb_znp.c: 187:     usart_send(0xFE);
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _znp_zdo_startup_from_app: [wreg+status,2+status,0+pclath+cstack]
  2044  0678  30FE               	movlw	254
  2045  0679  27A9               	fcall	_usart_send
  2046                           
  2047                           ;zb_znp.c: 188:     usart_send(0x01);
  2048  067A  3001               	movlw	1
  2049  067B  27A9               	fcall	_usart_send
  2050                           
  2051                           ;zb_znp.c: 189:     usart_send(0x25);
  2052  067C  3025               	movlw	37
  2053  067D  27A9               	fcall	_usart_send
  2054                           
  2055                           ;zb_znp.c: 190:     usart_send(0x40);
  2056  067E  3040               	movlw	64
  2057  067F  27A9               	fcall	_usart_send
  2058                           
  2059                           ;zb_znp.c: 191:     usart_send(0x00);
  2060  0680  3000               	movlw	0
  2061  0681  27A9               	fcall	_usart_send
  2062                           
  2063                           ;zb_znp.c: 192:     usart_send(0x64);
  2064  0682  3064               	movlw	100
  2065  0683  27A9               	fcall	_usart_send
  2066                           
  2067                           ;zb_znp.c: 193:     wait_for_msg(0x4F80);
  2068  0684  3080               	movlw	128
  2069  0685  00AA               	movwf	wait_for_msg@cmd
  2070  0686  304F               	movlw	79
  2071  0687  00AB               	movwf	wait_for_msg@cmd+1
  2072  0688  274D               	fcall	_wait_for_msg
  2073  0689  0008               	return
  2074  068A                     __end_of_znp_zdo_startup_from_app:
  2075                           
  2076                           	psect	text5
  2077  05DF                     __ptext5:	
  2078 ;; *************** function _znp_set_startopt *****************
  2079 ;; Defined at:
  2080 ;;		line 94 in file "zb_znp.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  startopt        1    wreg     unsigned char 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  startopt        1   16[BANK0 ] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 300/0
  2091 ;;		On exit  : 300/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2094 ;;      Params:         0       0       0       0
  2095 ;;      Locals:         0       1       0       0
  2096 ;;      Temps:          0       0       0       0
  2097 ;;      Totals:         0       1       0       0
  2098 ;;Total ram usage:        1 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 7
  2101 ;; This function calls:
  2102 ;;		_usart_send
  2103 ;;		_wait_for_status
  2104 ;;		_znp_hard_reset
  2105 ;; This function is called by:
  2106 ;;		_znp_router_start
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110  05DF                     _znp_set_startopt:	
  2111                           ;psect for function _znp_set_startopt
  2112                           
  2113                           
  2114                           ;incstack = 0
  2115 ;; hardware stack exceeded
  2116                           ; Regs used in _znp_set_startopt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2117                           ;znp_set_startopt@startopt stored from wreg
  2118  05DF  00B0               	movwf	znp_set_startopt@startopt
  2119                           
  2120                           ;zb_znp.c: 95:     usart_send(0xFE);
  2121  05E0  30FE               	movlw	254
  2122  05E1  27A9               	fcall	_usart_send
  2123                           
  2124                           ;zb_znp.c: 96:     usart_send(0x05);
  2125  05E2  3005               	movlw	5
  2126  05E3  27A9               	fcall	_usart_send
  2127                           
  2128                           ;zb_znp.c: 97:     usart_send(0x21);
  2129  05E4  3021               	movlw	33
  2130  05E5  27A9               	fcall	_usart_send
  2131                           
  2132                           ;zb_znp.c: 98:     usart_send(0x09);
  2133  05E6  3009               	movlw	9
  2134  05E7  27A9               	fcall	_usart_send
  2135                           
  2136                           ;zb_znp.c: 99:     usart_send(0x03);
  2137  05E8  3003               	movlw	3
  2138  05E9  27A9               	fcall	_usart_send
  2139                           
  2140                           ;zb_znp.c: 100:     usart_send(0x00);
  2141  05EA  3000               	movlw	0
  2142  05EB  27A9               	fcall	_usart_send
  2143                           
  2144                           ;zb_znp.c: 101:     usart_send(0x00);
  2145  05EC  3000               	movlw	0
  2146  05ED  27A9               	fcall	_usart_send
  2147                           
  2148                           ;zb_znp.c: 102:     usart_send(0x01);
  2149  05EE  3001               	movlw	1
  2150  05EF  27A9               	fcall	_usart_send
  2151                           
  2152                           ;zb_znp.c: 103:     usart_send(startopt);
  2153  05F0  0830               	movf	znp_set_startopt@startopt,w
  2154  05F1  27A9               	fcall	_usart_send
  2155                           
  2156                           ;zb_znp.c: 104:     usart_send(0x2F ^ startopt);
  2157  05F2  0830               	movf	znp_set_startopt@startopt,w
  2158  05F3  3A2F               	xorlw	47
  2159  05F4  27A9               	fcall	_usart_send
  2160                           
  2161                           ;zb_znp.c: 105:     wait_for_status(0x6109, 0, 0x00);
  2162  05F5  3009               	movlw	9
  2163  05F6  00AC               	movwf	wait_for_status@cmd
  2164  05F7  3061               	movlw	97
  2165  05F8  00AD               	movwf	wait_for_status@cmd+1
  2166  05F9  01AE               	clrf	wait_for_status@offset
  2167  05FA  01AF               	clrf	wait_for_status@status_to_wait
  2168  05FB  271A               	fcall	_wait_for_status
  2169                           
  2170                           ;zb_znp.c: 107:     znp_hard_reset();
  2171  05FC  264E               	fcall	_znp_hard_reset
  2172  05FD  0008               	return
  2173  05FE                     __end_of_znp_set_startopt:
  2174                           
  2175                           	psect	text6
  2176  064E                     __ptext6:	
  2177 ;; *************** function _znp_hard_reset *****************
  2178 ;; Defined at:
  2179 ;;		line 161 in file "zb_znp.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, pclath, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 300/0
  2190 ;;		On exit  : 300/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2193 ;;      Params:         0       0       0       0
  2194 ;;      Locals:         0       0       0       0
  2195 ;;      Temps:          0       2       0       0
  2196 ;;      Totals:         0       2       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 6
  2200 ;; This function calls:
  2201 ;;		_wait_for_msg
  2202 ;; This function is called by:
  2203 ;;		_znp_set_startopt
  2204 ;;		_znp_router_start
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208  064E                     _znp_hard_reset:	
  2209                           ;psect for function _znp_hard_reset
  2210                           
  2211                           
  2212                           ;zb_znp.c: 162:     PORTBbits.RB3 = 0;
  2213                           
  2214                           ;incstack = 0
  2215 ;; hardware stack exceeded
  2216                           ; Regs used in _znp_hard_reset: [wreg+status,2+status,0+pclath+cstack]
  2217  064E  1186               	bcf	6,3	;volatile
  2218                           
  2219                           ;zb_znp.c: 163:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2220  064F  300D               	movlw	13
  2221  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0652  00AD               	movwf	??_znp_hard_reset+1
  2224  0653  30FB               	movlw	251
  2225  0654  00AC               	movwf	??_znp_hard_reset
  2226  0655                     u1677:
  2227  0655  0BAC               	decfsz	??_znp_hard_reset,f
  2228  0656  2E55               	goto	u1677
  2229  0657  0BAD               	decfsz	??_znp_hard_reset+1,f
  2230  0658  2E55               	goto	u1677
  2231  0659  0000               	nop
  2232                           
  2233                           ;zb_znp.c: 164:     PORTBbits.RB3 = 1;
  2234  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2235  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2236  065C  1586               	bsf	6,3	;volatile
  2237                           
  2238                           ;zb_znp.c: 165:     wait_for_msg(0x4180);
  2239  065D  3080               	movlw	128
  2240  065E  00AA               	movwf	wait_for_msg@cmd
  2241  065F  3041               	movlw	65
  2242  0660  00AB               	movwf	wait_for_msg@cmd+1
  2243  0661  274D               	fcall	_wait_for_msg
  2244  0662  0008               	return
  2245  0663                     __end_of_znp_hard_reset:
  2246                           
  2247                           	psect	text7
  2248  05FE                     __ptext7:	
  2249 ;; *************** function _znp_set_logical_type *****************
  2250 ;; Defined at:
  2251 ;;		line 110 in file "zb_znp.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 300/0
  2262 ;;		On exit  : B00/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2265 ;;      Params:         0       0       0       0
  2266 ;;      Locals:         0       0       0       0
  2267 ;;      Temps:          0       0       0       0
  2268 ;;      Totals:         0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 7
  2272 ;; This function calls:
  2273 ;;		_usart_send
  2274 ;;		_wait_for_status
  2275 ;; This function is called by:
  2276 ;;		_znp_router_start
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280  05FE                     _znp_set_logical_type:	
  2281                           ;psect for function _znp_set_logical_type
  2282                           
  2283                           
  2284                           ;zb_znp.c: 111:     usart_send(0xFE);
  2285                           
  2286                           ;incstack = 0
  2287 ;; hardware stack exceeded
  2288                           ; Regs used in _znp_set_logical_type: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2289  05FE  30FE               	movlw	254
  2290  05FF  27A9               	fcall	_usart_send
  2291                           
  2292                           ;zb_znp.c: 112:     usart_send(0x05);
  2293  0600  3005               	movlw	5
  2294  0601  27A9               	fcall	_usart_send
  2295                           
  2296                           ;zb_znp.c: 113:     usart_send(0x21);
  2297  0602  3021               	movlw	33
  2298  0603  27A9               	fcall	_usart_send
  2299                           
  2300                           ;zb_znp.c: 114:     usart_send(0x09);
  2301  0604  3009               	movlw	9
  2302  0605  27A9               	fcall	_usart_send
  2303                           
  2304                           ;zb_znp.c: 115:     usart_send(0x87);
  2305  0606  3087               	movlw	135
  2306  0607  27A9               	fcall	_usart_send
  2307                           
  2308                           ;zb_znp.c: 116:     usart_send(0x00);
  2309  0608  3000               	movlw	0
  2310  0609  27A9               	fcall	_usart_send
  2311                           
  2312                           ;zb_znp.c: 117:     usart_send(0x00);
  2313  060A  3000               	movlw	0
  2314  060B  27A9               	fcall	_usart_send
  2315                           
  2316                           ;zb_znp.c: 118:     usart_send(0x01);
  2317  060C  3001               	movlw	1
  2318  060D  27A9               	fcall	_usart_send
  2319                           
  2320                           ;zb_znp.c: 119:     usart_send(0x01);
  2321  060E  3001               	movlw	1
  2322  060F  27A9               	fcall	_usart_send
  2323                           
  2324                           ;zb_znp.c: 120:     usart_send(0xAA);
  2325  0610  30AA               	movlw	170
  2326  0611  27A9               	fcall	_usart_send
  2327                           
  2328                           ;zb_znp.c: 121:     wait_for_status(0x6109, 0, 0x00);
  2329  0612  3009               	movlw	9
  2330  0613  00AC               	movwf	wait_for_status@cmd
  2331  0614  3061               	movlw	97
  2332  0615  00AD               	movwf	wait_for_status@cmd+1
  2333  0616  01AE               	clrf	wait_for_status@offset
  2334  0617  01AF               	clrf	wait_for_status@status_to_wait
  2335  0618  271A               	fcall	_wait_for_status
  2336  0619  0008               	return
  2337  061A                     __end_of_znp_set_logical_type:
  2338                           
  2339                           	psect	text8
  2340  0515                     __ptext8:	
  2341 ;; *************** function _znp_set_channels *****************
  2342 ;; Defined at:
  2343 ;;		line 124 in file "zb_znp.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : B00/0
  2354 ;;		On exit  : B00/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2357 ;;      Params:         0       0       0       0
  2358 ;;      Locals:         0       0       0       0
  2359 ;;      Temps:          0       0       0       0
  2360 ;;      Totals:         0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 7
  2364 ;; This function calls:
  2365 ;;		_usart_send
  2366 ;;		_wait_for_status
  2367 ;; This function is called by:
  2368 ;;		_znp_router_start
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372  0515                     _znp_set_channels:	
  2373                           ;psect for function _znp_set_channels
  2374                           
  2375                           
  2376                           ;zb_znp.c: 125:     usart_send(0xFE);
  2377                           
  2378                           ;incstack = 0
  2379 ;; hardware stack exceeded
  2380                           ; Regs used in _znp_set_channels: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2381  0515  30FE               	movlw	254
  2382  0516  27A9               	fcall	_usart_send
  2383                           
  2384                           ;zb_znp.c: 126:     usart_send(0x05);
  2385  0517  3005               	movlw	5
  2386  0518  27A9               	fcall	_usart_send
  2387                           
  2388                           ;zb_znp.c: 127:     usart_send(0x2F);
  2389  0519  302F               	movlw	47
  2390  051A  27A9               	fcall	_usart_send
  2391                           
  2392                           ;zb_znp.c: 128:     usart_send(0x08);
  2393  051B  3008               	movlw	8
  2394  051C  27A9               	fcall	_usart_send
  2395                           
  2396                           ;zb_znp.c: 129:     usart_send(0x01);
  2397  051D  3001               	movlw	1
  2398  051E  27A9               	fcall	_usart_send
  2399                           
  2400                           ;zb_znp.c: 130:     usart_send(0x00);
  2401  051F  3000               	movlw	0
  2402  0520  27A9               	fcall	_usart_send
  2403                           
  2404                           ;zb_znp.c: 131:     usart_send(0x20);
  2405  0521  3020               	movlw	32
  2406  0522  27A9               	fcall	_usart_send
  2407                           
  2408                           ;zb_znp.c: 132:     usart_send(0x00);
  2409  0523  3000               	movlw	0
  2410  0524  27A9               	fcall	_usart_send
  2411                           
  2412                           ;zb_znp.c: 133:     usart_send(0x00);
  2413  0525  3000               	movlw	0
  2414  0526  27A9               	fcall	_usart_send
  2415                           
  2416                           ;zb_znp.c: 134:     usart_send(0x03);
  2417  0527  3003               	movlw	3
  2418  0528  27A9               	fcall	_usart_send
  2419                           
  2420                           ;zb_znp.c: 135:     wait_for_status(0x6F08, 0, 0x00);
  2421  0529  3008               	movlw	8
  2422  052A  00AC               	movwf	wait_for_status@cmd
  2423  052B  306F               	movlw	111
  2424  052C  00AD               	movwf	wait_for_status@cmd+1
  2425  052D  01AE               	clrf	wait_for_status@offset
  2426  052E  01AF               	clrf	wait_for_status@status_to_wait
  2427  052F  271A               	fcall	_wait_for_status
  2428                           
  2429                           ;zb_znp.c: 137:     usart_send(0xFE);
  2430  0530  30FE               	movlw	254
  2431  0531  27A9               	fcall	_usart_send
  2432                           
  2433                           ;zb_znp.c: 138:     usart_send(0x05);
  2434  0532  3005               	movlw	5
  2435  0533  27A9               	fcall	_usart_send
  2436                           
  2437                           ;zb_znp.c: 139:     usart_send(0x2F);
  2438  0534  302F               	movlw	47
  2439  0535  27A9               	fcall	_usart_send
  2440                           
  2441                           ;zb_znp.c: 140:     usart_send(0x08);
  2442  0536  3008               	movlw	8
  2443  0537  27A9               	fcall	_usart_send
  2444                           
  2445                           ;zb_znp.c: 141:     usart_send(0x00);
  2446  0538  3000               	movlw	0
  2447  0539  27A9               	fcall	_usart_send
  2448                           
  2449                           ;zb_znp.c: 142:     usart_send(0x00);
  2450  053A  3000               	movlw	0
  2451  053B  27A9               	fcall	_usart_send
  2452                           
  2453                           ;zb_znp.c: 143:     usart_send(0x00);
  2454  053C  3000               	movlw	0
  2455  053D  27A9               	fcall	_usart_send
  2456                           
  2457                           ;zb_znp.c: 144:     usart_send(0x00);
  2458  053E  3000               	movlw	0
  2459  053F  27A9               	fcall	_usart_send
  2460                           
  2461                           ;zb_znp.c: 145:     usart_send(0x00);
  2462  0540  3000               	movlw	0
  2463  0541  27A9               	fcall	_usart_send
  2464                           
  2465                           ;zb_znp.c: 146:     usart_send(0x22);
  2466  0542  3022               	movlw	34
  2467  0543  27A9               	fcall	_usart_send
  2468                           
  2469                           ;zb_znp.c: 147:     wait_for_status(0x6F08, 0, 0x00);
  2470  0544  3008               	movlw	8
  2471  0545  00AC               	movwf	wait_for_status@cmd
  2472  0546  306F               	movlw	111
  2473  0547  00AD               	movwf	wait_for_status@cmd+1
  2474  0548  01AE               	clrf	wait_for_status@offset
  2475  0549  01AF               	clrf	wait_for_status@status_to_wait
  2476  054A  271A               	fcall	_wait_for_status
  2477  054B  0008               	return
  2478  054C                     __end_of_znp_set_channels:
  2479                           
  2480                           	psect	text9
  2481  0575                     __ptext9:	
  2482 ;; *************** function _znp_af_register *****************
  2483 ;; Defined at:
  2484 ;;		line 168 in file "zb_znp.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  endpoint        1    wreg     unsigned char 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  endpoint        1   16[BANK0 ] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 300/0
  2495 ;;		On exit  : B00/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2498 ;;      Params:         0       0       0       0
  2499 ;;      Locals:         0       1       0       0
  2500 ;;      Temps:          0       0       0       0
  2501 ;;      Totals:         0       1       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 7
  2505 ;; This function calls:
  2506 ;;		_usart_send
  2507 ;;		_wait_for_status
  2508 ;; This function is called by:
  2509 ;;		_znp_router_start
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513  0575                     _znp_af_register:	
  2514                           ;psect for function _znp_af_register
  2515                           
  2516                           
  2517                           ;incstack = 0
  2518 ;; hardware stack exceeded
  2519                           ; Regs used in _znp_af_register: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2520                           ;znp_af_register@endpoint stored from wreg
  2521  0575  00B0               	movwf	znp_af_register@endpoint
  2522                           
  2523                           ;zb_znp.c: 169:     usart_send(0xFE);
  2524  0576  30FE               	movlw	254
  2525  0577  27A9               	fcall	_usart_send
  2526                           
  2527                           ;zb_znp.c: 170:     usart_send(0x09);
  2528  0578  3009               	movlw	9
  2529  0579  27A9               	fcall	_usart_send
  2530                           
  2531                           ;zb_znp.c: 171:     usart_send(0x24);
  2532  057A  3024               	movlw	36
  2533  057B  27A9               	fcall	_usart_send
  2534                           
  2535                           ;zb_znp.c: 172:     usart_send(0x00);
  2536  057C  3000               	movlw	0
  2537  057D  27A9               	fcall	_usart_send
  2538                           
  2539                           ;zb_znp.c: 173:     usart_send(endpoint);
  2540  057E  0830               	movf	znp_af_register@endpoint,w
  2541  057F  27A9               	fcall	_usart_send
  2542                           
  2543                           ;zb_znp.c: 174:     usart_send(0x04);
  2544  0580  3004               	movlw	4
  2545  0581  27A9               	fcall	_usart_send
  2546                           
  2547                           ;zb_znp.c: 175:     usart_send(0x01);
  2548  0582  3001               	movlw	1
  2549  0583  27A9               	fcall	_usart_send
  2550                           
  2551                           ;zb_znp.c: 176:     usart_send(0x23);
  2552  0584  3023               	movlw	35
  2553  0585  27A9               	fcall	_usart_send
  2554                           
  2555                           ;zb_znp.c: 177:     usart_send(0x01);
  2556  0586  3001               	movlw	1
  2557  0587  27A9               	fcall	_usart_send
  2558                           
  2559                           ;zb_znp.c: 178:     usart_send(0x89);
  2560  0588  3089               	movlw	137
  2561  0589  27A9               	fcall	_usart_send
  2562                           
  2563                           ;zb_znp.c: 179:     usart_send(0x00);
  2564  058A  3000               	movlw	0
  2565  058B  27A9               	fcall	_usart_send
  2566                           
  2567                           ;zb_znp.c: 180:     usart_send(0x00);
  2568  058C  3000               	movlw	0
  2569  058D  27A9               	fcall	_usart_send
  2570                           
  2571                           ;zb_znp.c: 181:     usart_send(0x00);
  2572  058E  3000               	movlw	0
  2573  058F  27A9               	fcall	_usart_send
  2574                           
  2575                           ;zb_znp.c: 182:     usart_send(0x83 ^ endpoint);
  2576  0590  0830               	movf	znp_af_register@endpoint,w
  2577  0591  3A83               	xorlw	131
  2578  0592  27A9               	fcall	_usart_send
  2579                           
  2580                           ;zb_znp.c: 183:     wait_for_status(0x6400, 0, 0x00);
  2581  0593  3000               	movlw	0
  2582  0594  00AC               	movwf	wait_for_status@cmd
  2583  0595  3064               	movlw	100
  2584  0596  00AD               	movwf	wait_for_status@cmd+1
  2585  0597  01AE               	clrf	wait_for_status@offset
  2586  0598  01AF               	clrf	wait_for_status@status_to_wait
  2587  0599  271A               	fcall	_wait_for_status
  2588  059A  0008               	return
  2589  059B                     __end_of_znp_af_register:
  2590                           
  2591                           	psect	text10
  2592  071A                     __ptext10:	
  2593 ;; *************** function _wait_for_status *****************
  2594 ;; Defined at:
  2595 ;;		line 26 in file "zb_znp.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  cmd             2   12[BANK0 ] unsigned int 
  2598 ;;  offset          1   14[BANK0 ] unsigned char 
  2599 ;;  status_to_wa    1   15[BANK0 ] unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 300/0
  2608 ;;		On exit  : B00/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2611 ;;      Params:         0       4       0       0
  2612 ;;      Locals:         0       0       0       0
  2613 ;;      Temps:          0       0       0       0
  2614 ;;      Totals:         0       4       0       0
  2615 ;;Total ram usage:        4 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 6
  2618 ;; This function calls:
  2619 ;;		_wait_for_msg
  2620 ;; This function is called by:
  2621 ;;		_znp_set_startopt
  2622 ;;		_znp_set_logical_type
  2623 ;;		_znp_set_channels
  2624 ;;		_znp_af_register
  2625 ;;		_znp_af_data_request
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629  071A                     _wait_for_status:	
  2630                           ;psect for function _wait_for_status
  2631                           
  2632  071A                     l280:	
  2633                           ;incstack = 0
  2634 ;; hardware stack exceeded
  2635                           ; Regs used in _wait_for_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2636                           ;zb_znp.c: 27:     do {
  2637                           
  2638                           
  2639                           ;zb_znp.c: 28:         wait_for_msg(cmd);
  2640  071A  082D               	movf	wait_for_status@cmd+1,w
  2641  071B  00AB               	movwf	wait_for_msg@cmd+1
  2642  071C  082C               	movf	wait_for_status@cmd,w
  2643  071D  00AA               	movwf	wait_for_msg@cmd
  2644  071E  274D               	fcall	_wait_for_msg
  2645                           
  2646                           ;zb_znp.c: 29:     } while (znp_recv_msg.data[offset] != status_to_wait);
  2647  071F  082E               	movf	wait_for_status@offset,w
  2648  0720  3EBC               	addlw	(low ((_znp_recv_msg| 0+3)))& (0+255)
  2649  0721  0084               	movwf	4
  2650  0722  1383               	bcf	3,7	;select IRP bank1
  2651  0723  0800               	movf	0,w
  2652  0724  062F               	xorwf	wait_for_status@status_to_wait,w
  2653  0725  1903               	btfsc	3,2
  2654  0726  0008               	return
  2655  0727  2F1A               	goto	l280
  2656  0728                     __end_of_wait_for_status:
  2657                           
  2658                           	psect	text11
  2659  074D                     __ptext11:	
  2660 ;; *************** function _wait_for_msg *****************
  2661 ;; Defined at:
  2662 ;;		line 21 in file "zb_znp.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  cmd             2   10[BANK0 ] unsigned int 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2
  2671 ;; Tracked objects:
  2672 ;;		On entry : 300/0
  2673 ;;		On exit  : 300/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2676 ;;      Params:         0       2       0       0
  2677 ;;      Locals:         0       0       0       0
  2678 ;;      Temps:          0       0       0       0
  2679 ;;      Totals:         0       2       0       0
  2680 ;;Total ram usage:        2 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 5
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_wait_for_status
  2687 ;;		_znp_hard_reset
  2688 ;;		_znp_zdo_startup_from_app
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692  074D                     _wait_for_msg:	
  2693                           ;psect for function _wait_for_msg
  2694                           
  2695  074D                     l1821:	
  2696                           ;zb_znp.c: 22:     while (last_cmd_rcv != cmd);
  2697                           
  2698                           ;incstack = 0
  2699 ;; hardware stack exceeded
  2700                           ; Regs used in _wait_for_msg: [wreg+status,2]
  2701                           
  2702  074D  082B               	movf	wait_for_msg@cmd+1,w
  2703  074E  0651               	xorwf	_last_cmd_rcv+1,w
  2704  074F  1D03               	skipz
  2705  0750  2F53               	goto	u845
  2706  0751  082A               	movf	wait_for_msg@cmd,w
  2707  0752  0650               	xorwf	_last_cmd_rcv,w
  2708  0753                     u845:
  2709  0753  1D03               	skipz
  2710  0754  2F4D               	goto	l1821
  2711                           
  2712                           ;zb_znp.c: 23:     last_cmd_rcv = 0x00;
  2713  0755  01D0               	clrf	_last_cmd_rcv
  2714  0756  01D1               	clrf	_last_cmd_rcv+1
  2715  0757  0008               	return
  2716  0758                     __end_of_wait_for_msg:
  2717                           
  2718                           	psect	text12
  2719  07A9                     __ptext12:	
  2720 ;; *************** function _usart_send *****************
  2721 ;; Defined at:
  2722 ;;		line 16 in file "usart.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  c               1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  c               1   10[BANK0 ] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg
  2731 ;; Tracked objects:
  2732 ;;		On entry : 300/0
  2733 ;;		On exit  : 300/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2736 ;;      Params:         0       0       0       0
  2737 ;;      Locals:         0       1       0       0
  2738 ;;      Temps:          0       0       0       0
  2739 ;;      Totals:         0       1       0       0
  2740 ;;Total ram usage:        1 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 5
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_znp_set_startopt
  2747 ;;		_znp_set_logical_type
  2748 ;;		_znp_set_channels
  2749 ;;		_znp_af_register
  2750 ;;		_znp_zdo_startup_from_app
  2751 ;;		_znp_af_data_request
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755  07A9                     _usart_send:	
  2756                           ;psect for function _usart_send
  2757                           
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in _usart_send: [wreg]
  2761                           ;usart_send@c stored from wreg
  2762  07A9  00AA               	movwf	usart_send@c
  2763  07AA                     l246:	
  2764                           ;usart.c: 17:     while (!TXSTAbits.TRMT);
  2765                           
  2766  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  2767  07AB  1C98               	btfss	24,1	;volatile
  2768  07AC  2FAA               	goto	l246
  2769                           
  2770                           ;usart.c: 18:     TXREG = c;
  2771  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2772  07AE  082A               	movf	usart_send@c,w
  2773  07AF  0099               	movwf	25	;volatile
  2774  07B0  0008               	return
  2775  07B1                     __end_of_usart_send:
  2776                           
  2777                           	psect	text13
  2778  0728                     __ptext13:	
  2779 ;; *************** function _znp_init *****************
  2780 ;; Defined at:
  2781 ;;		line 150 in file "zb_znp.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  callback        1    wreg     PTR FTN(unsigned int ,PT
  2784 ;;		 -> znp_msg_handler(1), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  callback        1   13[BANK0 ] PTR FTN(unsigned int ,PT
  2787 ;;		 -> znp_msg_handler(1), 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0, pclath, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 300/0
  2794 ;;		On exit  : 300/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2797 ;;      Params:         0       0       0       0
  2798 ;;      Locals:         0       1       0       0
  2799 ;;      Temps:          0       1       0       0
  2800 ;;      Totals:         0       2       0       0
  2801 ;;Total ram usage:        2 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; Hardware stack levels required when called: 6
  2804 ;; This function calls:
  2805 ;;		_usart_add_isr_handler
  2806 ;;		_usart_init
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812  0728                     _znp_init:	
  2813                           ;psect for function _znp_init
  2814                           
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in _znp_init: [wreg+status,2+status,0+pclath+cstack]
  2818                           ;znp_init@callback stored from wreg
  2819  0728  00AD               	movwf	znp_init@callback
  2820                           
  2821                           ;zb_znp.c: 151:     _zb_znp_cb = callback;
  2822  0729  082D               	movf	znp_init@callback,w
  2823  072A  00AC               	movwf	??_znp_init
  2824  072B  082C               	movf	??_znp_init,w
  2825  072C  00D7               	movwf	__zb_znp_cb
  2826                           
  2827                           ;zb_znp.c: 154:     TRISBbits.TRISB3 = 0;
  2828  072D  1683               	bsf	3,5	;RP0=1, select bank1
  2829  072E  1186               	bcf	6,3	;volatile
  2830                           
  2831                           ;zb_znp.c: 155:     PORTBbits.RB3 = 0;
  2832  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0730  1186               	bcf	6,3	;volatile
  2834                           
  2835                           ;zb_znp.c: 157:     usart_init();
  2836  0731  2735               	fcall	_usart_init
  2837                           
  2838                           ;zb_znp.c: 158:     usart_add_isr_handler(znp_usart_event_handler);
  2839  0732  3007               	movlw	(low (fp__znp_usart_event_handler-i1fpbase))& (0+255)
  2840  0733  26DE               	fcall	_usart_add_isr_handler
  2841  0734  0008               	return
  2842  0735                     __end_of_znp_init:
  2843                           
  2844                           	psect	text14
  2845  0735                     __ptext14:	
  2846 ;; *************** function _usart_init *****************
  2847 ;; Defined at:
  2848 ;;		line 3 in file "usart.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg
  2857 ;; Tracked objects:
  2858 ;;		On entry : 300/0
  2859 ;;		On exit  : 300/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2862 ;;      Params:         0       0       0       0
  2863 ;;      Locals:         0       0       0       0
  2864 ;;      Temps:          0       0       0       0
  2865 ;;      Totals:         0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 5
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_znp_init
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876  0735                     _usart_init:	
  2877                           ;psect for function _usart_init
  2878                           
  2879                           
  2880                           ;usart.c: 4:     TRISBbits.TRISB1 = 1;
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _usart_init: [wreg]
  2884  0735  1683               	bsf	3,5	;RP0=1, select bank1
  2885  0736  1486               	bsf	6,1	;volatile
  2886                           
  2887                           ;usart.c: 5:     TRISBbits.TRISB2 = 1;
  2888  0737  1506               	bsf	6,2	;volatile
  2889                           
  2890                           ;usart.c: 7:     TXSTAbits.BRGH = 1;
  2891  0738  1518               	bsf	24,2	;volatile
  2892                           
  2893                           ;usart.c: 8:     TXSTAbits.SYNC = 0;
  2894  0739  1218               	bcf	24,4	;volatile
  2895                           
  2896                           ;usart.c: 9:     TXSTAbits.TXEN = 1;
  2897  073A  1698               	bsf	24,5	;volatile
  2898                           
  2899                           ;usart.c: 10:     SPBRG = 12;
  2900  073B  300C               	movlw	12
  2901  073C  0099               	movwf	25	;volatile
  2902                           
  2903                           ;usart.c: 12:     RCSTAbits.SPEN = 1;
  2904  073D  1283               	bcf	3,5	;RP0=0, select bank0
  2905  073E  1798               	bsf	24,7	;volatile
  2906                           
  2907                           ;usart.c: 13:     RCSTAbits.CREN = 1;
  2908  073F  1618               	bsf	24,4	;volatile
  2909  0740  0008               	return
  2910  0741                     __end_of_usart_init:
  2911                           
  2912                           	psect	text15
  2913  06DE                     __ptext15:	
  2914 ;; *************** function _usart_add_isr_handler *****************
  2915 ;; Defined at:
  2916 ;;		line 10 in file "it_handle.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  handler         1    wreg     PTR FTN(enum E707,PTR vo
  2919 ;;		 -> znp_usart_event_handler(1), 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  handler         1   11[BANK0 ] PTR FTN(enum E707,PTR vo
  2922 ;;		 -> znp_usart_event_handler(1), 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 300/0
  2929 ;;		On exit  : 300/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2932 ;;      Params:         0       0       0       0
  2933 ;;      Locals:         0       1       0       0
  2934 ;;      Temps:          0       1       0       0
  2935 ;;      Totals:         0       2       0       0
  2936 ;;Total ram usage:        2 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 5
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_znp_init
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946  06DE                     _usart_add_isr_handler:	
  2947                           ;psect for function _usart_add_isr_handler
  2948                           
  2949                           
  2950                           ;incstack = 0
  2951                           ; Regs used in _usart_add_isr_handler: [wreg+status,2+status,0]
  2952                           ;usart_add_isr_handler@handler stored from wreg
  2953  06DE  00AB               	movwf	usart_add_isr_handler@handler
  2954                           
  2955                           ;it_handle.c: 11:     PIE1bits.RCIE = 1;
  2956  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  2957  06E0  168C               	bsf	12,5	;volatile
  2958                           
  2959                           ;it_handle.c: 12:     OPTION_REGbits.T0CS = 0;
  2960  06E1  1281               	bcf	1,5	;volatile
  2961                           
  2962                           ;it_handle.c: 13:     OPTION_REGbits.PS = 0b011;
  2963  06E2  0801               	movf	1,w	;volatile
  2964  06E3  39F8               	andlw	-8
  2965  06E4  3803               	iorlw	3
  2966  06E5  0081               	movwf	1	;volatile
  2967                           
  2968                           ;it_handle.c: 14:     OPTION_REGbits.PSA = 0;
  2969  06E6  1181               	bcf	1,3	;volatile
  2970                           
  2971                           ;it_handle.c: 15:     _usart_rx_isr = handler;
  2972  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2973  06E8  082B               	movf	usart_add_isr_handler@handler,w
  2974  06E9  00AA               	movwf	??_usart_add_isr_handler
  2975  06EA  082A               	movf	??_usart_add_isr_handler,w
  2976  06EB  00DE               	movwf	__usart_rx_isr
  2977  06EC  0008               	return
  2978  06ED                     __end_of_usart_add_isr_handler:
  2979                           
  2980                           	psect	text16
  2981  049C                     __ptext16:	
  2982 ;; *************** function _xEventGroupWaitBits *****************
  2983 ;; Defined at:
  2984 ;;		line 10 in file "event_groups.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  uxBitsToWait    1    wreg     const unsigned char 
  2987 ;;  ticks_to_wai    4   14[BANK0 ] const unsigned long 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  uxBitsToWait    1   26[BANK0 ] const unsigned char 
  2990 ;;  last_tick       4   22[BANK0 ] unsigned long 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      unsigned char 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : B00/0
  2997 ;;		On exit  : B00/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3000 ;;      Params:         0       4       0       0
  3001 ;;      Locals:         0       5       0       0
  3002 ;;      Temps:          0       4       0       0
  3003 ;;      Totals:         0      13       0       0
  3004 ;;Total ram usage:       13 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 6
  3007 ;; This function calls:
  3008 ;;		_sys_tick_get_tick
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014  049C                     _xEventGroupWaitBits:	
  3015                           ;psect for function _xEventGroupWaitBits
  3016                           
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _xEventGroupWaitBits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3020                           ;xEventGroupWaitBits@uxBitsToWaitFor stored from wreg
  3021  049C  00BA               	movwf	xEventGroupWaitBits@uxBitsToWaitFor
  3022                           
  3023                           ;event_groups.c: 10: EventBits_t xEventGroupWaitBits(const EventBits_t uxBitsToWaitFor,;
      +                          event_groups.c: 11:                                 const sys_tick_t ticks_to_wait) {;ev
      +                          ent_groups.c: 13:     sys_tick_t last_tick = sys_tick_get_tick();
  3024  049D  268A               	fcall	_sys_tick_get_tick
  3025  049E  082D               	movf	?_sys_tick_get_tick+3,w
  3026  049F  00B9               	movwf	xEventGroupWaitBits@last_tick+3
  3027  04A0  082C               	movf	?_sys_tick_get_tick+2,w
  3028  04A1  00B8               	movwf	xEventGroupWaitBits@last_tick+2
  3029  04A2  082B               	movf	?_sys_tick_get_tick+1,w
  3030  04A3  00B7               	movwf	xEventGroupWaitBits@last_tick+1
  3031  04A4  082A               	movf	?_sys_tick_get_tick,w
  3032  04A5  00B6               	movwf	xEventGroupWaitBits@last_tick
  3033                           
  3034                           ;event_groups.c: 14:     while (sys_tick_get_tick() - last_tick <= ticks_to_wait)
  3035  04A6  2CAE               	goto	l2283
  3036  04A7                     l2277:
  3037                           
  3038                           ;event_groups.c: 15:         if (uxBits & uxBitsToWaitFor) return uxBits & uxBitsToWaitF
      +                          or;
  3039  04A7  085F               	movf	_uxBits,w
  3040  04A8  053A               	andwf	xEventGroupWaitBits@uxBitsToWaitFor,w
  3041  04A9  1903               	btfsc	3,2
  3042  04AA  2CAE               	goto	l2283
  3043  04AB  085F               	movf	_uxBits,w
  3044  04AC  053A               	andwf	xEventGroupWaitBits@uxBitsToWaitFor,w
  3045  04AD  0008               	return
  3046  04AE                     l2283:
  3047                           
  3048                           ;event_groups.c: 14:     while (sys_tick_get_tick() - last_tick <= ticks_to_wait)
  3049  04AE  268A               	fcall	_sys_tick_get_tick
  3050  04AF  082A               	movf	?_sys_tick_get_tick,w
  3051  04B0  00B2               	movwf	??_xEventGroupWaitBits
  3052  04B1  082B               	movf	?_sys_tick_get_tick+1,w
  3053  04B2  00B3               	movwf	??_xEventGroupWaitBits+1
  3054  04B3  082C               	movf	?_sys_tick_get_tick+2,w
  3055  04B4  00B4               	movwf	??_xEventGroupWaitBits+2
  3056  04B5  082D               	movf	?_sys_tick_get_tick+3,w
  3057  04B6  00B5               	movwf	??_xEventGroupWaitBits+3
  3058  04B7  0836               	movf	xEventGroupWaitBits@last_tick,w
  3059  04B8  02B2               	subwf	??_xEventGroupWaitBits,f
  3060  04B9  0837               	movf	xEventGroupWaitBits@last_tick+1,w
  3061  04BA  1C03               	skipc
  3062  04BB  0F37               	incfsz	xEventGroupWaitBits@last_tick+1,w
  3063  04BC  2CBE               	goto	u1351
  3064  04BD  2CBF               	goto	u1352
  3065  04BE                     u1351:
  3066  04BE  02B3               	subwf	??_xEventGroupWaitBits+1,f
  3067  04BF                     u1352:
  3068  04BF  0838               	movf	xEventGroupWaitBits@last_tick+2,w
  3069  04C0  1C03               	skipc
  3070  04C1  0F38               	incfsz	xEventGroupWaitBits@last_tick+2,w
  3071  04C2  2CC4               	goto	u1353
  3072  04C3  2CC5               	goto	u1354
  3073  04C4                     u1353:
  3074  04C4  02B4               	subwf	??_xEventGroupWaitBits+2,f
  3075  04C5                     u1354:
  3076  04C5  0839               	movf	xEventGroupWaitBits@last_tick+3,w
  3077  04C6  1C03               	skipc
  3078  04C7  0F39               	incfsz	xEventGroupWaitBits@last_tick+3,w
  3079  04C8  2CCA               	goto	u1355
  3080  04C9  2CCB               	goto	u1356
  3081  04CA                     u1355:
  3082  04CA  02B5               	subwf	??_xEventGroupWaitBits+3,f
  3083  04CB                     u1356:
  3084  04CB  0835               	movf	??_xEventGroupWaitBits+3,w
  3085  04CC  0231               	subwf	xEventGroupWaitBits@ticks_to_wait+3,w
  3086  04CD  1D03               	skipz
  3087  04CE  2CD9               	goto	u1365
  3088  04CF  0834               	movf	??_xEventGroupWaitBits+2,w
  3089  04D0  0230               	subwf	xEventGroupWaitBits@ticks_to_wait+2,w
  3090  04D1  1D03               	skipz
  3091  04D2  2CD9               	goto	u1365
  3092  04D3  0833               	movf	??_xEventGroupWaitBits+1,w
  3093  04D4  022F               	subwf	xEventGroupWaitBits@ticks_to_wait+1,w
  3094  04D5  1D03               	skipz
  3095  04D6  2CD9               	goto	u1365
  3096  04D7  0832               	movf	??_xEventGroupWaitBits,w
  3097  04D8  022E               	subwf	xEventGroupWaitBits@ticks_to_wait,w
  3098  04D9                     u1365:
  3099  04D9  1803               	skipnc
  3100  04DA  2CA7               	goto	l2277
  3101                           
  3102                           ;event_groups.c: 16:     return uxBits;
  3103  04DB  085F               	movf	_uxBits,w
  3104  04DC  0008               	return
  3105  04DD                     __end_of_xEventGroupWaitBits:
  3106                           
  3107                           	psect	text17
  3108  068A                     __ptext17:	
  3109 ;; *************** function _sys_tick_get_tick *****************
  3110 ;; Defined at:
  3111 ;;		line 62 in file "sys_tick.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  4   10[BANK0 ] unsigned long 
  3118 ;; Registers used:
  3119 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : B00/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3125 ;;      Params:         0       4       0       0
  3126 ;;      Locals:         0       0       0       0
  3127 ;;      Temps:          0       0       0       0
  3128 ;;      Totals:         0       4       0       0
  3129 ;;Total ram usage:        4 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 5
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;;		_xEventGroupWaitBits
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140  068A                     _sys_tick_get_tick:	
  3141                           ;psect for function _sys_tick_get_tick
  3142                           
  3143                           
  3144                           ;sys_tick.c: 63:     return _sys_tick.tick;
  3145                           
  3146                           ;incstack = 0
  3147                           ; Regs used in _sys_tick_get_tick: [wreg-fsr0h+status,2+status,0]
  3148  068A  3015               	movlw	21
  3149  068B  3EA0               	addlw	(low (__sys_tick| 0))& (0+255)
  3150  068C  0084               	movwf	4
  3151  068D  1383               	bcf	3,7	;select IRP bank1
  3152  068E  0800               	movf	0,w
  3153  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0691  00AA               	movwf	?_sys_tick_get_tick
  3156  0692  0A84               	incf	4,f
  3157  0693  0800               	movf	0,w
  3158  0694  00AB               	movwf	?_sys_tick_get_tick+1
  3159  0695  0A84               	incf	4,f
  3160  0696  0800               	movf	0,w
  3161  0697  00AC               	movwf	?_sys_tick_get_tick+2
  3162  0698  0A84               	incf	4,f
  3163  0699  0800               	movf	0,w
  3164  069A  00AD               	movwf	?_sys_tick_get_tick+3
  3165  069B  0008               	return
  3166  069C                     __end_of_sys_tick_get_tick:
  3167                           
  3168                           	psect	text18
  3169  07B9                     __ptext18:	
  3170 ;; *************** function _xEventGroupGetBits *****************
  3171 ;; Defined at:
  3172 ;;		line 33 in file "event_groups.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      unsigned char 
  3179 ;; Registers used:
  3180 ;;		wreg
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 300/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3186 ;;      Params:         0       0       0       0
  3187 ;;      Locals:         0       0       0       0
  3188 ;;      Temps:          0       0       0       0
  3189 ;;      Totals:         0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 5
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200  07B9                     _xEventGroupGetBits:	
  3201                           ;psect for function _xEventGroupGetBits
  3202                           
  3203                           
  3204                           ;event_groups.c: 34:     return uxBits;
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _xEventGroupGetBits: [wreg]
  3208  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3209  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3210  07BB  085F               	movf	_uxBits,w
  3211  07BC  0008               	return
  3212  07BD                     __end_of_xEventGroupGetBits:
  3213                           
  3214                           	psect	text19
  3215  07C5                     __ptext19:	
  3216 ;; *************** function _xEventGroupCreate *****************
  3217 ;; Defined at:
  3218 ;;		line 6 in file "event_groups.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		status,2
  3227 ;; Tracked objects:
  3228 ;;		On entry : B00/100
  3229 ;;		On exit  : B00/0
  3230 ;;		Unchanged: 800/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3232 ;;      Params:         0       0       0       0
  3233 ;;      Locals:         0       0       0       0
  3234 ;;      Temps:          0       0       0       0
  3235 ;;      Totals:         0       0       0       0
  3236 ;;Total ram usage:        0 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 5
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_main
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246  07C5                     _xEventGroupCreate:	
  3247                           ;psect for function _xEventGroupCreate
  3248                           
  3249                           
  3250                           ;event_groups.c: 7:     uxBits = 0;
  3251                           
  3252                           ;incstack = 0
  3253                           ; Regs used in _xEventGroupCreate: [status,2]
  3254  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  3255  07C6  01DF               	clrf	_uxBits
  3256  07C7  0008               	return
  3257  07C8                     __end_of_xEventGroupCreate:
  3258                           
  3259                           	psect	text20
  3260  061A                     __ptext20:	
  3261 ;; *************** function _sys_tick_init *****************
  3262 ;; Defined at:
  3263 ;;		line 46 in file "sys_tick.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 300/0
  3274 ;;		On exit  : B00/100
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3277 ;;      Params:         0       0       0       0
  3278 ;;      Locals:         0       0       0       0
  3279 ;;      Temps:          0       0       0       0
  3280 ;;      Totals:         0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 6
  3284 ;; This function calls:
  3285 ;;		_timer1_add_isr_handler
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291  061A                     _sys_tick_init:	
  3292                           ;psect for function _sys_tick_init
  3293                           
  3294                           
  3295                           ;sys_tick.c: 51:     T1CONbits.T1CKPS = 0b01;
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _sys_tick_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3299  061A  0810               	movf	16,w	;volatile
  3300  061B  39CF               	andlw	-49
  3301  061C  3810               	iorlw	16
  3302  061D  0090               	movwf	16	;volatile
  3303                           
  3304                           ;sys_tick.c: 54:     T1CONbits.TMR1CS = 0;
  3305  061E  1090               	bcf	16,1	;volatile
  3306                           
  3307                           ;sys_tick.c: 55:     TMR1 = (65535U) - 50000U;
  3308  061F  303C               	movlw	60
  3309  0620  008F               	movwf	15	;volatile
  3310  0621  30AF               	movlw	175
  3311  0622  008E               	movwf	14	;volatile
  3312                           
  3313                           ;sys_tick.c: 56:     timer1_add_isr_handler(sys_tick_handler);
  3314  0623  3005               	movlw	(low (fp__sys_tick_handler-i1fpbase))& (0+255)
  3315  0624  2784               	fcall	_timer1_add_isr_handler
  3316                           
  3317                           ;sys_tick.c: 57:     T1CONbits.TMR1ON = 1;
  3318  0625  1410               	bsf	16,0	;volatile
  3319                           
  3320                           ;sys_tick.c: 58:     _sys_tick.tick = 0;
  3321  0626  30B5               	movlw	low ((__sys_tick| 0+21))
  3322  0627  0084               	movwf	4
  3323  0628  1383               	bcf	3,7	;select IRP bank0
  3324  0629  0180               	clrf	0
  3325  062A  0A84               	incf	4,f
  3326  062B  0180               	clrf	0
  3327  062C  0A84               	incf	4,f
  3328  062D  0180               	clrf	0
  3329  062E  0A84               	incf	4,f
  3330  062F  0180               	clrf	0
  3331                           
  3332                           ;sys_tick.c: 59:     _sys_tick._handler_index = 0;
  3333  0630  30F8               	movlw	-8
  3334  0631  1683               	bsf	3,5	;RP0=1, select bank1
  3335  0632  05A0               	andwf	__sys_tick^(0+128),f
  3336  0633  0008               	return
  3337  0634                     __end_of_sys_tick_init:
  3338                           
  3339                           	psect	text21
  3340  0784                     __ptext21:	
  3341 ;; *************** function _timer1_add_isr_handler *****************
  3342 ;; Defined at:
  3343 ;;		line 18 in file "it_handle.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  handler         1    wreg     PTR FTN()void 
  3346 ;;		 -> sys_tick_handler(1), 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  handler         1   11[BANK0 ] PTR FTN()void 
  3349 ;;		 -> sys_tick_handler(1), 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg
  3354 ;; Tracked objects:
  3355 ;;		On entry : 300/0
  3356 ;;		On exit  : 300/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3359 ;;      Params:         0       0       0       0
  3360 ;;      Locals:         0       1       0       0
  3361 ;;      Temps:          0       1       0       0
  3362 ;;      Totals:         0       2       0       0
  3363 ;;Total ram usage:        2 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 5
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_sys_tick_init
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373  0784                     _timer1_add_isr_handler:	
  3374                           ;psect for function _timer1_add_isr_handler
  3375                           
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in _timer1_add_isr_handler: [wreg]
  3379                           ;timer1_add_isr_handler@handler stored from wreg
  3380  0784  00AB               	movwf	timer1_add_isr_handler@handler
  3381                           
  3382                           ;it_handle.c: 19:     PIR1bits.TMR1IF = 0;
  3383  0785  100C               	bcf	12,0	;volatile
  3384                           
  3385                           ;it_handle.c: 20:     PIE1bits.TMR1IE = 1;
  3386  0786  1683               	bsf	3,5	;RP0=1, select bank1
  3387  0787  140C               	bsf	12,0	;volatile
  3388                           
  3389                           ;it_handle.c: 21:     _tmr1_isr = handler;
  3390  0788  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0789  082B               	movf	timer1_add_isr_handler@handler,w
  3392  078A  00AA               	movwf	??_timer1_add_isr_handler
  3393  078B  082A               	movf	??_timer1_add_isr_handler,w
  3394  078C  00DD               	movwf	__tmr1_isr
  3395  078D  0008               	return
  3396  078E                     __end_of_timer1_add_isr_handler:
  3397                           
  3398                           	psect	text22
  3399  078E                     __ptext22:	
  3400 ;; *************** function _led_ind_init *****************
  3401 ;; Defined at:
  3402 ;;		line 13 in file "led_ind.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 300/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3416 ;;      Params:         0       0       0       0
  3417 ;;      Locals:         0       0       0       0
  3418 ;;      Temps:          0       1       0       0
  3419 ;;      Totals:         0       1       0       0
  3420 ;;Total ram usage:        1 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; Hardware stack levels required when called: 7
  3423 ;; This function calls:
  3424 ;;		_led_ind_on
  3425 ;;		_sys_tick_register_callback_handler
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431  078E                     _led_ind_init:	
  3432                           ;psect for function _led_ind_init
  3433                           
  3434                           
  3435                           ;led_ind.c: 14:     TRISAbits.TRISA2 = 0;
  3436                           
  3437                           ;incstack = 0
  3438                           ; Regs used in _led_ind_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3439  078E  1683               	bsf	3,5	;RP0=1, select bank1
  3440  078F  1303               	bcf	3,6	;RP1=0, select bank1
  3441  0790  1105               	bcf	5,2	;volatile
  3442                           
  3443                           ;led_ind.c: 15:     led_blink_handle = sys_tick_register_callback_handler(_blink_handler
      +                          );
  3444  0791  3004               	movlw	(low (fp___blink_handler-i1fpbase))& (0+255)
  3445  0792  2447               	fcall	_sys_tick_register_callback_handler
  3446  0793  00B2               	movwf	??_led_ind_init
  3447  0794  0832               	movf	??_led_ind_init,w
  3448  0795  00D8               	movwf	_led_blink_handle
  3449                           
  3450                           ;led_ind.c: 16:     led_ind_on();
  3451  0796  27C8               	fcall	_led_ind_on
  3452  0797  0008               	return
  3453  0798                     __end_of_led_ind_init:
  3454                           
  3455                           	psect	text23
  3456  0447                     __ptext23:	
  3457 ;; *************** function _sys_tick_register_callback_handler *****************
  3458 ;; Defined at:
  3459 ;;		line 66 in file "sys_tick.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  cb              1    wreg     PTR FTN()void 
  3462 ;;		 -> _blink_handler(1), 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  cb              1   16[BANK0 ] PTR FTN()void 
  3465 ;;		 -> _blink_handler(1), 
  3466 ;;  _handler_ind    1   17[BANK0 ] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      unsigned char 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 300/100
  3473 ;;		On exit  : 300/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3476 ;;      Params:         0       0       0       0
  3477 ;;      Locals:         0       2       0       0
  3478 ;;      Temps:          0       2       0       0
  3479 ;;      Totals:         0       4       0       0
  3480 ;;Total ram usage:        4 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 6
  3483 ;; This function calls:
  3484 ;;		___bmul
  3485 ;; This function is called by:
  3486 ;;		_led_ind_init
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490  0447                     _sys_tick_register_callback_handler:	
  3491                           ;psect for function _sys_tick_register_callback_handler
  3492                           
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _sys_tick_register_callback_handler: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
  3496                           ;sys_tick_register_callback_handler@cb stored from wreg
  3497  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0448  00B0               	movwf	sys_tick_register_callback_handler@cb
  3499                           
  3500                           ;sys_tick.c: 67:     uint8_t _handler_index = _sys_tick._handler_index;
  3501  0449  1683               	bsf	3,5	;RP0=1, select bank1
  3502  044A  0820               	movf	__sys_tick^(0+128),w
  3503  044B  3907               	andlw	7
  3504  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3505  044D  00AE               	movwf	??_sys_tick_register_callback_handler
  3506  044E  082E               	movf	??_sys_tick_register_callback_handler,w
  3507  044F  00B1               	movwf	sys_tick_register_callback_handler@_handler_index
  3508                           
  3509                           ;sys_tick.c: 68:     if (_handler_index < 2) {
  3510  0450  3002               	movlw	2
  3511  0451  0231               	subwf	sys_tick_register_callback_handler@_handler_index,w
  3512  0452  1803               	skipnc
  3513  0453  2C9A               	goto	l2009
  3514                           
  3515                           ;sys_tick.c: 69:         _sys_tick._handle[_handler_index].cb = cb;
  3516  0454  0830               	movf	sys_tick_register_callback_handler@cb,w
  3517  0455  00AE               	movwf	??_sys_tick_register_callback_handler
  3518  0456  300A               	movlw	10
  3519  0457  00AF               	movwf	??_sys_tick_register_callback_handler+1
  3520  0458  082F               	movf	??_sys_tick_register_callback_handler+1,w
  3521  0459  00AA               	movwf	___bmul@multiplicand
  3522  045A  0831               	movf	sys_tick_register_callback_handler@_handler_index,w
  3523  045B  269C               	fcall	___bmul
  3524  045C  3EAA               	addlw	(low ((__sys_tick| 0+10)))& (0+255)
  3525  045D  0084               	movwf	4
  3526  045E  082E               	movf	??_sys_tick_register_callback_handler,w
  3527  045F  1383               	bcf	3,7	;select IRP bank1
  3528  0460  0080               	movwf	0
  3529                           
  3530                           ;sys_tick.c: 70:         _sys_tick._handle[_handler_index]._en = 0;
  3531  0461  300A               	movlw	10
  3532  0462  00AE               	movwf	??_sys_tick_register_callback_handler
  3533  0463  082E               	movf	??_sys_tick_register_callback_handler,w
  3534  0464  00AA               	movwf	___bmul@multiplicand
  3535  0465  0831               	movf	sys_tick_register_callback_handler@_handler_index,w
  3536  0466  269C               	fcall	___bmul
  3537  0467  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  3538  0468  0084               	movwf	4
  3539  0469  1383               	bcf	3,7	;select IRP bank1
  3540  046A  1000               	bcf	0,0
  3541                           
  3542                           ;sys_tick.c: 71:         _sys_tick._handle[_handler_index]._handle = _handler_index;
  3543  046B  0831               	movf	sys_tick_register_callback_handler@_handler_index,w
  3544  046C  00AE               	movwf	??_sys_tick_register_callback_handler
  3545  046D  300A               	movlw	10
  3546  046E  00AF               	movwf	??_sys_tick_register_callback_handler+1
  3547  046F  082F               	movf	??_sys_tick_register_callback_handler+1,w
  3548  0470  00AA               	movwf	___bmul@multiplicand
  3549  0471  0831               	movf	sys_tick_register_callback_handler@_handler_index,w
  3550  0472  269C               	fcall	___bmul
  3551  0473  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  3552  0474  0084               	movwf	4
  3553  0475  0DAE               	rlf	??_sys_tick_register_callback_handler,f
  3554  0476  0DAE               	rlf	??_sys_tick_register_callback_handler,f
  3555  0477  1383               	bcf	3,7	;select IRP bank1
  3556  0478  0800               	movf	0,w
  3557  0479  062E               	xorwf	??_sys_tick_register_callback_handler,w
  3558  047A  39E3               	andlw	-29
  3559  047B  062E               	xorwf	??_sys_tick_register_callback_handler,w
  3560  047C  0080               	movwf	0
  3561                           
  3562                           ;sys_tick.c: 72:         _sys_tick._handler_index++;
  3563  047D  1683               	bsf	3,5	;RP0=1, select bank1
  3564  047E  0820               	movf	__sys_tick^(0+128),w
  3565  047F  3907               	andlw	7
  3566  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0481  00AE               	movwf	??_sys_tick_register_callback_handler
  3568  0482  0AAE               	incf	??_sys_tick_register_callback_handler,f
  3569  0483  1683               	bsf	3,5	;RP0=1, select bank1
  3570  0484  0820               	movf	__sys_tick^(0+128),w
  3571  0485  1283               	bcf	3,5	;RP0=0, select bank0
  3572  0486  062E               	xorwf	??_sys_tick_register_callback_handler,w
  3573  0487  39F8               	andlw	-8
  3574  0488  062E               	xorwf	??_sys_tick_register_callback_handler,w
  3575  0489  1683               	bsf	3,5	;RP0=1, select bank1
  3576  048A  00A0               	movwf	__sys_tick^(0+128)
  3577                           
  3578                           ;sys_tick.c: 73:         return _sys_tick._handle[_handler_index]._handle;
  3579  048B  300A               	movlw	10
  3580  048C  1283               	bcf	3,5	;RP0=0, select bank0
  3581  048D  00AE               	movwf	??_sys_tick_register_callback_handler
  3582  048E  082E               	movf	??_sys_tick_register_callback_handler,w
  3583  048F  00AA               	movwf	___bmul@multiplicand
  3584  0490  0831               	movf	sys_tick_register_callback_handler@_handler_index,w
  3585  0491  269C               	fcall	___bmul
  3586  0492  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  3587  0493  0084               	movwf	4
  3588  0494  1383               	bcf	3,7	;select IRP bank1
  3589  0495  0C00               	rrf	0,w
  3590  0496  00AF               	movwf	??_sys_tick_register_callback_handler+1
  3591  0497  0C2F               	rrf	??_sys_tick_register_callback_handler+1,w
  3592  0498  3907               	andlw	7
  3593  0499  0008               	return
  3594  049A                     l2009:
  3595  049A  30FF               	movlw	255
  3596  049B  0008               	return
  3597  049C                     __end_of_sys_tick_register_callback_handler:
  3598                           
  3599                           	psect	text24
  3600  07C8                     __ptext24:	
  3601 ;; *************** function _led_ind_on *****************
  3602 ;; Defined at:
  3603 ;;		line 28 in file "led_ind.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		None
  3612 ;; Tracked objects:
  3613 ;;		On entry : 300/0
  3614 ;;		On exit  : 300/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3617 ;;      Params:         0       0       0       0
  3618 ;;      Locals:         0       0       0       0
  3619 ;;      Temps:          0       0       0       0
  3620 ;;      Totals:         0       0       0       0
  3621 ;;Total ram usage:        0 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 5
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;;		_led_ind_init
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632  07C8                     _led_ind_on:	
  3633                           ;psect for function _led_ind_on
  3634                           
  3635                           
  3636                           ;led_ind.c: 29:     PORTAbits.RA2 = 1;
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _led_ind_on: []
  3640  07C8  1505               	bsf	5,2	;volatile
  3641  07C9  0008               	return
  3642  07CA                     __end_of_led_ind_on:
  3643                           
  3644                           	psect	text25
  3645  07BD                     __ptext25:	
  3646 ;; *************** function _led_ind_blink_stop *****************
  3647 ;; Defined at:
  3648 ;;		line 23 in file "led_ind.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 300/0
  3659 ;;		On exit  : 300/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3662 ;;      Params:         0       0       0       0
  3663 ;;      Locals:         0       0       0       0
  3664 ;;      Temps:          0       0       0       0
  3665 ;;      Totals:         0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 7
  3669 ;; This function calls:
  3670 ;;		_led_ind_off
  3671 ;;		_sys_tick_stop
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677  07BD                     _led_ind_blink_stop:	
  3678                           ;psect for function _led_ind_blink_stop
  3679                           
  3680                           
  3681                           ;led_ind.c: 24:     sys_tick_stop(led_blink_handle);
  3682                           
  3683                           ;incstack = 0
  3684                           ; Regs used in _led_ind_blink_stop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3685  07BD  0858               	movf	_led_blink_handle,w
  3686  07BE  254C               	fcall	_sys_tick_stop
  3687                           
  3688                           ;led_ind.c: 25:     led_ind_off();
  3689  07BF  27C1               	fcall	_led_ind_off
  3690  07C0  0008               	return
  3691  07C1                     __end_of_led_ind_blink_stop:
  3692                           
  3693                           	psect	text26
  3694  054C                     __ptext26:	
  3695 ;; *************** function _sys_tick_stop *****************
  3696 ;; Defined at:
  3697 ;;		line 100 in file "sys_tick.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  handle          1    wreg     unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  handle          1   16[BANK0 ] unsigned char 
  3702 ;;  i               1   17[BANK0 ] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 300/0
  3709 ;;		On exit  : 300/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3712 ;;      Params:         0       0       0       0
  3713 ;;      Locals:         0       2       0       0
  3714 ;;      Temps:          0       2       0       0
  3715 ;;      Totals:         0       4       0       0
  3716 ;;Total ram usage:        4 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 6
  3719 ;; This function calls:
  3720 ;;		___bmul
  3721 ;; This function is called by:
  3722 ;;		_led_ind_blink_stop
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726  054C                     _sys_tick_stop:	
  3727                           ;psect for function _sys_tick_stop
  3728                           
  3729                           
  3730                           ;incstack = 0
  3731                           ; Regs used in _sys_tick_stop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3732                           ;sys_tick_stop@handle stored from wreg
  3733  054C  00B0               	movwf	sys_tick_stop@handle
  3734                           
  3735                           ;sys_tick.c: 101:     for (uint8_t i = 0; i < _sys_tick._handler_index; i++) {
  3736  054D  01B1               	clrf	sys_tick_stop@i
  3737  054E                     l422:
  3738  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3739  054F  0820               	movf	__sys_tick^(0+128),w
  3740  0550  3907               	andlw	7
  3741  0551  1283               	bcf	3,5	;RP0=0, select bank0
  3742  0552  0231               	subwf	sys_tick_stop@i,w
  3743  0553  1803               	btfsc	3,0
  3744  0554  0008               	return
  3745                           
  3746                           ;sys_tick.c: 102:         if (_sys_tick._handle[i]._handle == handle) {
  3747  0555  300A               	movlw	10
  3748  0556  00AE               	movwf	??_sys_tick_stop
  3749  0557  082E               	movf	??_sys_tick_stop,w
  3750  0558  00AA               	movwf	___bmul@multiplicand
  3751  0559  0831               	movf	sys_tick_stop@i,w
  3752  055A  269C               	fcall	___bmul
  3753  055B  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  3754  055C  0084               	movwf	4
  3755  055D  1383               	bcf	3,7	;select IRP bank1
  3756  055E  0C00               	rrf	0,w
  3757  055F  00AF               	movwf	??_sys_tick_stop+1
  3758  0560  0C2F               	rrf	??_sys_tick_stop+1,w
  3759  0561  3907               	andlw	7
  3760  0562  0630               	xorwf	sys_tick_stop@handle,w
  3761  0563  1D03               	skipz
  3762  0564  2D70               	goto	l2031
  3763                           
  3764                           ;sys_tick.c: 103:             _sys_tick._handle[i]._en = 0;
  3765  0565  300A               	movlw	10
  3766  0566  00AE               	movwf	??_sys_tick_stop
  3767  0567  082E               	movf	??_sys_tick_stop,w
  3768  0568  00AA               	movwf	___bmul@multiplicand
  3769  0569  0831               	movf	sys_tick_stop@i,w
  3770  056A  269C               	fcall	___bmul
  3771  056B  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  3772  056C  0084               	movwf	4
  3773  056D  1383               	bcf	3,7	;select IRP bank1
  3774  056E  1000               	bcf	0,0
  3775  056F  0008               	return
  3776  0570                     l2031:
  3777                           
  3778                           ;sys_tick.c: 106:     }
  3779  0570  3001               	movlw	1
  3780  0571  00AE               	movwf	??_sys_tick_stop
  3781  0572  082E               	movf	??_sys_tick_stop,w
  3782  0573  07B1               	addwf	sys_tick_stop@i,f
  3783  0574  2D4E               	goto	l422
  3784  0575                     __end_of_sys_tick_stop:
  3785                           
  3786                           	psect	text27
  3787  07C1                     __ptext27:	
  3788 ;; *************** function _led_ind_off *****************
  3789 ;; Defined at:
  3790 ;;		line 32 in file "led_ind.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		None
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 300/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3804 ;;      Params:         0       0       0       0
  3805 ;;      Locals:         0       0       0       0
  3806 ;;      Temps:          0       0       0       0
  3807 ;;      Totals:         0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 5
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;;		_led_ind_blink_stop
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819  07C1                     _led_ind_off:	
  3820                           ;psect for function _led_ind_off
  3821                           
  3822                           
  3823                           ;led_ind.c: 33:     PORTAbits.RA2 = 0;
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _led_ind_off: []
  3827  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  3828  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  3829  07C3  1105               	bcf	5,2	;volatile
  3830  07C4  0008               	return
  3831  07C5                     __end_of_led_ind_off:
  3832                           
  3833                           	psect	text28
  3834  0758                     __ptext28:	
  3835 ;; *************** function _led_ind_blink_start *****************
  3836 ;; Defined at:
  3837 ;;		line 19 in file "led_ind.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 300/0
  3848 ;;		On exit  : 300/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3851 ;;      Params:         0       0       0       0
  3852 ;;      Locals:         0       0       0       0
  3853 ;;      Temps:          0       0       0       0
  3854 ;;      Totals:         0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 7
  3858 ;; This function calls:
  3859 ;;		_sys_tick_start_periodic
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865  0758                     _led_ind_blink_start:	
  3866                           ;psect for function _led_ind_blink_start
  3867                           
  3868                           
  3869                           ;led_ind.c: 20:     sys_tick_start_periodic(led_blink_handle, 3);
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _led_ind_blink_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3873  0758  3000               	movlw	0
  3874  0759  00B1               	movwf	sys_tick_start_periodic@tick+3
  3875  075A  3000               	movlw	0
  3876  075B  00B0               	movwf	sys_tick_start_periodic@tick+2
  3877  075C  3000               	movlw	0
  3878  075D  00AF               	movwf	sys_tick_start_periodic@tick+1
  3879  075E  3003               	movlw	3
  3880  075F  00AE               	movwf	sys_tick_start_periodic@tick
  3881  0760  0858               	movf	_led_blink_handle,w
  3882  0761  23EC               	fcall	_sys_tick_start_periodic
  3883  0762  0008               	return
  3884  0763                     __end_of_led_ind_blink_start:
  3885                           
  3886                           	psect	text29
  3887  03EC                     __ptext29:	
  3888 ;; *************** function _sys_tick_start_periodic *****************
  3889 ;; Defined at:
  3890 ;;		line 88 in file "sys_tick.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  handle          1    wreg     unsigned char 
  3893 ;;  tick            4   14[BANK0 ] unsigned long 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  handle          1   20[BANK0 ] unsigned char 
  3896 ;;  i               1   21[BANK0 ] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 300/0
  3903 ;;		On exit  : 300/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3906 ;;      Params:         0       4       0       0
  3907 ;;      Locals:         0       2       0       0
  3908 ;;      Temps:          0       2       0       0
  3909 ;;      Totals:         0       8       0       0
  3910 ;;Total ram usage:        8 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 6
  3913 ;; This function calls:
  3914 ;;		___bmul
  3915 ;; This function is called by:
  3916 ;;		_led_ind_blink_start
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920  03EC                     _sys_tick_start_periodic:	
  3921                           ;psect for function _sys_tick_start_periodic
  3922                           
  3923                           
  3924                           ;incstack = 0
  3925                           ; Regs used in _sys_tick_start_periodic: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3926                           ;sys_tick_start_periodic@handle stored from wreg
  3927  03EC  00B4               	movwf	sys_tick_start_periodic@handle
  3928                           
  3929                           ;sys_tick.c: 89:     for (uint8_t i = 0; i < _sys_tick._handler_index; i++) {
  3930  03ED  01B5               	clrf	sys_tick_start_periodic@i
  3931  03EE                     l415:
  3932  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  3933  03EF  0820               	movf	__sys_tick^(0+128),w
  3934  03F0  3907               	andlw	7
  3935  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3936  03F2  0235               	subwf	sys_tick_start_periodic@i,w
  3937  03F3  1803               	btfsc	3,0
  3938  03F4  0008               	return
  3939                           
  3940                           ;sys_tick.c: 90:         if (_sys_tick._handle[i]._handle == handle) {
  3941  03F5  300A               	movlw	10
  3942  03F6  00B2               	movwf	??_sys_tick_start_periodic
  3943  03F7  0832               	movf	??_sys_tick_start_periodic,w
  3944  03F8  00AA               	movwf	___bmul@multiplicand
  3945  03F9  0835               	movf	sys_tick_start_periodic@i,w
  3946  03FA  269C               	fcall	___bmul
  3947  03FB  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  3948  03FC  0084               	movwf	4
  3949  03FD  1383               	bcf	3,7	;select IRP bank1
  3950  03FE  0C00               	rrf	0,w
  3951  03FF  00B3               	movwf	??_sys_tick_start_periodic+1
  3952  0400  0C33               	rrf	??_sys_tick_start_periodic+1,w
  3953  0401  3907               	andlw	7
  3954  0402  0634               	xorwf	sys_tick_start_periodic@handle,w
  3955  0403  1D03               	skipz
  3956  0404  2C42               	goto	l2021
  3957                           
  3958                           ;sys_tick.c: 91:             _sys_tick._handle[i].trigger_tick = tick;
  3959  0405  300A               	movlw	10
  3960  0406  00B2               	movwf	??_sys_tick_start_periodic
  3961  0407  0832               	movf	??_sys_tick_start_periodic,w
  3962  0408  00AA               	movwf	___bmul@multiplicand
  3963  0409  0835               	movf	sys_tick_start_periodic@i,w
  3964  040A  269C               	fcall	___bmul
  3965  040B  3EA2               	addlw	(low ((__sys_tick| 0+2)))& (0+255)
  3966  040C  0084               	movwf	4
  3967  040D  082E               	movf	sys_tick_start_periodic@tick,w
  3968  040E  1383               	bcf	3,7	;select IRP bank1
  3969  040F  0080               	movwf	0
  3970  0410  0A84               	incf	4,f
  3971  0411  082F               	movf	sys_tick_start_periodic@tick+1,w
  3972  0412  0080               	movwf	0
  3973  0413  0A84               	incf	4,f
  3974  0414  0830               	movf	sys_tick_start_periodic@tick+2,w
  3975  0415  0080               	movwf	0
  3976  0416  0A84               	incf	4,f
  3977  0417  0831               	movf	sys_tick_start_periodic@tick+3,w
  3978  0418  0080               	movwf	0
  3979                           
  3980                           ;sys_tick.c: 92:             _sys_tick._handle[i].counter_tick = 0;
  3981  0419  300A               	movlw	10
  3982  041A  00B2               	movwf	??_sys_tick_start_periodic
  3983  041B  0832               	movf	??_sys_tick_start_periodic,w
  3984  041C  00AA               	movwf	___bmul@multiplicand
  3985  041D  0835               	movf	sys_tick_start_periodic@i,w
  3986  041E  269C               	fcall	___bmul
  3987  041F  3EA6               	addlw	(low ((__sys_tick| 0+6)))& (0+255)
  3988  0420  0084               	movwf	4
  3989  0421  3000               	movlw	0
  3990  0422  1383               	bcf	3,7	;select IRP bank1
  3991  0423  0080               	movwf	0
  3992  0424  0A84               	incf	4,f
  3993  0425  3000               	movlw	0
  3994  0426  0080               	movwf	0
  3995  0427  0A84               	incf	4,f
  3996  0428  3000               	movlw	0
  3997  0429  0080               	movwf	0
  3998  042A  0A84               	incf	4,f
  3999  042B  3000               	movlw	0
  4000  042C  0080               	movwf	0
  4001                           
  4002                           ;sys_tick.c: 93:             _sys_tick._handle[i]._periodic = 1;
  4003  042D  300A               	movlw	10
  4004  042E  00B2               	movwf	??_sys_tick_start_periodic
  4005  042F  0832               	movf	??_sys_tick_start_periodic,w
  4006  0430  00AA               	movwf	___bmul@multiplicand
  4007  0431  0835               	movf	sys_tick_start_periodic@i,w
  4008  0432  269C               	fcall	___bmul
  4009  0433  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  4010  0434  0084               	movwf	4
  4011  0435  1383               	bcf	3,7	;select IRP bank1
  4012  0436  1480               	bsf	0,1
  4013                           
  4014                           ;sys_tick.c: 94:             _sys_tick._handle[i]._en = 1;
  4015  0437  300A               	movlw	10
  4016  0438  00B2               	movwf	??_sys_tick_start_periodic
  4017  0439  0832               	movf	??_sys_tick_start_periodic,w
  4018  043A  00AA               	movwf	___bmul@multiplicand
  4019  043B  0835               	movf	sys_tick_start_periodic@i,w
  4020  043C  269C               	fcall	___bmul
  4021  043D  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  4022  043E  0084               	movwf	4
  4023  043F  1383               	bcf	3,7	;select IRP bank1
  4024  0440  1400               	bsf	0,0
  4025  0441  0008               	return
  4026  0442                     l2021:
  4027                           
  4028                           ;sys_tick.c: 97:     }
  4029  0442  3001               	movlw	1
  4030  0443  00B2               	movwf	??_sys_tick_start_periodic
  4031  0444  0832               	movf	??_sys_tick_start_periodic,w
  4032  0445  07B5               	addwf	sys_tick_start_periodic@i,f
  4033  0446  2BEE               	goto	l415
  4034  0447                     __end_of_sys_tick_start_periodic:
  4035                           
  4036                           	psect	text30
  4037  069C                     __ptext30:	
  4038 ;; *************** function ___bmul *****************
  4039 ;; Defined at:
  4040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  multiplier      1    wreg     unsigned char 
  4043 ;;  multiplicand    1   10[BANK0 ] unsigned char 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  multiplier      1   13[BANK0 ] unsigned char 
  4046 ;;  product         1   12[BANK0 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      unsigned char 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 300/0
  4053 ;;		On exit  : 300/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4056 ;;      Params:         0       1       0       0
  4057 ;;      Locals:         0       2       0       0
  4058 ;;      Temps:          0       1       0       0
  4059 ;;      Totals:         0       4       0       0
  4060 ;;Total ram usage:        4 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 5
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_sys_tick_handler
  4067 ;;		_sys_tick_register_callback_handler
  4068 ;;		_sys_tick_start_periodic
  4069 ;;		_sys_tick_stop
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073  069C                     ___bmul:	
  4074                           ;psect for function ___bmul
  4075                           
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4079                           ;___bmul@multiplier stored from wreg
  4080  069C  00AD               	movwf	___bmul@multiplier
  4081  069D  01AC               	clrf	___bmul@product
  4082  069E                     l1887:
  4083  069E  1C2D               	btfss	___bmul@multiplier,0
  4084  069F  2EA4               	goto	l1891
  4085  06A0  082A               	movf	___bmul@multiplicand,w
  4086  06A1  00AB               	movwf	??___bmul
  4087  06A2  082B               	movf	??___bmul,w
  4088  06A3  07AC               	addwf	___bmul@product,f
  4089  06A4                     l1891:
  4090  06A4  1003               	clrc
  4091  06A5  0DAA               	rlf	___bmul@multiplicand,f
  4092  06A6  1003               	clrc
  4093  06A7  0CAD               	rrf	___bmul@multiplier,f
  4094  06A8  082D               	movf	___bmul@multiplier,w
  4095  06A9  1D03               	btfss	3,2
  4096  06AA  2E9E               	goto	l1887
  4097  06AB  082C               	movf	___bmul@product,w
  4098  06AC  0008               	return
  4099  06AD                     __end_of___bmul:
  4100                           
  4101                           	psect	text31
  4102  06ED                     __ptext31:	
  4103 ;; *************** function _led_button_init *****************
  4104 ;; Defined at:
  4105 ;;		line 58 in file "main.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 300/0
  4116 ;;		On exit  : 300/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4119 ;;      Params:         0       0       0       0
  4120 ;;      Locals:         0       0       0       0
  4121 ;;      Temps:          0       1       0       0
  4122 ;;      Totals:         0       1       0       0
  4123 ;;Total ram usage:        1 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 6
  4126 ;; This function calls:
  4127 ;;		_xEventGroupClearBits
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133  06ED                     _led_button_init:	
  4134                           ;psect for function _led_button_init
  4135                           
  4136                           
  4137                           ;main.c: 59:     button_data.channels_num = 3;
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in _led_button_init: [wreg+status,2+status,0+pclath+cstack]
  4141  06ED  3003               	movlw	3
  4142  06EE  00AC               	movwf	??_led_button_init
  4143  06EF  082C               	movf	??_led_button_init,w
  4144  06F0  00E0               	movwf	_button_data
  4145                           
  4146                           ;main.c: 61:     TRISAbits.TRISA7 = 0;
  4147  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  4148  06F2  1385               	bcf	5,7	;volatile
  4149                           
  4150                           ;main.c: 62:     TRISAbits.TRISA0 = 0;
  4151  06F3  1005               	bcf	5,0	;volatile
  4152                           
  4153                           ;main.c: 63:     TRISAbits.TRISA1 = 0;
  4154  06F4  1085               	bcf	5,1	;volatile
  4155                           
  4156                           ;main.c: 65:     PORTAbits.RA7 = 0;
  4157  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  4158  06F6  1385               	bcf	5,7	;volatile
  4159                           
  4160                           ;main.c: 66:     PORTAbits.RA0 = 0;
  4161  06F7  1005               	bcf	5,0	;volatile
  4162                           
  4163                           ;main.c: 67:     PORTAbits.RA1 = 0;
  4164  06F8  1085               	bcf	5,1	;volatile
  4165                           
  4166                           ;main.c: 68:     xEventGroupClearBits((1 << 2));
  4167  06F9  3004               	movlw	4
  4168  06FA  2763               	fcall	_xEventGroupClearBits
  4169  06FB  0008               	return
  4170  06FC                     __end_of_led_button_init:
  4171                           
  4172                           	psect	text32
  4173  0763                     __ptext32:	
  4174 ;; *************** function _xEventGroupClearBits *****************
  4175 ;; Defined at:
  4176 ;;		line 26 in file "event_groups.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  uxBitsToClea    1    wreg     const unsigned char 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  uxBitsToClea    1   11[BANK0 ] const unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      unsigned char 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0
  4185 ;; Tracked objects:
  4186 ;;		On entry : 200/0
  4187 ;;		On exit  : 300/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4190 ;;      Params:         0       0       0       0
  4191 ;;      Locals:         0       1       0       0
  4192 ;;      Temps:          0       1       0       0
  4193 ;;      Totals:         0       2       0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 5
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_led_button_init
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205  0763                     _xEventGroupClearBits:	
  4206                           ;psect for function _xEventGroupClearBits
  4207                           
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _xEventGroupClearBits: [wreg+status,2+status,0]
  4211                           ;xEventGroupClearBits@uxBitsToClear stored from wreg
  4212  0763  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0764  00AB               	movwf	xEventGroupClearBits@uxBitsToClear
  4214  0765                     l372:	
  4215                           ;event_groups.c: 27:     do {
  4216                           
  4217                           
  4218                           ;event_groups.c: 28:         uxBits &= ~uxBitsToClear;
  4219  0765  092B               	comf	xEventGroupClearBits@uxBitsToClear,w
  4220  0766  00AA               	movwf	??_xEventGroupClearBits
  4221  0767  082A               	movf	??_xEventGroupClearBits,w
  4222  0768  05DF               	andwf	_uxBits,f
  4223                           
  4224                           ;event_groups.c: 29:     } while (uxBits & uxBitsToClear);
  4225  0769  085F               	movf	_uxBits,w
  4226  076A  052B               	andwf	xEventGroupClearBits@uxBitsToClear,w
  4227  076B  1903               	btfsc	3,2
  4228  076C  0008               	return
  4229  076D  2F65               	goto	l372
  4230  076E                     __end_of_xEventGroupClearBits:
  4231                           
  4232                           	psect	text33
  4233  05BE                     __ptext33:	
  4234 ;; *************** function _eeprom_write *****************
  4235 ;; Defined at:
  4236 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eewrite.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  addr            1    wreg     unsigned char 
  4239 ;;  value           1   10[BANK0 ] unsigned char 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  addr            1   12[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 300/0
  4248 ;;		On exit  : 300/100
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4251 ;;      Params:         0       1       0       0
  4252 ;;      Locals:         0       1       0       0
  4253 ;;      Temps:          0       1       0       0
  4254 ;;      Totals:         0       3       0       0
  4255 ;;Total ram usage:        3 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 5
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265  05BE                     _eeprom_write:	
  4266                           ;psect for function _eeprom_write
  4267                           
  4268                           
  4269                           ;incstack = 0
  4270                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4271                           ;eeprom_write@addr stored from wreg
  4272  05BE  00AC               	movwf	eeprom_write@addr
  4273  05BF                     l539:	
  4274                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.35\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  4275                           
  4276  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  4277  05C0  189C               	btfsc	28,1	;volsfr
  4278  05C1  2DBF               	goto	l539
  4279  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  4280  05C3  082C               	movf	eeprom_write@addr,w
  4281  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  4282  05C5  009B               	movwf	27	;volatile
  4283  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  4284  05C7  082A               	movf	eeprom_write@value,w
  4285  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  4286  05C9  009A               	movwf	26	;volatile
  4287  05CA  303F               	movlw	63
  4288  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  4289  05CC  00AB               	movwf	??_eeprom_write
  4290  05CD  082B               	movf	??_eeprom_write,w
  4291  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  4292  05CF  059C               	andwf	28,f	;volsfr
  4293  05D0  1003               	bcf	3,0	;volatile
  4294  05D1  1B8B               	btfsc	11,7	;volatile
  4295  05D2  1403               	bsf	3,0	;volatile
  4296  05D3  138B               	bcf	11,7	;volatile
  4297  05D4  151C               	bsf	28,2	;volsfr
  4298  05D5  3055               	movlw	85
  4299  05D6  009D               	movwf	29	;volsfr
  4300  05D7  30AA               	movlw	170
  4301  05D8  009D               	movwf	29	;volsfr
  4302  05D9  149C               	bsf	28,1	;volsfr
  4303  05DA  111C               	bcf	28,2	;volsfr
  4304  05DB  1C03               	btfss	3,0	;volatile
  4305  05DC  0008               	return
  4306  05DD  178B               	bsf	11,7	;volatile
  4307  05DE  0008               	return
  4308  05DF                     __end_of_eeprom_write:
  4309                           
  4310                           	psect	text34
  4311  0663                     __ptext34:	
  4312 ;; *************** function _eeprom_read *****************
  4313 ;; Defined at:
  4314 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  addr            1    wreg     unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  addr            1   11[BANK0 ] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      unsigned char 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 300/0
  4325 ;;		On exit  : 300/100
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4328 ;;      Params:         0       0       0       0
  4329 ;;      Locals:         0       1       0       0
  4330 ;;      Temps:          0       1       0       0
  4331 ;;      Totals:         0       2       0       0
  4332 ;;Total ram usage:        2 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 5
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_main
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342  0663                     _eeprom_read:	
  4343                           ;psect for function _eeprom_read
  4344                           
  4345                           
  4346                           ;incstack = 0
  4347                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4348                           ;eeprom_read@addr stored from wreg
  4349  0663  00AB               	movwf	eeprom_read@addr
  4350  0664  2E66               	goto	l519
  4351  0665                     u1331:
  4352  0665  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0666                     l519:	
  4354                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 8:  do
  4355                           
  4356  0666  0064               	clrwdt	;# 
  4357  0667  1683               	bsf	3,5	;RP0=1, select bank1
  4358  0668  1303               	bcf	3,6	;RP1=0, select bank1
  4359  0669  189C               	btfsc	28,1	;volsfr
  4360  066A  2E65               	goto	u1331
  4361                           
  4362                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4363  066B  1283               	bcf	3,5	;RP0=0, select bank0
  4364  066C  082B               	movf	eeprom_read@addr,w
  4365  066D  1683               	bsf	3,5	;RP0=1, select bank1
  4366  066E  009B               	movwf	27	;volatile
  4367  066F  303F               	movlw	63
  4368  0670  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0671  00AA               	movwf	??_eeprom_read
  4370  0672  082A               	movf	??_eeprom_read,w
  4371  0673  1683               	bsf	3,5	;RP0=1, select bank1
  4372  0674  059C               	andwf	28,f	;volsfr
  4373  0675  141C               	bsf	28,0	;volsfr
  4374  0676  081A               	movf	26,w	;volatile
  4375  0677  0008               	return
  4376  0678                     __end_of_eeprom_read:
  4377                           
  4378                           	psect	text35
  4379  0798                     __ptext35:	
  4380 ;; *************** function _button_init *****************
  4381 ;; Defined at:
  4382 ;;		line 90 in file "main.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 300/0
  4393 ;;		On exit  : 300/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4396 ;;      Params:         0       0       0       0
  4397 ;;      Locals:         0       0       0       0
  4398 ;;      Temps:          0       0       0       0
  4399 ;;      Totals:         0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 6
  4403 ;; This function calls:
  4404 ;;		_ex_int_add_isr_handler
  4405 ;;		_ioc_rb4_add_isr_handler
  4406 ;;		_ioc_rb5_add_isr_handler
  4407 ;; This function is called by:
  4408 ;;		_main
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412  0798                     _button_init:	
  4413                           ;psect for function _button_init
  4414                           
  4415                           
  4416                           ;main.c: 91:     OPTION_REGbits.INTEDG = 0;
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _button_init: [wreg+status,2+status,0+pclath+cstack]
  4420  0798  1683               	bsf	3,5	;RP0=1, select bank1
  4421  0799  1301               	bcf	1,6	;volatile
  4422                           
  4423                           ;main.c: 92:     ioc_rb5_add_isr_handler(button3_handler);
  4424  079A  3003               	movlw	(low (fp__button3_handler-i1fpbase))& (0+255)
  4425  079B  2741               	fcall	_ioc_rb5_add_isr_handler
  4426                           
  4427                           ;main.c: 93:     ioc_rb4_add_isr_handler(button2_handler);
  4428  079C  3002               	movlw	(low (fp__button2_handler-i1fpbase))& (0+255)
  4429  079D  276E               	fcall	_ioc_rb4_add_isr_handler
  4430                           
  4431                           ;main.c: 94:     ex_int_add_isr_handler(button1_handler);
  4432  079E  3001               	movlw	(low (fp__button1_handler-i1fpbase))& (0+255)
  4433  079F  27B1               	fcall	_ex_int_add_isr_handler
  4434  07A0  0008               	return
  4435  07A1                     __end_of_button_init:
  4436                           
  4437                           	psect	text36
  4438  0741                     __ptext36:	
  4439 ;; *************** function _ioc_rb5_add_isr_handler *****************
  4440 ;; Defined at:
  4441 ;;		line 43 in file "it_handle.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  handler         1    wreg     PTR FTN()void 
  4444 ;;		 -> button3_handler(1), 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  handler         1   11[BANK0 ] PTR FTN()void 
  4447 ;;		 -> button3_handler(1), 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg
  4452 ;; Tracked objects:
  4453 ;;		On entry : 300/100
  4454 ;;		On exit  : 300/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4457 ;;      Params:         0       0       0       0
  4458 ;;      Locals:         0       1       0       0
  4459 ;;      Temps:          0       1       0       0
  4460 ;;      Totals:         0       2       0       0
  4461 ;;Total ram usage:        2 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 5
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_button_init
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471  0741                     _ioc_rb5_add_isr_handler:	
  4472                           ;psect for function _ioc_rb5_add_isr_handler
  4473                           
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in _ioc_rb5_add_isr_handler: [wreg]
  4477                           ;ioc_rb5_add_isr_handler@handler stored from wreg
  4478  0741  1283               	bcf	3,5	;RP0=0, select bank0
  4479  0742  00AB               	movwf	ioc_rb5_add_isr_handler@handler
  4480                           
  4481                           ;it_handle.c: 44:     INTCONbits.RBIF = 0;
  4482  0743  100B               	bcf	11,0	;volatile
  4483                           
  4484                           ;it_handle.c: 45:     INTCONbits.RBIE = 1;
  4485  0744  158B               	bsf	11,3	;volatile
  4486                           
  4487                           ;it_handle.c: 46:     TRISBbits.TRISB5 = 1;
  4488  0745  1683               	bsf	3,5	;RP0=1, select bank1
  4489  0746  1686               	bsf	6,5	;volatile
  4490                           
  4491                           ;it_handle.c: 47:     _ioc_rb5_isr = handler;
  4492  0747  1283               	bcf	3,5	;RP0=0, select bank0
  4493  0748  082B               	movf	ioc_rb5_add_isr_handler@handler,w
  4494  0749  00AA               	movwf	??_ioc_rb5_add_isr_handler
  4495  074A  082A               	movf	??_ioc_rb5_add_isr_handler,w
  4496  074B  00D9               	movwf	__ioc_rb5_isr
  4497  074C  0008               	return
  4498  074D                     __end_of_ioc_rb5_add_isr_handler:
  4499                           
  4500                           	psect	text37
  4501  076E                     __ptext37:	
  4502 ;; *************** function _ioc_rb4_add_isr_handler *****************
  4503 ;; Defined at:
  4504 ;;		line 36 in file "it_handle.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  handler         1    wreg     PTR FTN()void 
  4507 ;;		 -> button2_handler(1), 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  handler         1   11[BANK0 ] PTR FTN()void 
  4510 ;;		 -> button2_handler(1), 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg
  4515 ;; Tracked objects:
  4516 ;;		On entry : 300/0
  4517 ;;		On exit  : 300/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4520 ;;      Params:         0       0       0       0
  4521 ;;      Locals:         0       1       0       0
  4522 ;;      Temps:          0       1       0       0
  4523 ;;      Totals:         0       2       0       0
  4524 ;;Total ram usage:        2 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 5
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_button_init
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534  076E                     _ioc_rb4_add_isr_handler:	
  4535                           ;psect for function _ioc_rb4_add_isr_handler
  4536                           
  4537                           
  4538                           ;incstack = 0
  4539                           ; Regs used in _ioc_rb4_add_isr_handler: [wreg]
  4540                           ;ioc_rb4_add_isr_handler@handler stored from wreg
  4541  076E  00AB               	movwf	ioc_rb4_add_isr_handler@handler
  4542                           
  4543                           ;it_handle.c: 37:     INTCONbits.RBIF = 0;
  4544  076F  100B               	bcf	11,0	;volatile
  4545                           
  4546                           ;it_handle.c: 38:     INTCONbits.RBIE = 1;
  4547  0770  158B               	bsf	11,3	;volatile
  4548                           
  4549                           ;it_handle.c: 39:     TRISBbits.TRISB4 = 1;
  4550  0771  1683               	bsf	3,5	;RP0=1, select bank1
  4551  0772  1606               	bsf	6,4	;volatile
  4552                           
  4553                           ;it_handle.c: 40:     _ioc_rb4_isr = handler;
  4554  0773  1283               	bcf	3,5	;RP0=0, select bank0
  4555  0774  082B               	movf	ioc_rb4_add_isr_handler@handler,w
  4556  0775  00AA               	movwf	??_ioc_rb4_add_isr_handler
  4557  0776  082A               	movf	??_ioc_rb4_add_isr_handler,w
  4558  0777  00DA               	movwf	__ioc_rb4_isr
  4559  0778  0008               	return
  4560  0779                     __end_of_ioc_rb4_add_isr_handler:
  4561                           
  4562                           	psect	text38
  4563  07B1                     __ptext38:	
  4564 ;; *************** function _ex_int_add_isr_handler *****************
  4565 ;; Defined at:
  4566 ;;		line 30 in file "it_handle.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  handler         1    wreg     PTR FTN()void 
  4569 ;;		 -> button1_handler(1), 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  handler         1   11[BANK0 ] PTR FTN()void 
  4572 ;;		 -> button1_handler(1), 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg
  4577 ;; Tracked objects:
  4578 ;;		On entry : 300/0
  4579 ;;		On exit  : 300/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4582 ;;      Params:         0       0       0       0
  4583 ;;      Locals:         0       1       0       0
  4584 ;;      Temps:          0       1       0       0
  4585 ;;      Totals:         0       2       0       0
  4586 ;;Total ram usage:        2 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; Hardware stack levels required when called: 5
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_button_init
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596  07B1                     _ex_int_add_isr_handler:	
  4597                           ;psect for function _ex_int_add_isr_handler
  4598                           
  4599                           
  4600                           ;incstack = 0
  4601                           ; Regs used in _ex_int_add_isr_handler: [wreg]
  4602                           ;ex_int_add_isr_handler@handler stored from wreg
  4603  07B1  00AB               	movwf	ex_int_add_isr_handler@handler
  4604                           
  4605                           ;it_handle.c: 31:     INTCONbits.INTF = 0;
  4606  07B2  108B               	bcf	11,1	;volatile
  4607                           
  4608                           ;it_handle.c: 32:     INTCONbits.INTE = 1;
  4609  07B3  160B               	bsf	11,4	;volatile
  4610                           
  4611                           ;it_handle.c: 33:     _ex_int_isr = handler;
  4612  07B4  082B               	movf	ex_int_add_isr_handler@handler,w
  4613  07B5  00AA               	movwf	??_ex_int_add_isr_handler
  4614  07B6  082A               	movf	??_ex_int_add_isr_handler,w
  4615  07B7  00DB               	movwf	__ex_int_isr
  4616  07B8  0008               	return
  4617  07B9                     __end_of_ex_int_add_isr_handler:
  4618                           
  4619                           	psect	text39
  4620  0318                     __ptext39:	
  4621 ;; *************** function _ISR *****************
  4622 ;; Defined at:
  4623 ;;		line 50 in file "it_handle.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  iocMask         1    9[BANK0 ] unsigned char 
  4628 ;;  newPORTB        1    8[BANK0 ] unsigned char 
  4629 ;;  c               1    7[BANK0 ] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 300/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4639 ;;      Params:         0       0       0       0
  4640 ;;      Locals:         0       3       0       0
  4641 ;;      Temps:          0       5       0       0
  4642 ;;      Totals:         0       8       0       0
  4643 ;;Total ram usage:        8 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 4
  4646 ;; This function calls:
  4647 ;;		Absolute function
  4648 ;;		_button1_handler
  4649 ;;		_button2_handler
  4650 ;;		_button3_handler
  4651 ;;		_sys_tick_handler
  4652 ;;		_znp_usart_event_handler
  4653 ;; This function is called by:
  4654 ;;		Interrupt level 1
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658  0318                     _ISR:	
  4659                           ;psect for function _ISR
  4660                           
  4661                           
  4662                           ;it_handle.c: 51:     if (PIR1bits.RCIF) {
  4663  0318  1E8C               	btfss	12,5	;volatile
  4664  0319  2B30               	goto	i1l2423
  4665                           
  4666                           ;it_handle.c: 52:         if (RCSTAbits.OERR) {
  4667  031A  1C98               	btfss	24,1	;volatile
  4668  031B  2B1E               	goto	i1l173
  4669                           
  4670                           ;it_handle.c: 53:             RCSTAbits.CREN = 0;
  4671  031C  1218               	bcf	24,4	;volatile
  4672                           
  4673                           ;it_handle.c: 54:             RCSTAbits.CREN = 1;
  4674  031D  1618               	bsf	24,4	;volatile
  4675  031E                     i1l173:	
  4676                           ;it_handle.c: 55:         }
  4677                           
  4678                           
  4679                           ;it_handle.c: 57:         INTCONbits.T0IF = 0;
  4680  031E  110B               	bcf	11,2	;volatile
  4681                           
  4682                           ;it_handle.c: 58:         INTCONbits.T0IE = 1;
  4683  031F  168B               	bsf	11,5	;volatile
  4684                           
  4685                           ;it_handle.c: 62:         TMR0 = 215;
  4686  0320  30D7               	movlw	215
  4687  0321  0081               	movwf	1	;volatile
  4688                           
  4689                           ;it_handle.c: 64:         uint8_t c = RCREG;
  4690  0322  081A               	movf	26,w	;volatile
  4691  0323  00A2               	movwf	??_ISR
  4692  0324  0822               	movf	??_ISR,w
  4693  0325  00A7               	movwf	ISR@c
  4694                           
  4695                           ;it_handle.c: 65:         if (_usart_rx_isr)
  4696  0326  085E               	movf	__usart_rx_isr,w
  4697  0327  1903               	btfsc	3,2
  4698  0328  2B30               	goto	i1l2423
  4699                           
  4700                           ;it_handle.c: 66:             _usart_rx_isr(USART_RX_DATA, &c);
  4701  0329  01FC               	clrf	znp_usart_event_handler@rx_event
  4702  032A  3027               	movlw	(low (ISR@c| 0))& (0+255)
  4703  032B  00A2               	movwf	??_ISR
  4704  032C  0822               	movf	??_ISR,w
  4705  032D  00FD               	movwf	znp_usart_event_handler@event_data
  4706  032E  085E               	movf	__usart_rx_isr,w
  4707  032F  201F               	fcall	i1fptable
  4708  0330                     i1l2423:
  4709                           
  4710                           ;it_handle.c: 69:     if (INTCONbits.T0IF) {
  4711  0330  1D0B               	btfss	11,2	;volatile
  4712  0331  2B3E               	goto	i1l2431
  4713                           
  4714                           ;it_handle.c: 70:         INTCONbits.T0IF = 0;
  4715  0332  110B               	bcf	11,2	;volatile
  4716                           
  4717                           ;it_handle.c: 71:         INTCONbits.T0IE = 0;
  4718  0333  128B               	bcf	11,5	;volatile
  4719                           
  4720                           ;it_handle.c: 72:         if (_usart_rx_isr)
  4721  0334  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0335  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0336  085E               	movf	__usart_rx_isr,w
  4724  0337  1903               	btfsc	3,2
  4725  0338  2B3E               	goto	i1l2431
  4726                           
  4727                           ;it_handle.c: 73:             _usart_rx_isr(USART_RX_CMPLT, (0));
  4728  0339  01FC               	clrf	znp_usart_event_handler@rx_event
  4729  033A  0AFC               	incf	znp_usart_event_handler@rx_event,f
  4730  033B  01FD               	clrf	znp_usart_event_handler@event_data
  4731  033C  085E               	movf	__usart_rx_isr,w
  4732  033D  201F               	fcall	i1fptable
  4733  033E                     i1l2431:
  4734                           
  4735                           ;it_handle.c: 76:     if (PIR1bits.TMR1IF) {
  4736  033E  1283               	bcf	3,5	;RP0=0, select bank0
  4737  033F  1303               	bcf	3,6	;RP1=0, select bank0
  4738  0340  1C0C               	btfss	12,0	;volatile
  4739  0341  2B4A               	goto	i1l2439
  4740                           
  4741                           ;it_handle.c: 77:         if (_tmr1_isr)
  4742  0342  085D               	movf	__tmr1_isr,w
  4743  0343  1903               	btfsc	3,2
  4744  0344  2B47               	goto	i1l2437
  4745                           
  4746                           ;it_handle.c: 78:             _tmr1_isr();
  4747  0345  085D               	movf	__tmr1_isr,w
  4748  0346  201F               	fcall	i1fptable
  4749  0347                     i1l2437:
  4750                           
  4751                           ;it_handle.c: 79:         PIR1bits.TMR1IF = 0;
  4752  0347  1283               	bcf	3,5	;RP0=0, select bank0
  4753  0348  1303               	bcf	3,6	;RP1=0, select bank0
  4754  0349  100C               	bcf	12,0	;volatile
  4755  034A                     i1l2439:
  4756                           
  4757                           ;it_handle.c: 81:     if (PIR1bits.TMR2IF) {
  4758  034A  188C               	btfsc	12,1	;volatile
  4759                           
  4760                           ;it_handle.c: 84:         PIR1bits.TMR2IF = 0;
  4761  034B  108C               	bcf	12,1	;volatile
  4762                           
  4763                           ;it_handle.c: 87:     if (INTCONbits.INTF) {
  4764                           
  4765                           ;it_handle.c: 85:     }
  4766  034C  1C8B               	btfss	11,1	;volatile
  4767  034D  2B54               	goto	i1l2449
  4768                           
  4769                           ;it_handle.c: 88:         if (_ex_int_isr)
  4770  034E  085B               	movf	__ex_int_isr,w
  4771  034F  1903               	btfsc	3,2
  4772  0350  2B53               	goto	i1l2447
  4773                           
  4774                           ;it_handle.c: 89:             _ex_int_isr();
  4775  0351  085B               	movf	__ex_int_isr,w
  4776  0352  201F               	fcall	i1fptable
  4777  0353                     i1l2447:
  4778                           
  4779                           ;it_handle.c: 90:         INTCONbits.INTF = 0;
  4780  0353  108B               	bcf	11,1	;volatile
  4781  0354                     i1l2449:
  4782                           
  4783                           ;it_handle.c: 93:     if (INTCONbits.RBIF) {
  4784  0354  1C0B               	btfss	11,0	;volatile
  4785  0355  2B79               	goto	i1l191
  4786                           
  4787                           ;it_handle.c: 94:         static uint8_t tmpPORTB = 0xFF;;it_handle.c: 95:         uint8
      +                          _t newPORTB = PORTB;
  4788  0356  1283               	bcf	3,5	;RP0=0, select bank0
  4789  0357  1303               	bcf	3,6	;RP1=0, select bank0
  4790  0358  0806               	movf	6,w	;volatile
  4791  0359  00A2               	movwf	??_ISR
  4792  035A  0822               	movf	??_ISR,w
  4793  035B  00A8               	movwf	ISR@newPORTB
  4794                           
  4795                           ;it_handle.c: 96:         uint8_t iocMask = (tmpPORTB ^ newPORTB) & TRISB;
  4796  035C  0862               	movf	ISR@tmpPORTB,w
  4797  035D  0628               	xorwf	ISR@newPORTB,w
  4798  035E  1683               	bsf	3,5	;RP0=1, select bank1
  4799  035F  0506               	andwf	6,w	;volatile
  4800  0360  1283               	bcf	3,5	;RP0=0, select bank0
  4801  0361  00A2               	movwf	??_ISR
  4802  0362  0822               	movf	??_ISR,w
  4803  0363  00A9               	movwf	ISR@iocMask
  4804                           
  4805                           ;it_handle.c: 98:         if (iocMask & (1 << 4)) {
  4806  0364  1E29               	btfss	ISR@iocMask,4
  4807  0365  2B6B               	goto	i1l186
  4808                           
  4809                           ;it_handle.c: 99:             if (_ioc_rb4_isr)
  4810  0366  085A               	movf	__ioc_rb4_isr,w
  4811  0367  1903               	btfsc	3,2
  4812  0368  2B72               	goto	i1l2465
  4813                           
  4814                           ;it_handle.c: 100:                 _ioc_rb4_isr();
  4815  0369  085A               	movf	__ioc_rb4_isr,w
  4816  036A  2B71               	goto	L2
  4817  036B                     i1l186:
  4818  036B  1EA9               	btfss	ISR@iocMask,5
  4819  036C  2B72               	goto	i1l2465
  4820                           
  4821                           ;it_handle.c: 102:             if (_ioc_rb5_isr)
  4822  036D  0859               	movf	__ioc_rb5_isr,w
  4823  036E  1903               	btfsc	3,2
  4824  036F  2B72               	goto	i1l2465
  4825                           
  4826                           ;it_handle.c: 103:                 _ioc_rb5_isr();
  4827  0370  0859               	movf	__ioc_rb5_isr,w
  4828  0371                     L2:
  4829  0371  201F               	fcall	i1fptable
  4830  0372                     i1l2465:
  4831                           
  4832                           ;it_handle.c: 105:         tmpPORTB = newPORTB;
  4833  0372  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0373  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0374  0828               	movf	ISR@newPORTB,w
  4836  0375  00A2               	movwf	??_ISR
  4837  0376  0822               	movf	??_ISR,w
  4838  0377  00E2               	movwf	ISR@tmpPORTB
  4839                           
  4840                           ;it_handle.c: 106:         INTCONbits.RBIF = 0;
  4841  0378  100B               	bcf	11,0	;volatile
  4842  0379                     i1l191:
  4843  0379  1283               	bcf	3,5	;RP0=0, select bank0
  4844  037A  1303               	bcf	3,6	;RP1=0, select bank0
  4845  037B  0826               	movf	??_ISR+4,w
  4846  037C  00FF               	movwf	127
  4847  037D  0825               	movf	??_ISR+3,w
  4848  037E  008A               	movwf	10
  4849  037F  0824               	movf	??_ISR+2,w
  4850  0380  0084               	movwf	4
  4851  0381  0E23               	swapf	??_ISR+1,w
  4852  0382  0083               	movwf	3
  4853  0383  0EFE               	swapf	126,f
  4854  0384  0E7E               	swapf	126,w
  4855  0385  0009               	retfie
  4856  0386                     __end_of_ISR:
  4857                           
  4858                           	psect	intentry
  4859  0004                     __pintentry:	
  4860                           ;incstack = 0
  4861 ;; hardware stack exceeded
  4862                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4863                           
  4864  0004                     interrupt_function:
  4865  007E                     saved_w	set	btemp
  4866  0004  00FE               	movwf	btemp
  4867  0005  0E03               	swapf	3,w
  4868  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4870  0008  00A3               	movwf	??_ISR+1
  4871  0009  0804               	movf	4,w
  4872  000A  00A4               	movwf	??_ISR+2
  4873  000B  080A               	movf	10,w
  4874  000C  00A5               	movwf	??_ISR+3
  4875  000D  087F               	movf	btemp+1,w
  4876  000E  00A6               	movwf	??_ISR+4
  4877  000F  2B18               	ljmp	_ISR
  4878                           
  4879                           	psect	text40
  4880  0634                     __ptext40:	
  4881 ;; *************** function _znp_usart_event_handler *****************
  4882 ;; Defined at:
  4883 ;;		line 81 in file "zb_znp.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  rx_event        1   12[COMMON] enum E748
  4886 ;;  event_data      1   13[COMMON] PTR void 
  4887 ;;		 -> ISR@c(1), NULL(0), 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 300/0
  4896 ;;		On exit  : 300/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4899 ;;      Params:         2       0       0       0
  4900 ;;      Locals:         0       0       0       0
  4901 ;;      Temps:          0       2       0       0
  4902 ;;      Totals:         2       2       0       0
  4903 ;;Total ram usage:        4 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; Hardware stack levels required when called: 3
  4906 ;; This function calls:
  4907 ;;		_znp_frame_parser
  4908 ;; This function is called by:
  4909 ;;		_znp_init
  4910 ;;		_ISR
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914  0634                     _znp_usart_event_handler:	
  4915                           ;psect for function _znp_usart_event_handler
  4916                           
  4917                           
  4918                           ;zb_znp.c: 82:     switch (rx_event) {
  4919                           
  4920                           ;incstack = 0
  4921 ;; hardware stack exceeded
  4922                           ; Regs used in _znp_usart_event_handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4923  0634  2E3D               	goto	i1l2305
  4924  0635                     i1l2299:
  4925                           
  4926                           ;zb_znp.c: 84:             znp_frame_parser(*(uint8_t*) event_data);
  4927  0635  087D               	movf	znp_usart_event_handler@event_data,w
  4928  0636  0084               	movwf	4
  4929  0637  1383               	bcf	3,7	;select IRP bank0
  4930  0638  0800               	movf	0,w
  4931  0639  227B               	fcall	_znp_frame_parser
  4932                           
  4933                           ;zb_znp.c: 85:             break;
  4934  063A  0008               	return
  4935  063B                     i1l2301:
  4936                           
  4937                           ;zb_znp.c: 87:             znp_state = SOP_STATE;
  4938  063B  01D6               	clrf	_znp_state
  4939                           
  4940                           ;zb_znp.c: 88:             break;
  4941  063C  0008               	return
  4942  063D                     i1l2305:
  4943  063D  087C               	movf	znp_usart_event_handler@rx_event,w
  4944  063E  00A0               	movwf	??_znp_usart_event_handler
  4945  063F  01A1               	clrf	??_znp_usart_event_handler+1
  4946                           
  4947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4948                           ; Switch size 1, requested type "simple"
  4949                           ; Number of cases is 1, Range of values is 0 to 0
  4950                           ; switch strategies available:
  4951                           ; Name         Instructions Cycles
  4952                           ; simple_byte            4     3 (average)
  4953                           ; direct_byte            7     6 (fixed)
  4954                           ; jumptable            260     6 (fixed)
  4955                           ;	Chosen strategy is simple_byte
  4956  0640  0821               	movf	??_znp_usart_event_handler+1,w
  4957  0641  3A00               	xorlw	0	; case 0
  4958  0642  1903               	skipnz
  4959  0643  2E45               	goto	i1l2571
  4960  0644  2E4D               	goto	i1l313
  4961  0645                     i1l2571:
  4962                           
  4963                           ; Switch size 1, requested type "simple"
  4964                           ; Number of cases is 2, Range of values is 0 to 1
  4965                           ; switch strategies available:
  4966                           ; Name         Instructions Cycles
  4967                           ; simple_byte            7     4 (average)
  4968                           ; direct_byte            8     6 (fixed)
  4969                           ; jumptable            260     6 (fixed)
  4970                           ;	Chosen strategy is simple_byte
  4971  0645  0820               	movf	??_znp_usart_event_handler,w
  4972  0646  3A00               	xorlw	0	; case 0
  4973  0647  1903               	skipnz
  4974  0648  2E35               	goto	i1l2299
  4975  0649  3A01               	xorlw	1	; case 1
  4976  064A  1903               	skipnz
  4977  064B  2E3B               	goto	i1l2301
  4978  064C  2E4D               	goto	i1l313
  4979  064D                     i1l313:
  4980  064D  0008               	return
  4981  064E                     __end_of_znp_usart_event_handler:
  4982                           
  4983                           	psect	text41
  4984  027B                     __ptext41:	
  4985 ;; *************** function _znp_frame_parser *****************
  4986 ;; Defined at:
  4987 ;;		line 32 in file "zb_znp.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  ch              1    wreg     unsigned char 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  ch              1   11[COMMON] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : B00/0
  4998 ;;		On exit  : 300/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5001 ;;      Params:         0       0       0       0
  5002 ;;      Locals:         1       0       0       0
  5003 ;;      Temps:          2       0       0       0
  5004 ;;      Totals:         3       0       0       0
  5005 ;;Total ram usage:        3 bytes
  5006 ;; Hardware stack levels used: 1
  5007 ;; Hardware stack levels required when called: 2
  5008 ;; This function calls:
  5009 ;;		Absolute function
  5010 ;;		_znp_msg_handler
  5011 ;; This function is called by:
  5012 ;;		_znp_usart_event_handler
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016  027B                     _znp_frame_parser:	
  5017                           ;psect for function _znp_frame_parser
  5018                           
  5019                           
  5020                           ;incstack = 0
  5021 ;; hardware stack exceeded
  5022                           ; Regs used in _znp_frame_parser: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5023                           ;znp_frame_parser@ch stored from wreg
  5024  027B  00FB               	movwf	znp_frame_parser@ch
  5025                           
  5026                           ;zb_znp.c: 33:     static uint8_t znp_fcs, rcv_index;;zb_znp.c: 35:     switch (znp_stat
      +                          e) {
  5027  027C  2AFB               	goto	i1l2091
  5028  027D                     i1l2043:
  5029                           
  5030                           ;zb_znp.c: 37:             if (ch == 0xFE) {
  5031  027D  30FE               	movlw	254
  5032  027E  067B               	xorwf	znp_frame_parser@ch,w
  5033  027F  1D03               	btfss	3,2
  5034  0280  0008               	return
  5035                           
  5036                           ;zb_znp.c: 38:                 znp_fcs = 0;
  5037  0281  01D5               	clrf	znp_frame_parser@znp_fcs
  5038                           
  5039                           ;zb_znp.c: 39:                 rcv_index = 0;
  5040  0282  01D4               	clrf	znp_frame_parser@rcv_index
  5041                           
  5042                           ;zb_znp.c: 40:                 znp_state = LEN_STATE;
  5043  0283  01D6               	clrf	_znp_state
  5044  0284  0AD6               	incf	_znp_state,f
  5045  0285  0008               	return
  5046  0286                     i1l2049:
  5047                           
  5048                           ;zb_znp.c: 44:             znp_recv_msg.len = ch;
  5049  0286  087B               	movf	znp_frame_parser@ch,w
  5050  0287  00F9               	movwf	??_znp_frame_parser
  5051  0288  0879               	movf	??_znp_frame_parser,w
  5052  0289  1683               	bsf	3,5	;RP0=1, select bank1
  5053  028A  00B9               	movwf	_znp_recv_msg^(0+128)
  5054                           
  5055                           ;zb_znp.c: 45:             znp_fcs ^= ch;
  5056  028B  087B               	movf	znp_frame_parser@ch,w
  5057  028C  00F9               	movwf	??_znp_frame_parser
  5058  028D  0879               	movf	??_znp_frame_parser,w
  5059  028E  1283               	bcf	3,5	;RP0=0, select bank0
  5060  028F  06D5               	xorwf	znp_frame_parser@znp_fcs,f
  5061                           
  5062                           ;zb_znp.c: 46:             znp_state = CMD0_STATE;
  5063  0290  3002               	movlw	2
  5064  0291  00F9               	movwf	??_znp_frame_parser
  5065  0292  0879               	movf	??_znp_frame_parser,w
  5066  0293  00D6               	movwf	_znp_state
  5067                           
  5068                           ;zb_znp.c: 47:             break;
  5069  0294  0008               	return
  5070  0295                     i1l2055:
  5071                           
  5072                           ;zb_znp.c: 49:             znp_recv_msg.cmd0 = ch;
  5073  0295  087B               	movf	znp_frame_parser@ch,w
  5074  0296  00F9               	movwf	??_znp_frame_parser
  5075  0297  0879               	movf	??_znp_frame_parser,w
  5076  0298  1683               	bsf	3,5	;RP0=1, select bank1
  5077  0299  00BA               	movwf	(_znp_recv_msg^(0+128)+1)
  5078                           
  5079                           ;zb_znp.c: 50:             znp_fcs ^= ch;
  5080  029A  087B               	movf	znp_frame_parser@ch,w
  5081  029B  00F9               	movwf	??_znp_frame_parser
  5082  029C  0879               	movf	??_znp_frame_parser,w
  5083  029D  1283               	bcf	3,5	;RP0=0, select bank0
  5084  029E  06D5               	xorwf	znp_frame_parser@znp_fcs,f
  5085                           
  5086                           ;zb_znp.c: 51:             znp_state = CMD1_STATE;
  5087  029F  3003               	movlw	3
  5088  02A0  00F9               	movwf	??_znp_frame_parser
  5089  02A1  0879               	movf	??_znp_frame_parser,w
  5090  02A2  00D6               	movwf	_znp_state
  5091                           
  5092                           ;zb_znp.c: 52:             break;
  5093  02A3  0008               	return
  5094  02A4                     i1l2061:
  5095                           
  5096                           ;zb_znp.c: 54:             znp_recv_msg.cmd1 = ch;
  5097  02A4  087B               	movf	znp_frame_parser@ch,w
  5098  02A5  00F9               	movwf	??_znp_frame_parser
  5099  02A6  0879               	movf	??_znp_frame_parser,w
  5100  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  5101  02A8  00BB               	movwf	(_znp_recv_msg^(0+128)+2)
  5102                           
  5103                           ;zb_znp.c: 55:             znp_fcs ^= ch;
  5104  02A9  087B               	movf	znp_frame_parser@ch,w
  5105  02AA  00F9               	movwf	??_znp_frame_parser
  5106  02AB  0879               	movf	??_znp_frame_parser,w
  5107  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  5108  02AD  06D5               	xorwf	znp_frame_parser@znp_fcs,f
  5109                           
  5110                           ;zb_znp.c: 56:             znp_state = (znp_recv_msg.len > 0) ? DATA_STATE : FCS_STATE;
  5111  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  5112  02AF  0839               	movf	_znp_recv_msg^(0+128),w
  5113  02B0  1D03               	btfss	3,2
  5114  02B1  2AB8               	goto	i1l2069
  5115  02B2                     i1l2067:
  5116  02B2  3005               	movlw	5
  5117  02B3  00F9               	movwf	??_znp_frame_parser
  5118  02B4  0879               	movf	??_znp_frame_parser,w
  5119  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  5120  02B6  00D6               	movwf	_znp_state
  5121  02B7  0008               	return
  5122  02B8                     i1l2069:
  5123  02B8  3004               	movlw	4
  5124  02B9  00F9               	movwf	??_znp_frame_parser
  5125  02BA  0879               	movf	??_znp_frame_parser,w
  5126  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  5127  02BC  00D6               	movwf	_znp_state
  5128  02BD  0008               	return
  5129  02BE                     i1l2071:
  5130                           
  5131                           ;zb_znp.c: 59:             znp_recv_msg.data[rcv_index++] = ch;
  5132  02BE  087B               	movf	znp_frame_parser@ch,w
  5133  02BF  00F9               	movwf	??_znp_frame_parser
  5134  02C0  0854               	movf	znp_frame_parser@rcv_index,w
  5135  02C1  3EBC               	addlw	(low ((_znp_recv_msg| 0+3)))& (0+255)
  5136  02C2  0084               	movwf	4
  5137  02C3  0879               	movf	??_znp_frame_parser,w
  5138  02C4  0080               	movwf	0
  5139  02C5  3001               	movlw	1
  5140  02C6  00F9               	movwf	??_znp_frame_parser
  5141  02C7  0879               	movf	??_znp_frame_parser,w
  5142  02C8  07D4               	addwf	znp_frame_parser@rcv_index,f
  5143                           
  5144                           ;zb_znp.c: 60:             znp_fcs ^= ch;
  5145  02C9  087B               	movf	znp_frame_parser@ch,w
  5146  02CA  00F9               	movwf	??_znp_frame_parser
  5147  02CB  0879               	movf	??_znp_frame_parser,w
  5148  02CC  06D5               	xorwf	znp_frame_parser@znp_fcs,f
  5149                           
  5150                           ;zb_znp.c: 61:             if (rcv_index == znp_recv_msg.len)
  5151  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  5152  02CE  0839               	movf	_znp_recv_msg^(0+128),w
  5153  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  5154  02D0  0654               	xorwf	znp_frame_parser@rcv_index,w
  5155  02D1  1D03               	skipz
  5156  02D2  0008               	return
  5157  02D3  2AB2               	goto	i1l2067
  5158  02D4                     i1l2081:
  5159                           
  5160                           ;zb_znp.c: 65:             if (znp_fcs == ch) {
  5161  02D4  0855               	movf	znp_frame_parser@znp_fcs,w
  5162  02D5  067B               	xorwf	znp_frame_parser@ch,w
  5163  02D6  1D03               	skipz
  5164  02D7  2AF7               	goto	i1l2087
  5165                           
  5166                           ;zb_znp.c: 66:                 last_cmd_rcv
  5167  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  5168  02D9  083A               	movf	(_znp_recv_msg^(0+128)+1),w
  5169  02DA  00F9               	movwf	??_znp_frame_parser
  5170  02DB  01FA               	clrf	??_znp_frame_parser+1
  5171  02DC  0879               	movf	??_znp_frame_parser,w
  5172  02DD  00FA               	movwf	??_znp_frame_parser+1
  5173  02DE  01F9               	clrf	??_znp_frame_parser
  5174  02DF  083B               	movf	(_znp_recv_msg^(0+128)+2),w
  5175  02E0  0779               	addwf	??_znp_frame_parser,w
  5176  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  5177  02E2  00D0               	movwf	_last_cmd_rcv
  5178  02E3  087A               	movf	??_znp_frame_parser+1,w
  5179  02E4  1803               	skipnc
  5180  02E5  0A7A               	incf	??_znp_frame_parser+1,w
  5181  02E6  00D1               	movwf	_last_cmd_rcv+1
  5182                           
  5183                           ;zb_znp.c: 68:                 _zb_znp_cb(
  5184  02E7  0851               	movf	_last_cmd_rcv+1,w
  5185  02E8  00F3               	movwf	znp_msg_handler@cmd+1
  5186  02E9  0850               	movf	_last_cmd_rcv,w
  5187  02EA  00F2               	movwf	znp_msg_handler@cmd
  5188  02EB  30BC               	movlw	(low ((_znp_recv_msg| 0+3)))& (0+255)
  5189  02EC  00F9               	movwf	??_znp_frame_parser
  5190  02ED  0879               	movf	??_znp_frame_parser,w
  5191  02EE  00F4               	movwf	znp_msg_handler@data
  5192  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  5193  02F0  0839               	movf	_znp_recv_msg^(0+128),w
  5194  02F1  00FA               	movwf	??_znp_frame_parser+1
  5195  02F2  087A               	movf	??_znp_frame_parser+1,w
  5196  02F3  00F5               	movwf	znp_msg_handler@len
  5197  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  5198  02F5  0857               	movf	__zb_znp_cb,w
  5199  02F6  201F               	fcall	i1fptable
  5200  02F7                     i1l2087:
  5201                           
  5202                           ;zb_znp.c: 74:             znp_state = SOP_STATE;
  5203  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  5204  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  5205  02F9  01D6               	clrf	_znp_state
  5206                           
  5207                           ;zb_znp.c: 75:             break;
  5208  02FA  0008               	return
  5209  02FB                     i1l2091:
  5210  02FB  0856               	movf	_znp_state,w
  5211  02FC  00F9               	movwf	??_znp_frame_parser
  5212  02FD  01FA               	clrf	??_znp_frame_parser+1
  5213                           
  5214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5215                           ; Switch size 1, requested type "simple"
  5216                           ; Number of cases is 1, Range of values is 0 to 0
  5217                           ; switch strategies available:
  5218                           ; Name         Instructions Cycles
  5219                           ; simple_byte            4     3 (average)
  5220                           ; direct_byte            7     6 (fixed)
  5221                           ; jumptable            260     6 (fixed)
  5222                           ;	Chosen strategy is simple_byte
  5223  02FE  087A               	movf	??_znp_frame_parser+1,w
  5224  02FF  3A00               	xorlw	0	; case 0
  5225  0300  1903               	skipnz
  5226  0301  2B03               	goto	i1l2573
  5227  0302  2B17               	goto	i1l305
  5228  0303                     i1l2573:
  5229                           
  5230                           ; Switch size 1, requested type "simple"
  5231                           ; Number of cases is 6, Range of values is 0 to 5
  5232                           ; switch strategies available:
  5233                           ; Name         Instructions Cycles
  5234                           ; direct_byte           12     6 (fixed)
  5235                           ; simple_byte           19    10 (average)
  5236                           ; jumptable            260     6 (fixed)
  5237                           ;	Chosen strategy is simple_byte
  5238  0303  0879               	movf	??_znp_frame_parser,w
  5239  0304  3A00               	xorlw	0	; case 0
  5240  0305  1903               	skipnz
  5241  0306  2A7D               	goto	i1l2043
  5242  0307  3A01               	xorlw	1	; case 1
  5243  0308  1903               	skipnz
  5244  0309  2A86               	goto	i1l2049
  5245  030A  3A03               	xorlw	3	; case 2
  5246  030B  1903               	skipnz
  5247  030C  2A95               	goto	i1l2055
  5248  030D  3A01               	xorlw	1	; case 3
  5249  030E  1903               	skipnz
  5250  030F  2AA4               	goto	i1l2061
  5251  0310  3A07               	xorlw	7	; case 4
  5252  0311  1903               	skipnz
  5253  0312  2ABE               	goto	i1l2071
  5254  0313  3A01               	xorlw	1	; case 5
  5255  0314  1903               	skipnz
  5256  0315  2AD4               	goto	i1l2081
  5257  0316  2B17               	goto	i1l305
  5258  0317                     i1l305:
  5259  0317  0008               	return
  5260  0318                     __end_of_znp_frame_parser:
  5261                           
  5262                           	psect	text42
  5263  01D0                     __ptext42:	
  5264 ;; *************** function _znp_msg_handler *****************
  5265 ;; Defined at:
  5266 ;;		line 97 in file "main.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  cmd             2    2[COMMON] unsigned int 
  5269 ;;  data            1    4[COMMON] PTR unsigned char 
  5270 ;;		 -> znp_recv_msg(33), 
  5271 ;;  len             1    5[COMMON] unsigned char 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  endpoint        1    8[COMMON] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : B00/0
  5280 ;;		On exit  : 300/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5283 ;;      Params:         4       0       0       0
  5284 ;;      Locals:         1       0       0       0
  5285 ;;      Temps:          2       0       0       0
  5286 ;;      Totals:         7       0       0       0
  5287 ;;Total ram usage:        7 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 1
  5290 ;; This function calls:
  5291 ;;		_xEventGroupSetBits
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;;		_znp_frame_parser
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298  01D0                     _znp_msg_handler:	
  5299                           ;psect for function _znp_msg_handler
  5300                           
  5301                           
  5302                           ;main.c: 98:     switch (cmd) {
  5303                           
  5304                           ;incstack = 0
  5305 ;; hardware stack exceeded
  5306                           ; Regs used in _znp_msg_handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5307  01D0  2A68               	goto	i1l1857
  5308  01D1                     i1l1827:
  5309                           
  5310                           ;main.c: 100:         {;main.c: 109:             uint8_t endpoint = data[6];
  5311  01D1  0874               	movf	znp_msg_handler@data,w
  5312  01D2  3E06               	addlw	6
  5313  01D3  0084               	movwf	4
  5314  01D4  0800               	movf	0,w
  5315  01D5  00F6               	movwf	??_znp_msg_handler
  5316  01D6  0876               	movf	??_znp_msg_handler,w
  5317  01D7  00F8               	movwf	znp_msg_handler@endpoint
  5318                           
  5319                           ;main.c: 111:             if (endpoint == 0x03) {
  5320  01D8  3003               	movlw	3
  5321  01D9  0678               	xorwf	znp_msg_handler@endpoint,w
  5322  01DA  1D03               	btfss	3,2
  5323  01DB  2A34               	goto	i1l1847
  5324                           
  5325                           ;main.c: 112:                 if (data[17] == 0) {
  5326  01DC  0874               	movf	znp_msg_handler@data,w
  5327  01DD  3E11               	addlw	17
  5328  01DE  0084               	movwf	4
  5329  01DF  0800               	movf	0,w
  5330  01E0  1D03               	btfss	3,2
  5331  01E1  2A18               	goto	i1l1841
  5332                           
  5333                           ;main.c: 113:                     if (data[18] & (1 << 5)) PORTAbits.RA7 = ((data[18] & 
      +                          (1 << 0)) != 0);
  5334  01E2  0874               	movf	znp_msg_handler@data,w
  5335  01E3  3E12               	addlw	18
  5336  01E4  0084               	movwf	4
  5337  01E5  1E80               	btfss	0,5
  5338  01E6  29F3               	goto	i1l84
  5339  01E7  0874               	movf	znp_msg_handler@data,w
  5340  01E8  3E12               	addlw	18
  5341  01E9  0084               	movwf	4
  5342  01EA  1C00               	btfss	0,0
  5343  01EB  29F0               	goto	u88_20
  5344  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  5345  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  5346  01EE  1785               	bsf	5,7	;volatile
  5347  01EF  29F3               	goto	i1l84
  5348  01F0                     u88_20:
  5349  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  5350  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  5351  01F2  1385               	bcf	5,7	;volatile
  5352  01F3                     i1l84:
  5353                           
  5354                           ;main.c: 114:                     if (data[18] & (1 << 6)) PORTAbits.RA0 = ((data[18] & 
      +                          (1 << 1)) != 0);
  5355  01F3  0874               	movf	znp_msg_handler@data,w
  5356  01F4  3E12               	addlw	18
  5357  01F5  0084               	movwf	4
  5358  01F6  1383               	bcf	3,7	;select IRP bank0
  5359  01F7  1F00               	btfss	0,6
  5360  01F8  2A05               	goto	i1l85
  5361  01F9  0874               	movf	znp_msg_handler@data,w
  5362  01FA  3E12               	addlw	18
  5363  01FB  0084               	movwf	4
  5364  01FC  1C80               	btfss	0,1
  5365  01FD  2A02               	goto	u91_20
  5366  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  5367  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  5368  0200  1405               	bsf	5,0	;volatile
  5369  0201  2A05               	goto	i1l85
  5370  0202                     u91_20:
  5371  0202  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0203  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0204  1005               	bcf	5,0	;volatile
  5374  0205                     i1l85:
  5375                           
  5376                           ;main.c: 115:                     if (data[18] & (1 << 7)) PORTAbits.RA1 = ((data[18] & 
      +                          (1 << 2)) != 0);
  5377  0205  0874               	movf	znp_msg_handler@data,w
  5378  0206  3E12               	addlw	18
  5379  0207  0084               	movwf	4
  5380  0208  1383               	bcf	3,7	;select IRP bank0
  5381  0209  1F80               	btfss	0,7
  5382  020A  0008               	return
  5383  020B  0874               	movf	znp_msg_handler@data,w
  5384  020C  3E12               	addlw	18
  5385  020D  0084               	movwf	4
  5386  020E  1D00               	btfss	0,2
  5387  020F  2A14               	goto	u94_20
  5388  0210  1283               	bcf	3,5	;RP0=0, select bank0
  5389  0211  1303               	bcf	3,6	;RP1=0, select bank0
  5390  0212  1485               	bsf	5,1	;volatile
  5391  0213  0008               	return
  5392  0214                     u94_20:
  5393  0214  1283               	bcf	3,5	;RP0=0, select bank0
  5394  0215  1303               	bcf	3,6	;RP1=0, select bank0
  5395  0216  1085               	bcf	5,1	;volatile
  5396  0217  0008               	return
  5397  0218                     i1l1841:
  5398  0218  0874               	movf	znp_msg_handler@data,w
  5399  0219  3E11               	addlw	17
  5400  021A  0084               	movwf	4
  5401  021B  0300               	decf	0,w
  5402  021C  1D03               	btfss	3,2
  5403  021D  0008               	return
  5404                           
  5405                           ;main.c: 117:                     relay_node_addr = ((uint16_t)(((data[18]) & 0x00FF) + 
      +                          (((data[19]) & 0x00FF) << 8)));
  5406  021E  0874               	movf	znp_msg_handler@data,w
  5407  021F  3E13               	addlw	19
  5408  0220  0084               	movwf	4
  5409  0221  0800               	movf	0,w
  5410  0222  00F6               	movwf	??_znp_msg_handler
  5411  0223  01F7               	clrf	??_znp_msg_handler+1
  5412  0224  0876               	movf	??_znp_msg_handler,w
  5413  0225  00F7               	movwf	??_znp_msg_handler+1
  5414  0226  01F6               	clrf	??_znp_msg_handler
  5415  0227  0874               	movf	znp_msg_handler@data,w
  5416  0228  3E12               	addlw	18
  5417  0229  0084               	movwf	4
  5418  022A  0800               	movf	0,w
  5419  022B  0776               	addwf	??_znp_msg_handler,w
  5420  022C  00D2               	movwf	_relay_node_addr
  5421  022D  0877               	movf	??_znp_msg_handler+1,w
  5422  022E  1803               	skipnc
  5423  022F  0A77               	incf	??_znp_msg_handler+1,w
  5424  0230  00D3               	movwf	_relay_node_addr+1
  5425                           
  5426                           ;main.c: 118:                     xEventGroupSetBits((1 << 3));
  5427  0231  3008               	movlw	8
  5428  0232  2779               	fcall	_xEventGroupSetBits
  5429  0233  0008               	return
  5430  0234                     i1l1847:
  5431  0234  3002               	movlw	2
  5432  0235  0678               	xorwf	znp_msg_handler@endpoint,w
  5433  0236  1D03               	btfss	3,2
  5434  0237  0008               	return
  5435                           
  5436                           ;main.c: 121:                 PORTAbits.RA7 = ((data[18] & (1 << 0)) != 0);
  5437  0238  0874               	movf	znp_msg_handler@data,w
  5438  0239  3E12               	addlw	18
  5439  023A  0084               	movwf	4
  5440  023B  1C00               	btfss	0,0
  5441  023C  2A41               	goto	u98_20
  5442  023D  1283               	bcf	3,5	;RP0=0, select bank0
  5443  023E  1303               	bcf	3,6	;RP1=0, select bank0
  5444  023F  1785               	bsf	5,7	;volatile
  5445  0240  2A44               	goto	u99_24
  5446  0241                     u98_20:
  5447  0241  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0242  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0243  1385               	bcf	5,7	;volatile
  5450  0244                     u99_24:
  5451                           
  5452                           ;main.c: 122:                 PORTAbits.RA0 = ((data[18] & (1 << 1)) != 0);
  5453  0244  0874               	movf	znp_msg_handler@data,w
  5454  0245  3E12               	addlw	18
  5455  0246  0084               	movwf	4
  5456  0247  1383               	bcf	3,7	;select IRP bank0
  5457  0248  1C80               	btfss	0,1
  5458  0249  2A4E               	goto	u100_20
  5459  024A  1283               	bcf	3,5	;RP0=0, select bank0
  5460  024B  1303               	bcf	3,6	;RP1=0, select bank0
  5461  024C  1405               	bsf	5,0	;volatile
  5462  024D  2A51               	goto	u101_24
  5463  024E                     u100_20:
  5464  024E  1283               	bcf	3,5	;RP0=0, select bank0
  5465  024F  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0250  1005               	bcf	5,0	;volatile
  5467  0251                     u101_24:
  5468                           
  5469                           ;main.c: 123:                 PORTAbits.RA1 = ((data[18] & (1 << 2)) != 0);
  5470  0251  0874               	movf	znp_msg_handler@data,w
  5471  0252  3E12               	addlw	18
  5472  0253  0084               	movwf	4
  5473  0254  1383               	bcf	3,7	;select IRP bank0
  5474  0255  1D00               	btfss	0,2
  5475  0256  2A5B               	goto	u102_20
  5476  0257  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0258  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0259  1485               	bsf	5,1	;volatile
  5479  025A  0008               	return
  5480  025B                     u102_20:
  5481  025B  1283               	bcf	3,5	;RP0=0, select bank0
  5482  025C  1303               	bcf	3,6	;RP1=0, select bank0
  5483  025D  1085               	bcf	5,1	;volatile
  5484                           
  5485                           ;main.c: 125:         };main.c: 126:             break;
  5486  025E  0008               	return
  5487  025F                     i1l1851:
  5488                           
  5489                           ;main.c: 128:             if (data[0] == 0x07) xEventGroupSetBits((1 << 0));
  5490  025F  0874               	movf	znp_msg_handler@data,w
  5491  0260  0084               	movwf	4
  5492  0261  3007               	movlw	7
  5493  0262  0600               	xorwf	0,w
  5494  0263  1D03               	btfss	3,2
  5495  0264  0008               	return
  5496  0265  3001               	movlw	1
  5497  0266  2779               	fcall	_xEventGroupSetBits
  5498  0267  0008               	return
  5499  0268                     i1l1857:
  5500                           
  5501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5502                           ; Switch size 1, requested type "simple"
  5503                           ; Number of cases is 2, Range of values is 68 to 69
  5504                           ; switch strategies available:
  5505                           ; Name         Instructions Cycles
  5506                           ; simple_byte            7     4 (average)
  5507                           ; direct_byte           11     9 (fixed)
  5508                           ; jumptable            263     9 (fixed)
  5509                           ;	Chosen strategy is simple_byte
  5510  0268  0873               	movf	znp_msg_handler@cmd+1,w
  5511  0269  3A44               	xorlw	68	; case 68
  5512  026A  1903               	skipnz
  5513  026B  2A70               	goto	i1l2575
  5514  026C  3A01               	xorlw	1	; case 69
  5515  026D  1903               	skipnz
  5516  026E  2A75               	goto	i1l2577
  5517  026F  2A7A               	goto	i1l95
  5518  0270                     i1l2575:
  5519                           
  5520                           ; Switch size 1, requested type "simple"
  5521                           ; Number of cases is 1, Range of values is 129 to 129
  5522                           ; switch strategies available:
  5523                           ; Name         Instructions Cycles
  5524                           ; simple_byte            4     3 (average)
  5525                           ; direct_byte           10     9 (fixed)
  5526                           ; jumptable            263     9 (fixed)
  5527                           ;	Chosen strategy is simple_byte
  5528  0270  0872               	movf	znp_msg_handler@cmd,w
  5529  0271  3A81               	xorlw	129	; case 129
  5530  0272  1903               	skipnz
  5531  0273  29D1               	goto	i1l1827
  5532  0274  2A7A               	goto	i1l95
  5533  0275                     i1l2577:
  5534                           
  5535                           ; Switch size 1, requested type "simple"
  5536                           ; Number of cases is 1, Range of values is 192 to 192
  5537                           ; switch strategies available:
  5538                           ; Name         Instructions Cycles
  5539                           ; simple_byte            4     3 (average)
  5540                           ; direct_byte           10     9 (fixed)
  5541                           ; jumptable            263     9 (fixed)
  5542                           ;	Chosen strategy is simple_byte
  5543  0275  0872               	movf	znp_msg_handler@cmd,w
  5544  0276  3AC0               	xorlw	192	; case 192
  5545  0277  1903               	skipnz
  5546  0278  2A5F               	goto	i1l1851
  5547  0279  2A7A               	goto	i1l95
  5548  027A                     i1l95:
  5549  027A  0008               	return
  5550  027B                     __end_of_znp_msg_handler:
  5551                           
  5552                           	psect	text43
  5553  011C                     __ptext43:	
  5554 ;; *************** function _sys_tick_handler *****************
  5555 ;; Defined at:
  5556 ;;		line 27 in file "sys_tick.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  i               1    0[BANK0 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 300/0
  5567 ;;		On exit  : 300/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5570 ;;      Params:         0       0       0       0
  5571 ;;      Locals:         0       1       0       0
  5572 ;;      Temps:         10       0       0       0
  5573 ;;      Totals:        10       1       0       0
  5574 ;;Total ram usage:       11 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 2
  5577 ;; This function calls:
  5578 ;;		__blink_handler
  5579 ;;		i1___bmul
  5580 ;; This function is called by:
  5581 ;;		_sys_tick_init
  5582 ;;		_ISR
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586  011C                     _sys_tick_handler:	
  5587                           ;psect for function _sys_tick_handler
  5588                           
  5589                           
  5590                           ;sys_tick.c: 29:     TMR1 = (65535U) - 50000U;
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _sys_tick_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5594  011C  303C               	movlw	60
  5595  011D  008F               	movwf	15	;volatile
  5596  011E  30AF               	movlw	175
  5597  011F  008E               	movwf	14	;volatile
  5598                           
  5599                           ;sys_tick.c: 30:     _sys_tick.tick++;
  5600  0120  3001               	movlw	1
  5601  0121  1683               	bsf	3,5	;RP0=1, select bank1
  5602  0122  07B5               	addwf	(__sys_tick^(0+128)+21),f
  5603  0123  3000               	movlw	0
  5604  0124  1803               	skipnc
  5605  0125  3001               	movlw	1
  5606  0126  07B6               	addwf	((__sys_tick+1)^(0+128)+21),f
  5607  0127  3000               	movlw	0
  5608  0128  1803               	skipnc
  5609  0129  3001               	movlw	1
  5610  012A  07B7               	addwf	((__sys_tick+2)^(0+128)+21),f
  5611  012B  3000               	movlw	0
  5612  012C  1803               	skipnc
  5613  012D  3001               	movlw	1
  5614  012E  07B8               	addwf	((__sys_tick+3)^(0+128)+21),f
  5615                           
  5616                           ;sys_tick.c: 32:     for (uint8_t i = 0; i < _sys_tick._handler_index; i++) {
  5617  012F  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0130  01A0               	clrf	sys_tick_handler@i
  5619  0131                     i1l2327:
  5620  0131  1683               	bsf	3,5	;RP0=1, select bank1
  5621  0132  0820               	movf	__sys_tick^(0+128),w
  5622  0133  3907               	andlw	7
  5623  0134  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0135  0220               	subwf	sys_tick_handler@i,w
  5625  0136  1803               	btfsc	3,0
  5626  0137  0008               	return
  5627                           
  5628                           ;sys_tick.c: 33:         _sys_tick._handle[i].counter_tick++;
  5629  0138  300A               	movlw	10
  5630  0139  00F4               	movwf	??_sys_tick_handler
  5631  013A  0874               	movf	??_sys_tick_handler,w
  5632  013B  00F0               	movwf	i1___bmul@multiplicand
  5633  013C  0820               	movf	sys_tick_handler@i,w
  5634  013D  26AD               	fcall	i1___bmul
  5635  013E  3EA6               	addlw	(low ((__sys_tick| 0+6)))& (0+255)
  5636  013F  0084               	movwf	4
  5637  0140  3001               	movlw	1
  5638  0141  1383               	bcf	3,7	;select IRP bank1
  5639  0142  0780               	addwf	0,f
  5640  0143  0A84               	incf	4,f
  5641  0144  3000               	movlw	0
  5642  0145  1803               	skipnc
  5643  0146  3E01               	addlw	1
  5644  0147  1D03               	skipz
  5645  0148  0780               	addwf	0,f
  5646  0149  0A84               	incf	4,f
  5647  014A  3000               	movlw	0
  5648  014B  1803               	skipnc
  5649  014C  3E01               	addlw	1
  5650  014D  1D03               	skipz
  5651  014E  0780               	addwf	0,f
  5652  014F  0A84               	incf	4,f
  5653  0150  3000               	movlw	0
  5654  0151  1803               	skipnc
  5655  0152  3E01               	addlw	1
  5656  0153  0780               	addwf	0,f
  5657                           
  5658                           ;sys_tick.c: 34:         if (_sys_tick._handle[i]._en) {
  5659  0154  300A               	movlw	10
  5660  0155  00F4               	movwf	??_sys_tick_handler
  5661  0156  0874               	movf	??_sys_tick_handler,w
  5662  0157  00F0               	movwf	i1___bmul@multiplicand
  5663  0158  0820               	movf	sys_tick_handler@i,w
  5664  0159  26AD               	fcall	i1___bmul
  5665  015A  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  5666  015B  0084               	movwf	4
  5667  015C  1383               	bcf	3,7	;select IRP bank1
  5668  015D  1C00               	btfss	0,0
  5669  015E  29CB               	goto	i1l2325
  5670                           
  5671                           ;sys_tick.c: 35:             if (_sys_tick._handle[i].counter_tick
  5672  015F  300A               	movlw	10
  5673  0160  00F4               	movwf	??_sys_tick_handler
  5674  0161  0874               	movf	??_sys_tick_handler,w
  5675  0162  00F0               	movwf	i1___bmul@multiplicand
  5676  0163  0820               	movf	sys_tick_handler@i,w
  5677  0164  26AD               	fcall	i1___bmul
  5678  0165  3EA2               	addlw	(low ((__sys_tick| 0+2)))& (0+255)
  5679  0166  0084               	movwf	4
  5680  0167  1383               	bcf	3,7	;select IRP bank1
  5681  0168  0800               	movf	0,w
  5682  0169  00F5               	movwf	??_sys_tick_handler+1
  5683  016A  0A84               	incf	4,f
  5684  016B  0800               	movf	0,w
  5685  016C  00F6               	movwf	??_sys_tick_handler+2
  5686  016D  0A84               	incf	4,f
  5687  016E  0800               	movf	0,w
  5688  016F  00F7               	movwf	??_sys_tick_handler+3
  5689  0170  0A84               	incf	4,f
  5690  0171  0800               	movf	0,w
  5691  0172  00F8               	movwf	??_sys_tick_handler+4
  5692  0173  300A               	movlw	10
  5693  0174  00F9               	movwf	??_sys_tick_handler+5
  5694  0175  0879               	movf	??_sys_tick_handler+5,w
  5695  0176  00F0               	movwf	i1___bmul@multiplicand
  5696  0177  0820               	movf	sys_tick_handler@i,w
  5697  0178  26AD               	fcall	i1___bmul
  5698  0179  3EA6               	addlw	(low ((__sys_tick| 0+6)))& (0+255)
  5699  017A  0084               	movwf	4
  5700  017B  1383               	bcf	3,7	;select IRP bank1
  5701  017C  0800               	movf	0,w
  5702  017D  00FA               	movwf	??_sys_tick_handler+6
  5703  017E  0A84               	incf	4,f
  5704  017F  0800               	movf	0,w
  5705  0180  00FB               	movwf	??_sys_tick_handler+7
  5706  0181  0A84               	incf	4,f
  5707  0182  0800               	movf	0,w
  5708  0183  00FC               	movwf	??_sys_tick_handler+8
  5709  0184  0A84               	incf	4,f
  5710  0185  0800               	movf	0,w
  5711  0186  00FD               	movwf	??_sys_tick_handler+9
  5712  0187  0878               	movf	??_sys_tick_handler+4,w
  5713  0188  027D               	subwf	??_sys_tick_handler+9,w
  5714  0189  1D03               	skipz
  5715  018A  2995               	goto	u138_25
  5716  018B  0877               	movf	??_sys_tick_handler+3,w
  5717  018C  027C               	subwf	??_sys_tick_handler+8,w
  5718  018D  1D03               	skipz
  5719  018E  2995               	goto	u138_25
  5720  018F  0876               	movf	??_sys_tick_handler+2,w
  5721  0190  027B               	subwf	??_sys_tick_handler+7,w
  5722  0191  1D03               	skipz
  5723  0192  2995               	goto	u138_25
  5724  0193  0875               	movf	??_sys_tick_handler+1,w
  5725  0194  027A               	subwf	??_sys_tick_handler+6,w
  5726  0195                     u138_25:
  5727  0195  1C03               	skipc
  5728  0196  29CB               	goto	i1l2325
  5729                           
  5730                           ;sys_tick.c: 36:                 >= _sys_tick._handle[i].trigger_tick) {;sys_tick.c: 37:
      +                                           _sys_tick._handle[i].counter_tick = 0;
  5731  0197  300A               	movlw	10
  5732  0198  00F4               	movwf	??_sys_tick_handler
  5733  0199  0874               	movf	??_sys_tick_handler,w
  5734  019A  00F0               	movwf	i1___bmul@multiplicand
  5735  019B  0820               	movf	sys_tick_handler@i,w
  5736  019C  26AD               	fcall	i1___bmul
  5737  019D  3EA6               	addlw	(low ((__sys_tick| 0+6)))& (0+255)
  5738  019E  0084               	movwf	4
  5739  019F  3000               	movlw	0
  5740  01A0  1383               	bcf	3,7	;select IRP bank1
  5741  01A1  0080               	movwf	0
  5742  01A2  0A84               	incf	4,f
  5743  01A3  3000               	movlw	0
  5744  01A4  0080               	movwf	0
  5745  01A5  0A84               	incf	4,f
  5746  01A6  3000               	movlw	0
  5747  01A7  0080               	movwf	0
  5748  01A8  0A84               	incf	4,f
  5749  01A9  3000               	movlw	0
  5750  01AA  0080               	movwf	0
  5751                           
  5752                           ;sys_tick.c: 38:                 _sys_tick._handle[i].cb();
  5753  01AB  300A               	movlw	10
  5754  01AC  00F4               	movwf	??_sys_tick_handler
  5755  01AD  0874               	movf	??_sys_tick_handler,w
  5756  01AE  00F0               	movwf	i1___bmul@multiplicand
  5757  01AF  0820               	movf	sys_tick_handler@i,w
  5758  01B0  26AD               	fcall	i1___bmul
  5759  01B1  3EAA               	addlw	(low ((__sys_tick| 0+10)))& (0+255)
  5760  01B2  0084               	movwf	4
  5761  01B3  1383               	bcf	3,7	;select IRP bank1
  5762  01B4  0800               	movf	0,w
  5763  01B5  201F               	fcall	i1fptable
  5764                           
  5765                           ;sys_tick.c: 39:                 if (!_sys_tick._handle[i]._periodic)
  5766  01B6  300A               	movlw	10
  5767  01B7  00F4               	movwf	??_sys_tick_handler
  5768  01B8  0874               	movf	??_sys_tick_handler,w
  5769  01B9  00F0               	movwf	i1___bmul@multiplicand
  5770  01BA  0820               	movf	sys_tick_handler@i,w
  5771  01BB  26AD               	fcall	i1___bmul
  5772  01BC  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  5773  01BD  0084               	movwf	4
  5774  01BE  1383               	bcf	3,7	;select IRP bank1
  5775  01BF  1880               	btfsc	0,1
  5776  01C0  29CB               	goto	i1l2325
  5777                           
  5778                           ;sys_tick.c: 40:                     _sys_tick._handle[i]._en = 0;
  5779  01C1  300A               	movlw	10
  5780  01C2  00F4               	movwf	??_sys_tick_handler
  5781  01C3  0874               	movf	??_sys_tick_handler,w
  5782  01C4  00F0               	movwf	i1___bmul@multiplicand
  5783  01C5  0820               	movf	sys_tick_handler@i,w
  5784  01C6  26AD               	fcall	i1___bmul
  5785  01C7  3EA1               	addlw	(low ((__sys_tick| 0+1)))& (0+255)
  5786  01C8  0084               	movwf	4
  5787  01C9  1383               	bcf	3,7	;select IRP bank1
  5788  01CA  1000               	bcf	0,0
  5789  01CB                     i1l2325:
  5790                           
  5791                           ;sys_tick.c: 43:     }
  5792  01CB  3001               	movlw	1
  5793  01CC  00F4               	movwf	??_sys_tick_handler
  5794  01CD  0874               	movf	??_sys_tick_handler,w
  5795  01CE  07A0               	addwf	sys_tick_handler@i,f
  5796  01CF  2931               	goto	i1l2327
  5797  01D0                     __end_of_sys_tick_handler:
  5798                           
  5799                           	psect	text44
  5800  06AD                     __ptext44:	
  5801 ;; *************** function i1___bmul *****************
  5802 ;; Defined at:
  5803 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  multiplier      1    wreg     unsigned char 
  5806 ;;  multiplicand    1    0[COMMON] unsigned char 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  multiplier      1    3[COMMON] unsigned char 
  5809 ;;  product         1    2[COMMON] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      unsigned char 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0
  5814 ;; Tracked objects:
  5815 ;;		On entry : 300/0
  5816 ;;		On exit  : 300/0
  5817 ;;		Unchanged: 300/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5819 ;;      Params:         1       0       0       0
  5820 ;;      Locals:         2       0       0       0
  5821 ;;      Temps:          1       0       0       0
  5822 ;;      Totals:         4       0       0       0
  5823 ;;Total ram usage:        4 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_sys_tick_handler
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832  06AD                     i1___bmul:	
  5833                           ;psect for function i1___bmul
  5834                           
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  5838                           ;i1___bmul@multiplier stored from wreg
  5839  06AD  00F3               	movwf	i1___bmul@multiplier
  5840  06AE  01F2               	clrf	i1___bmul@product
  5841  06AF                     i1l2143:
  5842  06AF  1C73               	btfss	i1___bmul@multiplier,0
  5843  06B0  2EB5               	goto	i1l2147
  5844  06B1  0870               	movf	i1___bmul@multiplicand,w
  5845  06B2  00F1               	movwf	??i1___bmul
  5846  06B3  0871               	movf	??i1___bmul,w
  5847  06B4  07F2               	addwf	i1___bmul@product,f
  5848  06B5                     i1l2147:
  5849  06B5  1003               	clrc
  5850  06B6  0DF0               	rlf	i1___bmul@multiplicand,f
  5851  06B7  1003               	clrc
  5852  06B8  0CF3               	rrf	i1___bmul@multiplier,f
  5853  06B9  0873               	movf	i1___bmul@multiplier,w
  5854  06BA  1D03               	btfss	3,2
  5855  06BB  2EAF               	goto	i1l2143
  5856  06BC  0872               	movf	i1___bmul@product,w
  5857  06BD  0008               	return
  5858  06BE                     __end_ofi1___bmul:
  5859                           
  5860                           	psect	text45
  5861  07CA                     __ptext45:	
  5862 ;; *************** function __blink_handler *****************
  5863 ;; Defined at:
  5864 ;;		line 9 in file "led_ind.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, pclath, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : B00/0
  5875 ;;		On exit  : B00/0
  5876 ;;		Unchanged: 800/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5878 ;;      Params:         0       0       0       0
  5879 ;;      Locals:         0       0       0       0
  5880 ;;      Temps:          0       0       0       0
  5881 ;;      Totals:         0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used: 1
  5884 ;; Hardware stack levels required when called: 1
  5885 ;; This function calls:
  5886 ;;		_led_ind_toggle
  5887 ;; This function is called by:
  5888 ;;		_led_ind_init
  5889 ;;		_sys_tick_handler
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893  07CA                     __blink_handler:	
  5894                           ;psect for function __blink_handler
  5895                           
  5896                           
  5897                           ;led_ind.c: 10:     led_ind_toggle();
  5898                           
  5899                           ;incstack = 0
  5900                           ; Regs used in __blink_handler: [wreg+status,2+status,0+pclath+cstack]
  5901  07CA  26FC               	fcall	_led_ind_toggle
  5902  07CB  0008               	return
  5903  07CC                     __end_of__blink_handler:
  5904                           
  5905                           	psect	text46
  5906  06FC                     __ptext46:	
  5907 ;; *************** function _led_ind_toggle *****************
  5908 ;; Defined at:
  5909 ;;		line 36 in file "led_ind.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : B00/0
  5920 ;;		On exit  : B00/0
  5921 ;;		Unchanged: 800/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5923 ;;      Params:         0       0       0       0
  5924 ;;      Locals:         0       0       0       0
  5925 ;;      Temps:          1       0       0       0
  5926 ;;      Totals:         1       0       0       0
  5927 ;;Total ram usage:        1 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		__blink_handler
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936  06FC                     _led_ind_toggle:	
  5937                           ;psect for function _led_ind_toggle
  5938                           
  5939                           
  5940                           ;led_ind.c: 37:     PORTAbits.RA2 ^= 1;
  5941                           
  5942                           ;incstack = 0
  5943                           ; Regs used in _led_ind_toggle: [wreg+status,2+status,0]
  5944  06FC  0C05               	rrf	5,w	;volatile
  5945  06FD  00F0               	movwf	??_led_ind_toggle
  5946  06FE  0C70               	rrf	??_led_ind_toggle,w
  5947  06FF  3901               	andlw	1
  5948  0700  00F0               	movwf	??_led_ind_toggle
  5949  0701  3001               	movlw	1
  5950  0702  06F0               	xorwf	??_led_ind_toggle,f
  5951  0703  0DF0               	rlf	??_led_ind_toggle,f
  5952  0704  0DF0               	rlf	??_led_ind_toggle,f
  5953  0705  0805               	movf	5,w	;volatile
  5954  0706  0670               	xorwf	??_led_ind_toggle,w
  5955  0707  39FB               	andlw	-5
  5956  0708  0670               	xorwf	??_led_ind_toggle,w
  5957  0709  0085               	movwf	5	;volatile
  5958  070A  0008               	return
  5959  070B                     __end_of_led_ind_toggle:
  5960                           
  5961                           	psect	text47
  5962  06BE                     __ptext47:	
  5963 ;; *************** function _button3_handler *****************
  5964 ;; Defined at:
  5965 ;;		line 83 in file "main.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0, pclath, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 300/0
  5976 ;;		On exit  : 300/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5979 ;;      Params:         0       0       0       0
  5980 ;;      Locals:         0       0       0       0
  5981 ;;      Temps:          1       0       0       0
  5982 ;;      Totals:         1       0       0       0
  5983 ;;Total ram usage:        1 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; Hardware stack levels required when called: 1
  5986 ;; This function calls:
  5987 ;;		_xEventGroupSetBits
  5988 ;; This function is called by:
  5989 ;;		_button_init
  5990 ;;		_ISR
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994  06BE                     _button3_handler:	
  5995                           ;psect for function _button3_handler
  5996                           
  5997                           
  5998                           ;main.c: 84:     if (!PORTBbits.RB5) {
  5999                           
  6000                           ;incstack = 0
  6001                           ; Regs used in _button3_handler: [wreg+status,2+status,0+pclath+cstack]
  6002  06BE  1A86               	btfsc	6,5	;volatile
  6003  06BF  0008               	return
  6004                           
  6005                           ;main.c: 85:         PORTAbits.RA1 ^= 1;
  6006  06C0  0C05               	rrf	5,w	;volatile
  6007  06C1  3901               	andlw	1
  6008  06C2  00F2               	movwf	??_button3_handler
  6009  06C3  3001               	movlw	1
  6010  06C4  06F2               	xorwf	??_button3_handler,f
  6011  06C5  0DF2               	rlf	??_button3_handler,f
  6012  06C6  0805               	movf	5,w	;volatile
  6013  06C7  0672               	xorwf	??_button3_handler,w
  6014  06C8  39FD               	andlw	-3
  6015  06C9  0672               	xorwf	??_button3_handler,w
  6016  06CA  0085               	movwf	5	;volatile
  6017                           
  6018                           ;main.c: 86:         xEventGroupSetBits((1 << 2));
  6019  06CB  3004               	movlw	4
  6020  06CC  2779               	fcall	_xEventGroupSetBits
  6021  06CD  0008               	return
  6022  06CE                     __end_of_button3_handler:
  6023                           
  6024                           	psect	text48
  6025  070B                     __ptext48:	
  6026 ;; *************** function _button2_handler *****************
  6027 ;; Defined at:
  6028 ;;		line 76 in file "main.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, pclath, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 300/0
  6039 ;;		On exit  : 300/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6042 ;;      Params:         0       0       0       0
  6043 ;;      Locals:         0       0       0       0
  6044 ;;      Temps:          1       0       0       0
  6045 ;;      Totals:         1       0       0       0
  6046 ;;Total ram usage:        1 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 1
  6049 ;; This function calls:
  6050 ;;		_xEventGroupSetBits
  6051 ;; This function is called by:
  6052 ;;		_button_init
  6053 ;;		_ISR
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057  070B                     _button2_handler:	
  6058                           ;psect for function _button2_handler
  6059                           
  6060                           
  6061                           ;main.c: 77:     if (!PORTBbits.RB4) {
  6062                           
  6063                           ;incstack = 0
  6064                           ; Regs used in _button2_handler: [wreg+status,2+status,0+pclath+cstack]
  6065  070B  1A06               	btfsc	6,4	;volatile
  6066  070C  0008               	return
  6067                           
  6068                           ;main.c: 78:         PORTAbits.RA0 ^= 1;
  6069  070D  0805               	movf	5,w	;volatile
  6070  070E  3901               	andlw	1
  6071  070F  00F2               	movwf	??_button2_handler
  6072  0710  3001               	movlw	1
  6073  0711  06F2               	xorwf	??_button2_handler,f
  6074  0712  0805               	movf	5,w	;volatile
  6075  0713  0672               	xorwf	??_button2_handler,w
  6076  0714  39FE               	andlw	-2
  6077  0715  0672               	xorwf	??_button2_handler,w
  6078  0716  0085               	movwf	5	;volatile
  6079                           
  6080                           ;main.c: 79:         xEventGroupSetBits((1 << 2));
  6081  0717  3004               	movlw	4
  6082  0718  2779               	fcall	_xEventGroupSetBits
  6083  0719  0008               	return
  6084  071A                     __end_of_button2_handler:
  6085                           
  6086                           	psect	text49
  6087  06CE                     __ptext49:	
  6088 ;; *************** function _button1_handler *****************
  6089 ;; Defined at:
  6090 ;;		line 71 in file "main.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0, pclath, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 300/0
  6101 ;;		On exit  : 300/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6104 ;;      Params:         0       0       0       0
  6105 ;;      Locals:         0       0       0       0
  6106 ;;      Temps:          1       0       0       0
  6107 ;;      Totals:         1       0       0       0
  6108 ;;Total ram usage:        1 bytes
  6109 ;; Hardware stack levels used: 1
  6110 ;; Hardware stack levels required when called: 1
  6111 ;; This function calls:
  6112 ;;		_xEventGroupSetBits
  6113 ;; This function is called by:
  6114 ;;		_button_init
  6115 ;;		_ISR
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119  06CE                     _button1_handler:	
  6120                           ;psect for function _button1_handler
  6121                           
  6122                           
  6123                           ;main.c: 72:     PORTAbits.RA7 ^= 1;
  6124                           
  6125                           ;incstack = 0
  6126                           ; Regs used in _button1_handler: [wreg+status,2+status,0+pclath+cstack]
  6127  06CE  0D05               	rlf	5,w	;volatile
  6128  06CF  0D05               	rlf	5,w	;volatile
  6129  06D0  3901               	andlw	1
  6130  06D1  00F2               	movwf	??_button1_handler
  6131  06D2  3001               	movlw	1
  6132  06D3  06F2               	xorwf	??_button1_handler,f
  6133  06D4  0CF2               	rrf	??_button1_handler,f
  6134  06D5  0CF2               	rrf	??_button1_handler,f
  6135  06D6  0805               	movf	5,w	;volatile
  6136  06D7  0672               	xorwf	??_button1_handler,w
  6137  06D8  397F               	andlw	-129
  6138  06D9  0672               	xorwf	??_button1_handler,w
  6139  06DA  0085               	movwf	5	;volatile
  6140                           
  6141                           ;main.c: 73:     xEventGroupSetBits((1 << 2));
  6142  06DB  3004               	movlw	4
  6143  06DC  2779               	fcall	_xEventGroupSetBits
  6144  06DD  0008               	return
  6145  06DE                     __end_of_button1_handler:
  6146                           
  6147                           	psect	text50
  6148  0779                     __ptext50:	
  6149 ;; *************** function _xEventGroupSetBits *****************
  6150 ;; Defined at:
  6151 ;;		line 19 in file "event_groups.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  uxBitsToSet     1    wreg     const unsigned char 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  uxBitsToSet     1    1[COMMON] const unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      unsigned char 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0
  6160 ;; Tracked objects:
  6161 ;;		On entry : 300/0
  6162 ;;		On exit  : 300/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6165 ;;      Params:         0       0       0       0
  6166 ;;      Locals:         1       0       0       0
  6167 ;;      Temps:          1       0       0       0
  6168 ;;      Totals:         2       0       0       0
  6169 ;;Total ram usage:        2 bytes
  6170 ;; Hardware stack levels used: 1
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_button1_handler
  6175 ;;		_button2_handler
  6176 ;;		_button3_handler
  6177 ;;		_znp_msg_handler
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181  0779                     _xEventGroupSetBits:	
  6182                           ;psect for function _xEventGroupSetBits
  6183                           
  6184                           
  6185                           ;incstack = 0
  6186 ;; hardware stack exceeded
  6187                           ; Regs used in _xEventGroupSetBits: [wreg+status,2+status,0]
  6188                           ;xEventGroupSetBits@uxBitsToSet stored from wreg
  6189  0779  00F1               	movwf	xEventGroupSetBits@uxBitsToSet
  6190  077A                     i1l367:	
  6191                           ;event_groups.c: 20:     do {
  6192                           
  6193                           
  6194                           ;event_groups.c: 21:         uxBits |= uxBitsToSet;
  6195  077A  0871               	movf	xEventGroupSetBits@uxBitsToSet,w
  6196  077B  00F0               	movwf	??_xEventGroupSetBits
  6197  077C  0870               	movf	??_xEventGroupSetBits,w
  6198  077D  04DF               	iorwf	_uxBits,f
  6199                           
  6200                           ;event_groups.c: 22:     } while ((uxBits & uxBitsToSet) != uxBitsToSet);
  6201  077E  085F               	movf	_uxBits,w
  6202  077F  0571               	andwf	xEventGroupSetBits@uxBitsToSet,w
  6203  0780  0671               	xorwf	xEventGroupSetBits@uxBitsToSet,w
  6204  0781  1903               	btfsc	3,2
  6205  0782  0008               	return
  6206  0783  2F7A               	goto	i1l367
  6207  0784                     __end_of_xEventGroupSetBits:
  6208  000E                     
  6209                           	psect	functab
  6210  001E                     __pfunctab:
  6211  001E                     fptable:
  6212  001E  281E               	goto	fptable	;no entries
  6213  001F                     __i1fptable:
  6214  001F                     i1fptable:
  6215  001F  00FF               	movwf	(btemp+1)& (0+127)
  6216  0020  3000               	movlw	high i1fptable
  6217  0021  008A               	movwf	10
  6218  0022  087F               	movf	(btemp+1)& (0+127),w
  6219  0023  0782               	addwf	2,f
  6220  0024                     i1fpbase:
  6221  0024  2824               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  6222  0025                     fp__button1_handler:
  6223  0025  2ECE               	ljmp	_button1_handler
  6224  0026                     fp__button2_handler:
  6225  0026  2F0B               	ljmp	_button2_handler
  6226  0027                     fp__button3_handler:
  6227  0027  2EBE               	ljmp	_button3_handler
  6228  0028                     fp___blink_handler:
  6229  0028  2FCA               	ljmp	__blink_handler
  6230  0029                     fp__sys_tick_handler:
  6231  0029  291C               	ljmp	_sys_tick_handler
  6232  002A                     fp__znp_msg_handler:
  6233  002A  29D0               	ljmp	_znp_msg_handler
  6234  002B                     fp__znp_usart_event_handler:
  6235  002B  2E34               	ljmp	_znp_usart_event_handler
  6236  002C                     __end_of__i1fptable:
  6237  007E                     btemp	set	126	;btemp
  6238  007E                     wtemp0	set	126
  6239                           
  6240                           	psect	config
  6241                           
  6242                           ;Config register CONFIG @ 0x2007
  6243                           ;	Oscillator Selection bits
  6244                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  6245                           ;	Watchdog Timer Enable bit
  6246                           ;	WDTE = OFF, WDT disabled
  6247                           ;	Power-up Timer Enable bit
  6248                           ;	PWRTE = OFF, PWRT disabled
  6249                           ;	RA5/MCLR/VPP Pin Function Select bit
  6250                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  6251                           ;	Brown-out Detect Enable bit
  6252                           ;	BOREN = OFF, BOD disabled
  6253                           ;	Low-Voltage Programming Enable bit
  6254                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  6255                           ;	Data EE Memory Code Protection bit
  6256                           ;	CPD = OFF, Data memory code protection off
  6257                           ;	Flash Program Memory Code Protection bit
  6258                           ;	CP = OFF, Code protection off
  6259  2007                     	org	8199
  6260  2007  3F38               	dw	16184

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      67
    BANK1            80      0      58
    BANK2            48      0       0

Pointer List with Targets:

    Absolute function$1	PTR void  size(1) Largest target is 1
		 -> ISR@c(BANK0[1]), NULL(NULL[0]), 

    handler$1	PTR void  size(1) Largest target is 1
		 -> ISR@c(BANK0[1]), NULL(NULL[0]), 

    callback$1	PTR unsigned char  size(1) Largest target is 33
		 -> znp_recv_msg(BANK1[33]), 

    _zb_znp_cb$1	PTR unsigned char  size(1) Largest target is 33
		 -> znp_recv_msg(BANK1[33]), 

    _usart_rx_isr$1	PTR void  size(1) Largest target is 1
		 -> ISR@c(BANK0[1]), NULL(NULL[0]), 

    sys_tick_register_callback_handler@cb	PTR FTN()void  size(1) Largest target is 1
		 -> _blink_handler(), 

    S894$cb	PTR FTN()void  size(1) Largest target is 1
		 -> _blink_handler(), 

    _sys_tick._handle.cb	PTR FTN()void  size(1) Largest target is 1
		 -> _blink_handler(), 

    znp_af_data_request@data	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), button_data(BANK0[2]), 

    znp_init@callback	PTR FTN(unsigned int ,PTR unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> znp_msg_handler(), 

    znp_usart_event_handler@event_data	PTR void  size(1) Largest target is 1
		 -> ISR@c(BANK0[1]), NULL(NULL[0]), 

    _zb_znp_cb	PTR FTN(unsigned int ,PTR unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), znp_msg_handler(), 

    ioc_rb5_add_isr_handler@handler	PTR FTN()void  size(1) Largest target is 1
		 -> button3_handler(), 

    _ioc_rb5_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), button3_handler(), 

    ioc_rb4_add_isr_handler@handler	PTR FTN()void  size(1) Largest target is 1
		 -> button2_handler(), 

    _ioc_rb4_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), button2_handler(), 

    ex_int_add_isr_handler@handler	PTR FTN()void  size(1) Largest target is 1
		 -> button1_handler(), 

    _ex_int_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), button1_handler(), 

    _tmr2_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    timer1_add_isr_handler@handler	PTR FTN()void  size(1) Largest target is 1
		 -> sys_tick_handler(), 

    _tmr1_isr	PTR FTN()void  size(1) Largest target is 1
		 -> sys_tick_handler(), Absolute function(), 

    usart_add_isr_handler@handler	PTR FTN(enum E707,PTR void ,)void  size(1) Largest target is 1
		 -> znp_usart_event_handler(), 

    _usart_rx_isr	PTR FTN(enum E707,PTR void ,)void  size(1) Largest target is 1
		 -> znp_usart_event_handler(), Absolute function(), 

    znp_send_msg@data	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), button_data(BANK0[2]), 

    znp_msg_handler@data	PTR unsigned char  size(1) Largest target is 33
		 -> znp_recv_msg(BANK1[33]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_sys_tick_handler
    _ISR->_znp_usart_event_handler
    _znp_usart_event_handler->_znp_frame_parser
    _znp_frame_parser->_znp_msg_handler
    _znp_msg_handler->_xEventGroupSetBits
    _sys_tick_handler->i1___bmul
    __blink_handler->_led_ind_toggle
    _button3_handler->_xEventGroupSetBits
    _button2_handler->_xEventGroupSetBits
    _button1_handler->_xEventGroupSetBits

Critical Paths under _main in BANK0

    _main->_znp_send_msg
    _znp_send_msg->_znp_af_data_request
    _znp_af_data_request->_wait_for_status
    _znp_router_start->_znp_af_register
    _znp_router_start->_znp_set_startopt
    _znp_zdo_startup_from_app->_wait_for_msg
    _znp_set_startopt->_wait_for_status
    _znp_hard_reset->_wait_for_msg
    _znp_set_logical_type->_wait_for_status
    _znp_set_channels->_wait_for_status
    _znp_af_register->_wait_for_status
    _wait_for_status->_wait_for_msg
    _znp_init->_usart_add_isr_handler
    _xEventGroupWaitBits->_sys_tick_get_tick
    _sys_tick_init->_timer1_add_isr_handler
    _led_ind_init->_sys_tick_register_callback_handler
    _sys_tick_register_callback_handler->___bmul
    _led_ind_blink_stop->_sys_tick_stop
    _sys_tick_stop->___bmul
    _led_ind_blink_start->_sys_tick_start_periodic
    _sys_tick_start_periodic->___bmul
    _led_button_init->_xEventGroupClearBits
    _button_init->_ex_int_add_isr_handler
    _button_init->_ioc_rb4_add_isr_handler
    _button_init->_ioc_rb5_add_isr_handler

Critical Paths under _ISR in BANK0

    _ISR->_znp_usart_event_handler

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   14258
                                             38 BANK0     10    10      0
                        _button_init
                        _eeprom_read
                       _eeprom_write
                    _led_button_init
                _led_ind_blink_start
                 _led_ind_blink_stop
                       _led_ind_init
                        _led_ind_off
                         _led_ind_on
                  _sys_tick_get_tick
                      _sys_tick_init
               _xEventGroupClearBits
                  _xEventGroupCreate
                 _xEventGroupGetBits
                _xEventGroupWaitBits
                           _znp_init
                   _znp_router_start
                       _znp_send_msg
 ---------------------------------------------------------------------------------
 (1) _znp_send_msg                                        10     6      4    3731
                                             28 BANK0     10     6      4
                _znp_af_data_request
 ---------------------------------------------------------------------------------
 (2) _znp_af_data_request                                 12     4      8    2683
                                             16 BANK0     12     4      8
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (1) _znp_router_start                                     3     3      0    7706
                                             17 BANK0      3     3      0
                    _znp_af_register
                     _znp_hard_reset
                   _znp_set_channels
               _znp_set_logical_type
                   _znp_set_startopt
           _znp_zdo_startup_from_app
 ---------------------------------------------------------------------------------
 (2) _znp_zdo_startup_from_app                             0     0      0     272
                         _usart_send
                       _wait_for_msg
 ---------------------------------------------------------------------------------
 (2) _znp_set_startopt                                     1     1      0    2000
                                             16 BANK0      1     1      0
                         _usart_send
                    _wait_for_status
                     _znp_hard_reset
 ---------------------------------------------------------------------------------
 (3) _znp_hard_reset                                       2     2      0     250
                                             12 BANK0      2     2      0
                       _wait_for_msg
 ---------------------------------------------------------------------------------
 (2) _znp_set_logical_type                                 0     0      0    1706
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (2) _znp_set_channels                                     0     0      0    1706
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (2) _znp_af_register                                      1     1      0    1750
                                             16 BANK0      1     1      0
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (3) _wait_for_status                                      4     0      4    1684
                                             12 BANK0      4     0      4
                       _wait_for_msg
 ---------------------------------------------------------------------------------
 (4) _wait_for_msg                                         2     0      2     250
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _usart_send                                           1     1      0      22
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _znp_init                                             2     2      0      44
                                             12 BANK0      2     2      0
              _usart_add_isr_handler
                         _usart_init
 ---------------------------------------------------------------------------------
 (2) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _usart_add_isr_handler                                2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _xEventGroupWaitBits                                 13     9      4     165
                                             14 BANK0     13     9      4
                  _sys_tick_get_tick
 ---------------------------------------------------------------------------------
 (2) _sys_tick_get_tick                                    4     0      4       0
                                             10 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _xEventGroupGetBits                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _xEventGroupCreate                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_tick_init                                        0     0      0      22
             _timer1_add_isr_handler
 ---------------------------------------------------------------------------------
 (2) _timer1_add_isr_handler                               2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _led_ind_init                                         1     1      0     654
                                             18 BANK0      1     1      0
                         _led_ind_on
 _sys_tick_register_callback_handler
 ---------------------------------------------------------------------------------
 (2) _sys_tick_register_callback_handler                   4     4      0     654
                                             14 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _led_ind_on                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_ind_blink_stop                                   0     0      0     589
                        _led_ind_off
                      _sys_tick_stop
 ---------------------------------------------------------------------------------
 (2) _sys_tick_stop                                        4     4      0     589
                                             14 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _led_ind_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_ind_blink_start                                  0     0      0     753
            _sys_tick_start_periodic
 ---------------------------------------------------------------------------------
 (2) _sys_tick_start_periodic                              8     4      4     753
                                             14 BANK0      8     4      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     499
                                             10 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _led_button_init                                      1     1      0      44
                                             12 BANK0      1     1      0
               _xEventGroupClearBits
 ---------------------------------------------------------------------------------
 (1) _xEventGroupClearBits                                 2     2      0      44
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1     348
                                             10 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _button_init                                          0     0      0      66
             _ex_int_add_isr_handler
            _ioc_rb4_add_isr_handler
            _ioc_rb5_add_isr_handler
 ---------------------------------------------------------------------------------
 (2) _ioc_rb5_add_isr_handler                              2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ioc_rb4_add_isr_handler                              2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ex_int_add_isr_handler                               2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  8     8      0    1830
                                              2 BANK0      8     8      0
                   Absolute function *
                    _button1_handler *
                    _button2_handler *
                    _button3_handler *
                   _sys_tick_handler *
            _znp_usart_event_handler *
 ---------------------------------------------------------------------------------
 (6) _znp_usart_event_handler                              4     2      2    1098
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                   _znp_frame_parser
 ---------------------------------------------------------------------------------
 (7) _znp_frame_parser                                     3     3      0     842
                                              9 COMMON     3     3      0
                   Absolute function *
                    _znp_msg_handler *
 ---------------------------------------------------------------------------------
 (8) _znp_msg_handler                                      7     3      4     622
                                              2 COMMON     7     3      4
                 _xEventGroupSetBits
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _sys_tick_handler                                    11    11      0     420
                                              4 COMMON    10    10      0
                                              0 BANK0      1     1      0
                     __blink_handler *
                           i1___bmul
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     220
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) __blink_handler                                       0     0      0       0
                     _led_ind_toggle
 ---------------------------------------------------------------------------------
 (8) _led_ind_toggle                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _button3_handler                                      1     1      0      66
                                              2 COMMON     1     1      0
                 _xEventGroupSetBits
 ---------------------------------------------------------------------------------
 (6) _button2_handler                                      1     1      0      66
                                              2 COMMON     1     1      0
                 _xEventGroupSetBits
 ---------------------------------------------------------------------------------
 (6) _button1_handler                                      1     1      0      66
                                              2 COMMON     1     1      0
                 _xEventGroupSetBits
 ---------------------------------------------------------------------------------
 (9) _xEventGroupSetBits                                   2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _button_init
     _ex_int_add_isr_handler
     _ioc_rb4_add_isr_handler
     _ioc_rb5_add_isr_handler
   _eeprom_read
   _eeprom_write
   _led_button_init
     _xEventGroupClearBits
   _led_ind_blink_start
     _sys_tick_start_periodic
       ___bmul
   _led_ind_blink_stop
     _led_ind_off
     _sys_tick_stop
       ___bmul
   _led_ind_init
     _led_ind_on
     _sys_tick_register_callback_handler
       ___bmul
   _led_ind_off
   _led_ind_on
   _sys_tick_get_tick
   _sys_tick_init
     _timer1_add_isr_handler
   _xEventGroupClearBits
   _xEventGroupCreate
   _xEventGroupGetBits
   _xEventGroupWaitBits
     _sys_tick_get_tick
   _znp_init
     _usart_add_isr_handler
     _usart_init
   _znp_router_start
     _znp_af_register
       _usart_send
       _wait_for_status
         _wait_for_msg
     _znp_hard_reset
       _wait_for_msg
     _znp_set_channels
       _usart_send
       _wait_for_status
     _znp_set_logical_type
       _usart_send
       _wait_for_status
     _znp_set_startopt
       _usart_send
       _wait_for_status
       _znp_hard_reset
     _znp_zdo_startup_from_app
       _usart_send
       _wait_for_msg
   _znp_send_msg
     _znp_af_data_request
       _usart_send
       _wait_for_status

 _ISR (ROOT)
   Absolute function(Fake) *
   _button1_handler *
     _xEventGroupSetBits
   _button2_handler *
     _xEventGroupSetBits
   _button3_handler *
     _xEventGroupSetBits
   _sys_tick_handler *
     __blink_handler *
       _led_ind_toggle
     i1___bmul *
   _znp_usart_event_handler *
     _znp_frame_parser
       Absolute function(Fake) *
       _znp_msg_handler *
         _xEventGroupSetBits

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3A       7       72.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      43       3       83.8%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8B      10        0.0%
ABS                  0      0      8B       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat May 20 11:30:02 2023

                              ??_znp_frame_parser 0079                                                 pc 0002  
                                  ___bmul@product 002C                                      ?_led_ind_off 0070  
                           wait_for_status@offset 002E                                                fsr 0004  
                               ??_wait_for_status 0030                                               l422 054E  
                                             l246 07AA                                               l415 03EE  
                                             l280 071A                                               l372 0765  
                                             l519 0666                                               l539 05BF  
                                             _ISR 0318                                     ?_led_ind_init 0070  
                                             u845 0753                                               fsr0 0004  
                                             indf 0000                          ?_znp_usart_event_handler 007C  
                          __end_of_led_ind_toggle 070B                                              ?_ISR 0070  
                                            ISR@c 0027                            znp_af_data_request@len 0036  
                                            l2021 0442                                              l2031 0570  
                                            l2009 049A                                              l2401 00D0  
                                            l2403 00FC                                              l2261 059F  
                                            l2341 0038                                              l2263 05A3  
                                            l2283 04AE                                              l2267 05A5  
                                            l2277 04A7                                              l1821 074D  
                                            l2269 05B5                                              l2381 009A  
                                            l2365 0069                                              l2199 04FB  
                                            l2369 0070                                              l2395 00BD  
                                            l2397 00BF                                              l2389 00AC  
                                            l2569 05AD                                              l1891 06A4  
                                            l1965 03C4                                              l1887 069E  
                                            l1967 03DF                                              u1331 0665  
                                            u1351 04BE                                              u1352 04BF  
                                            u1353 04C4                                              u1354 04C5  
                                            u1355 04CA                                              u1275 04E7  
                                            u1356 04CB                                              u1365 04D9  
                                            u1481 00E0                                              u1482 00E1  
                                            u1483 00E6                                              u1484 00E7  
                                            u1493 00FA                                              u1485 00EC  
                                            u1486 00ED                                              u1657 005E  
                                            u1667 0115                                              u1677 0655  
                                            i1l84 01F3                                              i1l85 0205  
                                            i1l95 027A                          __end_of_znp_set_channels 054C  
                                            _TMR0 0001                                              _TMR1 000E  
                                  ??_eeprom_write 002B                                              _main 002C  
                         _ioc_rb4_add_isr_handler 076E                                              btemp 007E  
                  __end_of_timer1_add_isr_handler 078E                                              start 0010  
                                _znp_router_start 059B                          _znp_zdo_startup_from_app 0678  
                                 _button1_handler 06CE                                 ___bmul@multiplier 002D  
                        znp_set_startopt@startopt 0030                                   _button2_handler 070B  
                                 _button3_handler 06BE                                             ??_ISR 0022  
                    usart_add_isr_handler@handler 002B                           znp_af_data_request@data 0035  
                                  ??_led_ind_init 0032                                             ?_main 0070  
                                           _EEADR 009B                                             i1l305 0317  
                                           i1l313 064D                                             i1l173 031E  
                                           i1l191 0379                                             i1l186 036B  
                                           i1l367 077A                               sys_tick_stop@handle 0030  
                                           _RCREG 001A                                             _SPBRG 0099  
                                           _PORTB 0006                                             _TRISB 0086  
                                           u91_20 0202                                             u94_20 0214  
                                           u88_20 01F0                                             _TXREG 0019  
                                           u98_20 0241                                             u99_24 0244  
                        __end_of_znp_set_startopt 05FE                                      ?_button_init 0070  
                                 ?_led_ind_toggle 0070                           __end_of_led_button_init 06FC  
                      __end_of_led_ind_blink_stop 07C1                                             fpbase 0000  
                                __end_ofi1___bmul 06BE                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                           _usart_add_isr_handler 06DE                                  ?_znp_msg_handler 0072  
                                 __initialization 0011                           _ioc_rb5_add_isr_handler 0741  
                                    __end_of_main 011C                                            ??_main 0046  
                             znp_msg_handler@data 0074                                            _EEDATA 009A  
                                          _EECON1 009C                                            _EECON2 009D  
                       ??_ioc_rb4_add_isr_handler 002A                                            u100_20 024E  
                                          u101_24 0251                                            u102_20 025B  
                                          i1l2043 027D                                            i1l2061 02A4  
                                          i1l2301 063B                                            i1l2143 06AF  
                                          i1l2071 02BE                                            i1l2055 0295  
                                          i1l2081 02D4                                            i1l2049 0286  
                                          i1l2305 063D                                            i1l2147 06B5  
                                          i1l2067 02B2                                            i1l2091 02FB  
                                          i1l2325 01CB                                            i1l2069 02B8  
                                          i1l2327 0131                                            i1l2087 02F7  
                                          i1l2431 033E                                            i1l2423 0330  
                                          i1l2437 0347                                            i1l2447 0353  
                                          i1l2439 034A                                            i1l1841 0218  
                                          i1l2465 0372                                            i1l2449 0354  
                                          i1l1851 025F                                            i1l1827 01D1  
                                          i1l2571 0645                                            i1l2299 0635  
                                          i1l2573 0303                                            i1l2575 0270  
                                          i1l1847 0234                                            i1l2577 0275  
                                          i1l1857 0268                                            u138_25 0195  
                         __end_of_button1_handler 06DE                                        __i1fptable 001F  
                         __end_of_button2_handler 071A                           znp_af_register@endpoint 0030  
                         __end_of_button3_handler 06CE                                      __ioc_rb4_isr 005A  
                                    __ioc_rb5_isr 0059                                            ___bmul 069C  
                     sys_tick_start_periodic@tick 002E                           znp_frame_parser@znp_fcs 0055  
                     __end_of_led_ind_blink_start 0763                                            _uxBits 005F  
                            __end_of_eeprom_write 05DF                                  ??_znp_hard_reset 002C  
                                          fptable 001E                                            fptotal 0000  
                                          saved_w 007E                                      _znp_recv_msg 00B9  
                                    _znp_send_msg 04DD                                  ?_led_button_init 0070  
                                znp_init@callback 002D                xEventGroupWaitBits@uxBitsToWaitFor 003A  
                    __end_of_znp_set_logical_type 061A                            ?_usart_add_isr_handler 0070  
                                __end_of_znp_init 0735                           __end_of__initialization 001C  
                                  sys_tick_stop@i 0031                                   eeprom_read@addr 002B  
                            __end_of_led_ind_init 0798                         ??_ioc_rb5_add_isr_handler 002A  
                             ___bmul@multiplicand 002A                                   _wait_for_status 071A  
                                  __pcstackCOMMON 0070                                 fp___blink_handler 0028  
                                    __pidataBANK0 07CC                   __end_of_ioc_rb4_add_isr_handler 0779  
                                       ?i1___bmul 0070                                       ISR@newPORTB 0028  
                                  _OPTION_REGbits 0081                          __end_of_znp_router_start 05BE  
                  ioc_rb4_add_isr_handler@handler 002B                                 eeprom_write@value 002A  
                                     ISR@tmpPORTB 0062                                  i1___bmul@product 0072  
                      ??_znp_zdo_startup_from_app 002C                                        __pbssBANK0 0050  
                                      __pbssBANK1 00A0                                  ?_button1_handler 0070  
                               ?_znp_set_channels 0070                                  ?_button2_handler 0070  
                               ??_znp_af_register 0030                                ??_znp_set_channels 0030  
                                ?_button3_handler 0070                                 _xEventGroupCreate 07C5  
                             _xEventGroupWaitBits 049C                                        __pmaintext 002C  
                              ?_xEventGroupCreate 0070                                           ?___bmul 002A  
                 znp_usart_event_handler@rx_event 007C                                        __pintentry 0004  
                                ??_led_ind_toggle 0070                               ??_xEventGroupCreate 002A  
                                      ??i1___bmul 0071                        __end_of_xEventGroupGetBits 07BD  
                                      __zb_znp_cb 0057                   __end_of_ioc_rb5_add_isr_handler 074D  
                xEventGroupWaitBits@ticks_to_wait 002E                              ?_xEventGroupWaitBits 002E  
                               ?_znp_set_startopt 0070                        __end_of_xEventGroupSetBits 0784  
                                      _led_ind_on 07C8                                   _relay_node_addr 0052  
                              ??_znp_set_startopt 0030                         znp_frame_parser@rcv_index 0054  
                         __end_of_wait_for_status 0728                                           i1fpbase 0024  
                       znp_send_msg@wait_for_rsps 003F                         __end_of_xEventGroupCreate 07C8  
                              _led_ind_blink_stop 07BD                                  _sys_tick_handler 011C  
                                       _CMCONbits 001F                          ??_ex_int_add_isr_handler 002A  
                             ?_led_ind_blink_stop 0070                              _znp_set_logical_type 05FE  
                                         __ptext1 04DD                                           __ptext2 0386  
                                         __ptext3 059B                                           __ptext4 0678  
                                         __ptext5 05DF                                           __ptext6 064E  
                                         __ptext7 05FE                                           __ptext8 0515  
                                         __ptext9 0575                               __size_of__i1fptable 000D  
                                       ?_znp_init 0070                      __end_of_xEventGroupClearBits 076E  
                                       _T1CONbits 0010                                     _sys_tick_init 061A  
               znp_usart_event_handler@event_data 007D                             ??_xEventGroupWaitBits 0032  
                                   _sys_tick_stop 054C                               i1___bmul@multiplier 0073  
                                   ?_wait_for_msg 002A                           _sys_tick_start_periodic 03EC  
                                         clrloop0 07A2                              end_of_initialization 001C  
                            ??_led_ind_blink_stop 0032                                      _eeprom_write 05BE  
                     znp_af_data_request@fcs_calc 003A                                    __blink_handler 07CA  
                                       _RCSTAbits 0018                       znp_af_data_request@endpoint 0032  
      __end_of_sys_tick_register_callback_handler 049C              ??_sys_tick_register_callback_handler 002E  
             ?_sys_tick_register_callback_handler 0070                _sys_tick_register_callback_handler 0447  
                              fp__znp_msg_handler 002A                       znp_af_data_request@dst_addr 0030  
                           ?_znp_set_logical_type 0070                                         _PORTAbits 0005  
                                       _PORTBbits 0006                                        ??_znp_init 002C  
                                  ?_sys_tick_init 0070                                  _znp_frame_parser 027B  
                                  ?_sys_tick_stop 0070                                      _led_ind_init 078E  
                                       _TRISAbits 0085                                         _TRISBbits 0086  
                                  ??_wait_for_msg 002C                  __end_of_znp_zdo_startup_from_app 068A  
                         ??_usart_add_isr_handler 002A                                       ?_led_ind_on 0070  
                        ??_timer1_add_isr_handler 002A                                  ?_wait_for_status 002C  
                         _znp_usart_event_handler 0634                        fp__znp_usart_event_handler 002B  
                                   ??_eeprom_read 002A                                         _TXSTAbits 0098  
                          __end_of__blink_handler 07CC                                        _usart_init 0735  
                                      _usart_send 07A9                                     ??_led_ind_off 002A  
                                  __end_of___bmul 06AD                     wait_for_status@status_to_wait 002F  
                             _znp_af_data_request 0386                              znp_send_msg@endpoint 003E  
                             start_initialization 0011                         ??_sys_tick_start_periodic 0032  
                        ?_ioc_rb4_add_isr_handler 0070                                 ?_znp_router_start 0070  
                                     __end_of_ISR 0386                                   _znp_af_register 0575  
                            znp_send_msg@dst_addr 003C                                znp_frame_parser@ch 007B  
                              main@keepalive_tick 004A                                ??_znp_router_start 0031  
                            ?_znp_af_data_request 0030                                znp_msg_handler@cmd 0072  
                              znp_msg_handler@len 0075                                   ?__blink_handler 0070  
                            _xEventGroupClearBits 0763                                   wait_for_msg@cmd 002A  
                                        ??___bmul 002B                               __end_of_eeprom_read 0678  
                          ??_znp_set_logical_type 0030                                       __pdataBANK0 0062  
                                    _last_cmd_rcv 0050                                       __ex_int_isr 005B  
                                 ??_sys_tick_init 002C                                   ??_sys_tick_stop 002E  
                             fp__sys_tick_handler 0029                                __end_of__i1fptable 002C  
                               ??_znp_msg_handler 0076                                     ??_button_init 002C  
                             __end_of_led_ind_off 07C5                                         ___latbits 0000  
                                   __pcstackBANK0 0020                    ioc_rb5_add_isr_handler@handler 002B  
                        __end_of_sys_tick_handler 01D0                 xEventGroupClearBits@uxBitsToClear 002B  
                                      ISR@iocMask 0029                         ??_znp_usart_event_handler 0020  
                           ??_znp_af_data_request 0038                                  eeprom_write@addr 002C  
                        ?_ioc_rb5_add_isr_handler 0070                            _ex_int_add_isr_handler 07B1  
                              _xEventGroupGetBits 07B9                             ?_xEventGroupClearBits 0070  
                                     ?_usart_init 0070                                       ?_usart_send 0070  
                 __end_of_sys_tick_start_periodic 0447                     ex_int_add_isr_handler@handler 002B  
                              _xEventGroupSetBits 0779                           znp_msg_handler@endpoint 0078  
                             ?_xEventGroupGetBits 0070                                         __tmr1_isr 005D  
                                       __tmr2_isr 005C                                         __pfunctab 001E  
                              fp__button1_handler 0025                                       usart_send@c 002A  
                            __end_of_wait_for_msg 0758                         ?_znp_zdo_startup_from_app 0070  
                              fp__button2_handler 0026                               ?_xEventGroupSetBits 0070  
                              fp__button3_handler 0027                           __end_of_znp_af_register 059B  
                                _led_blink_handle 0058                                         __sys_tick 00A0  
                            ??_xEventGroupGetBits 002A                              ??_xEventGroupSetBits 0070  
                             __end_of_button_init 07A1                                 interrupt_function 0004  
                                znp_send_msg@data 0044                                         clear_ram0 07A1  
                                     _eeprom_read 0663                          __end_of_znp_frame_parser 0318  
                                        _PIE1bits 008C                             i1___bmul@multiplicand 0070  
                                        _PIR1bits 000C                   __end_of_znp_usart_event_handler 064E  
                          _timer1_add_isr_handler 0784                                       _led_ind_off 07C1  
                     __end_of_xEventGroupWaitBits 04DD                                 ??_led_button_init 002C  
                                        i1___bmul 06AD              sys_tick_register_callback_handler@cb 0030  
                            znp_af_data_request@i 003B                                     ?_znp_send_msg 003C  
                                    ??_led_ind_on 002A                                          i1fptable 001F  
                                        i1fptotal 000E                     __end_of_usart_add_isr_handler 06ED  
                                       _znp_state 0056                            ??_xEventGroupClearBits 002A  
                                      _EECON1bits 009C                           main@relay_node_lsb_addr 004E  
                         main@relay_node_msb_addr 004F                               _led_ind_blink_start 0758  
                                _znp_set_channels 0515                                __end_of_led_ind_on 07CA  
                               _sys_tick_get_tick 068A                     sys_tick_start_periodic@handle 0034  
                                ?_znp_af_register 0070                                 ??_button1_handler 0072  
                              ?_sys_tick_get_tick 002A                                 ??_button2_handler 0072  
                    xEventGroupWaitBits@last_tick 0036                                 ??_button3_handler 0072  
sys_tick_register_callback_handler@_handler_index 0031                                       _button_data 0060  
                                     _button_init 0798                                    ??_znp_send_msg 0040  
                   timer1_add_isr_handler@handler 002B                              ?_led_ind_blink_start 0070  
                                        __ptext10 071A                                          __ptext11 074D  
                                        __ptext20 061A                                          __ptext12 07A9  
                                        __ptext21 0784                                          __ptext13 0728  
                                        __ptext30 069C                                          __ptext22 078E  
                                        __ptext14 0735                                          __ptext31 06ED  
                                        __ptext23 0447                                          __ptext15 06DE  
                                        __ptext40 0634                                          __ptext32 0763  
                                        __ptext24 07C8                                          __ptext16 049C  
                                        __ptext41 027B                                          __ptext33 05BE  
                                        __ptext25 07BD                                          __ptext17 068A  
                                        __ptext50 0779                                          __ptext42 01D0  
                                        __ptext34 0663                                          __ptext26 054C  
                                        __ptext18 07B9                                          __ptext43 011C  
                                        __ptext35 0798                                          __ptext27 07C1  
                                        __ptext19 07C5                                          __ptext44 06AD  
                                        __ptext36 0741                                          __ptext28 0758  
                                        __ptext45 07CA                                          __ptext37 076E  
                                        __ptext29 03EC                                          __ptext46 06FC  
                                        __ptext38 07B1                                          __ptext47 06BE  
                                        __ptext39 0318                                          __ptext48 070B  
                                        __ptext49 06CE                               ??_sys_tick_get_tick 002E  
                                ??__blink_handler 0071                                    _znp_hard_reset 064E  
                                _znp_set_startopt 05DF                                   znp_send_msg@len 0045  
                       znp_router_start@start_opt 0033                                   _znp_msg_handler 01D0  
                       __end_of_sys_tick_get_tick 069C                                wait_for_status@cmd 002C  
                        sys_tick_start_periodic@i 0035                                          _znp_init 0728  
                                      _INTCONbits 000B                             ??_led_ind_blink_start 0036  
                          __end_of_znp_hard_reset 0663                           ?_ex_int_add_isr_handler 0070  
                                    _wait_for_msg 074D                                 ?_sys_tick_handler 0070  
                                        intlevel1 001E                     znp_af_data_request@cluster_id 0033  
                              ??_sys_tick_handler 0074                                      ??_usart_init 002A  
                                    ??_usart_send 002A                     xEventGroupSetBits@uxBitsToSet 0071  
                               sys_tick_handler@i 0020                          ?_sys_tick_start_periodic 002E  
                           __end_of_sys_tick_init 0634                             __end_of_sys_tick_stop 0575  
                     __end_of_znp_af_data_request 03EC                    __end_of_ex_int_add_isr_handler 07B9  
                              __end_of_usart_init 0741                                __end_of_usart_send 07B1  
                                 ?_znp_hard_reset 0070                                    _led_ind_toggle 06FC  
                znp_af_data_request@wait_for_rsps 0037                                     __usart_rx_isr 005E  
                                   ?_eeprom_write 002A                                        _STATUSbits 0003  
                         __end_of_znp_msg_handler 027B                                   _led_button_init 06ED  
                                    ?_eeprom_read 0070                                 ?_znp_frame_parser 0070  
                         ?_timer1_add_isr_handler 0070                              __end_of_znp_send_msg 0515  
