

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Dec 01 14:24:18 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	intentry,global,class=CODE,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	functab,global,class=ENTRY,delta=2
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.35
    96                           ; Generated 06/12/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC16F887 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001D                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  0081                     	;# 
   400  0085                     	;# 
   401  0086                     	;# 
   402  0087                     	;# 
   403  0088                     	;# 
   404  0089                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  008F                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  0105                     	;# 
   428  0107                     	;# 
   429  0108                     	;# 
   430  0109                     	;# 
   431  010C                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  010F                     	;# 
   436  0185                     	;# 
   437  0187                     	;# 
   438  0188                     	;# 
   439  0189                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  000E                     	;# 
   458  000F                     	;# 
   459  0010                     	;# 
   460  0011                     	;# 
   461  0012                     	;# 
   462  0013                     	;# 
   463  0014                     	;# 
   464  0015                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0017                     	;# 
   468  0018                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001D                     	;# 
   475  001E                     	;# 
   476  001F                     	;# 
   477  0081                     	;# 
   478  0085                     	;# 
   479  0086                     	;# 
   480  0087                     	;# 
   481  0088                     	;# 
   482  0089                     	;# 
   483  008C                     	;# 
   484  008D                     	;# 
   485  008E                     	;# 
   486  008F                     	;# 
   487  0090                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0095                     	;# 
   495  0096                     	;# 
   496  0097                     	;# 
   497  0098                     	;# 
   498  0099                     	;# 
   499  009A                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  009F                     	;# 
   505  0105                     	;# 
   506  0107                     	;# 
   507  0108                     	;# 
   508  0109                     	;# 
   509  010C                     	;# 
   510  010C                     	;# 
   511  010D                     	;# 
   512  010E                     	;# 
   513  010F                     	;# 
   514  0185                     	;# 
   515  0187                     	;# 
   516  0188                     	;# 
   517  0189                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  000E                     	;# 
   536  000F                     	;# 
   537  0010                     	;# 
   538  0011                     	;# 
   539  0012                     	;# 
   540  0013                     	;# 
   541  0014                     	;# 
   542  0015                     	;# 
   543  0015                     	;# 
   544  0016                     	;# 
   545  0017                     	;# 
   546  0018                     	;# 
   547  0019                     	;# 
   548  001A                     	;# 
   549  001B                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  001D                     	;# 
   553  001E                     	;# 
   554  001F                     	;# 
   555  0081                     	;# 
   556  0085                     	;# 
   557  0086                     	;# 
   558  0087                     	;# 
   559  0088                     	;# 
   560  0089                     	;# 
   561  008C                     	;# 
   562  008D                     	;# 
   563  008E                     	;# 
   564  008F                     	;# 
   565  0090                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0093                     	;# 
   570  0093                     	;# 
   571  0094                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009C                     	;# 
   580  009D                     	;# 
   581  009E                     	;# 
   582  009F                     	;# 
   583  0105                     	;# 
   584  0107                     	;# 
   585  0108                     	;# 
   586  0109                     	;# 
   587  010C                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  010F                     	;# 
   592  0185                     	;# 
   593  0187                     	;# 
   594  0188                     	;# 
   595  0189                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  0000                     	;# 
   599  0001                     	;# 
   600  0002                     	;# 
   601  0003                     	;# 
   602  0004                     	;# 
   603  0005                     	;# 
   604  0006                     	;# 
   605  0007                     	;# 
   606  0008                     	;# 
   607  0009                     	;# 
   608  000A                     	;# 
   609  000B                     	;# 
   610  000C                     	;# 
   611  000D                     	;# 
   612  000E                     	;# 
   613  000E                     	;# 
   614  000F                     	;# 
   615  0010                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0013                     	;# 
   619  0014                     	;# 
   620  0015                     	;# 
   621  0015                     	;# 
   622  0016                     	;# 
   623  0017                     	;# 
   624  0018                     	;# 
   625  0019                     	;# 
   626  001A                     	;# 
   627  001B                     	;# 
   628  001B                     	;# 
   629  001C                     	;# 
   630  001D                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  0081                     	;# 
   634  0085                     	;# 
   635  0086                     	;# 
   636  0087                     	;# 
   637  0088                     	;# 
   638  0089                     	;# 
   639  008C                     	;# 
   640  008D                     	;# 
   641  008E                     	;# 
   642  008F                     	;# 
   643  0090                     	;# 
   644  0091                     	;# 
   645  0092                     	;# 
   646  0093                     	;# 
   647  0093                     	;# 
   648  0093                     	;# 
   649  0094                     	;# 
   650  0095                     	;# 
   651  0096                     	;# 
   652  0097                     	;# 
   653  0098                     	;# 
   654  0099                     	;# 
   655  009A                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009E                     	;# 
   660  009F                     	;# 
   661  0105                     	;# 
   662  0107                     	;# 
   663  0108                     	;# 
   664  0109                     	;# 
   665  010C                     	;# 
   666  010C                     	;# 
   667  010D                     	;# 
   668  010E                     	;# 
   669  010F                     	;# 
   670  0185                     	;# 
   671  0187                     	;# 
   672  0188                     	;# 
   673  0189                     	;# 
   674  018C                     	;# 
   675  018D                     	;# 
   676  0000                     	;# 
   677  0001                     	;# 
   678  0002                     	;# 
   679  0003                     	;# 
   680  0004                     	;# 
   681  0005                     	;# 
   682  0006                     	;# 
   683  0007                     	;# 
   684  0008                     	;# 
   685  0009                     	;# 
   686  000A                     	;# 
   687  000B                     	;# 
   688  000C                     	;# 
   689  000D                     	;# 
   690  000E                     	;# 
   691  000E                     	;# 
   692  000F                     	;# 
   693  0010                     	;# 
   694  0011                     	;# 
   695  0012                     	;# 
   696  0013                     	;# 
   697  0014                     	;# 
   698  0015                     	;# 
   699  0015                     	;# 
   700  0016                     	;# 
   701  0017                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  001B                     	;# 
   706  001B                     	;# 
   707  001C                     	;# 
   708  001D                     	;# 
   709  001E                     	;# 
   710  001F                     	;# 
   711  0081                     	;# 
   712  0085                     	;# 
   713  0086                     	;# 
   714  0087                     	;# 
   715  0088                     	;# 
   716  0089                     	;# 
   717  008C                     	;# 
   718  008D                     	;# 
   719  008E                     	;# 
   720  008F                     	;# 
   721  0090                     	;# 
   722  0091                     	;# 
   723  0092                     	;# 
   724  0093                     	;# 
   725  0093                     	;# 
   726  0093                     	;# 
   727  0094                     	;# 
   728  0095                     	;# 
   729  0096                     	;# 
   730  0097                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009A                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  009F                     	;# 
   739  0105                     	;# 
   740  0107                     	;# 
   741  0108                     	;# 
   742  0109                     	;# 
   743  010C                     	;# 
   744  010C                     	;# 
   745  010D                     	;# 
   746  010E                     	;# 
   747  010F                     	;# 
   748  0185                     	;# 
   749  0187                     	;# 
   750  0188                     	;# 
   751  0189                     	;# 
   752  018C                     	;# 
   753  018D                     	;# 
   754  0000                     	;# 
   755  0001                     	;# 
   756  0002                     	;# 
   757  0003                     	;# 
   758  0004                     	;# 
   759  0005                     	;# 
   760  0006                     	;# 
   761  0007                     	;# 
   762  0008                     	;# 
   763  0009                     	;# 
   764  000A                     	;# 
   765  000B                     	;# 
   766  000C                     	;# 
   767  000D                     	;# 
   768  000E                     	;# 
   769  000E                     	;# 
   770  000F                     	;# 
   771  0010                     	;# 
   772  0011                     	;# 
   773  0012                     	;# 
   774  0013                     	;# 
   775  0014                     	;# 
   776  0015                     	;# 
   777  0015                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001B                     	;# 
   785  001C                     	;# 
   786  001D                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  0081                     	;# 
   790  0085                     	;# 
   791  0086                     	;# 
   792  0087                     	;# 
   793  0088                     	;# 
   794  0089                     	;# 
   795  008C                     	;# 
   796  008D                     	;# 
   797  008E                     	;# 
   798  008F                     	;# 
   799  0090                     	;# 
   800  0091                     	;# 
   801  0092                     	;# 
   802  0093                     	;# 
   803  0093                     	;# 
   804  0093                     	;# 
   805  0094                     	;# 
   806  0095                     	;# 
   807  0096                     	;# 
   808  0097                     	;# 
   809  0098                     	;# 
   810  0099                     	;# 
   811  009A                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  009F                     	;# 
   817  0105                     	;# 
   818  0107                     	;# 
   819  0108                     	;# 
   820  0109                     	;# 
   821  010C                     	;# 
   822  010C                     	;# 
   823  010D                     	;# 
   824  010E                     	;# 
   825  010F                     	;# 
   826  0185                     	;# 
   827  0187                     	;# 
   828  0188                     	;# 
   829  0189                     	;# 
   830  018C                     	;# 
   831  018D                     	;# 
   832  0000                     	;# 
   833  0001                     	;# 
   834  0002                     	;# 
   835  0003                     	;# 
   836  0004                     	;# 
   837  0005                     	;# 
   838  0006                     	;# 
   839  0007                     	;# 
   840  0008                     	;# 
   841  0009                     	;# 
   842  000A                     	;# 
   843  000B                     	;# 
   844  000C                     	;# 
   845  000D                     	;# 
   846  000E                     	;# 
   847  000E                     	;# 
   848  000F                     	;# 
   849  0010                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0013                     	;# 
   853  0014                     	;# 
   854  0015                     	;# 
   855  0015                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001B                     	;# 
   863  001C                     	;# 
   864  001D                     	;# 
   865  001E                     	;# 
   866  001F                     	;# 
   867  0081                     	;# 
   868  0085                     	;# 
   869  0086                     	;# 
   870  0087                     	;# 
   871  0088                     	;# 
   872  0089                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  008F                     	;# 
   877  0090                     	;# 
   878  0091                     	;# 
   879  0092                     	;# 
   880  0093                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0098                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009E                     	;# 
   894  009F                     	;# 
   895  0105                     	;# 
   896  0107                     	;# 
   897  0108                     	;# 
   898  0109                     	;# 
   899  010C                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  010E                     	;# 
   903  010F                     	;# 
   904  0185                     	;# 
   905  0187                     	;# 
   906  0188                     	;# 
   907  0189                     	;# 
   908  018C                     	;# 
   909  018D                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0008                     	;# 
   919  0009                     	;# 
   920  000A                     	;# 
   921  000B                     	;# 
   922  000C                     	;# 
   923  000D                     	;# 
   924  000E                     	;# 
   925  000E                     	;# 
   926  000F                     	;# 
   927  0010                     	;# 
   928  0011                     	;# 
   929  0012                     	;# 
   930  0013                     	;# 
   931  0014                     	;# 
   932  0015                     	;# 
   933  0015                     	;# 
   934  0016                     	;# 
   935  0017                     	;# 
   936  0018                     	;# 
   937  0019                     	;# 
   938  001A                     	;# 
   939  001B                     	;# 
   940  001B                     	;# 
   941  001C                     	;# 
   942  001D                     	;# 
   943  001E                     	;# 
   944  001F                     	;# 
   945  0081                     	;# 
   946  0085                     	;# 
   947  0086                     	;# 
   948  0087                     	;# 
   949  0088                     	;# 
   950  0089                     	;# 
   951  008C                     	;# 
   952  008D                     	;# 
   953  008E                     	;# 
   954  008F                     	;# 
   955  0090                     	;# 
   956  0091                     	;# 
   957  0092                     	;# 
   958  0093                     	;# 
   959  0093                     	;# 
   960  0093                     	;# 
   961  0094                     	;# 
   962  0095                     	;# 
   963  0096                     	;# 
   964  0097                     	;# 
   965  0098                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009C                     	;# 
   970  009D                     	;# 
   971  009E                     	;# 
   972  009F                     	;# 
   973  0105                     	;# 
   974  0107                     	;# 
   975  0108                     	;# 
   976  0109                     	;# 
   977  010C                     	;# 
   978  010C                     	;# 
   979  010D                     	;# 
   980  010E                     	;# 
   981  010F                     	;# 
   982  0185                     	;# 
   983  0187                     	;# 
   984  0188                     	;# 
   985  0189                     	;# 
   986  018C                     	;# 
   987  018D                     	;# 
   988  0000                     	;# 
   989  0001                     	;# 
   990  0002                     	;# 
   991  0003                     	;# 
   992  0004                     	;# 
   993  0005                     	;# 
   994  0006                     	;# 
   995  0007                     	;# 
   996  0008                     	;# 
   997  0009                     	;# 
   998  000A                     	;# 
   999  000B                     	;# 
  1000  000C                     	;# 
  1001  000D                     	;# 
  1002  000E                     	;# 
  1003  000E                     	;# 
  1004  000F                     	;# 
  1005  0010                     	;# 
  1006  0011                     	;# 
  1007  0012                     	;# 
  1008  0013                     	;# 
  1009  0014                     	;# 
  1010  0015                     	;# 
  1011  0015                     	;# 
  1012  0016                     	;# 
  1013  0017                     	;# 
  1014  0018                     	;# 
  1015  0019                     	;# 
  1016  001A                     	;# 
  1017  001B                     	;# 
  1018  001B                     	;# 
  1019  001C                     	;# 
  1020  001D                     	;# 
  1021  001E                     	;# 
  1022  001F                     	;# 
  1023  0081                     	;# 
  1024  0085                     	;# 
  1025  0086                     	;# 
  1026  0087                     	;# 
  1027  0088                     	;# 
  1028  0089                     	;# 
  1029  008C                     	;# 
  1030  008D                     	;# 
  1031  008E                     	;# 
  1032  008F                     	;# 
  1033  0090                     	;# 
  1034  0091                     	;# 
  1035  0092                     	;# 
  1036  0093                     	;# 
  1037  0093                     	;# 
  1038  0093                     	;# 
  1039  0094                     	;# 
  1040  0095                     	;# 
  1041  0096                     	;# 
  1042  0097                     	;# 
  1043  0098                     	;# 
  1044  0099                     	;# 
  1045  009A                     	;# 
  1046  009B                     	;# 
  1047  009C                     	;# 
  1048  009D                     	;# 
  1049  009E                     	;# 
  1050  009F                     	;# 
  1051  0105                     	;# 
  1052  0107                     	;# 
  1053  0108                     	;# 
  1054  0109                     	;# 
  1055  010C                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  010F                     	;# 
  1060  0185                     	;# 
  1061  0187                     	;# 
  1062  0188                     	;# 
  1063  0189                     	;# 
  1064  018C                     	;# 
  1065  018D                     	;# 
  1066                           
  1067                           	psect	idataBANK3
  1068  100E                     __pidataBANK3:
  1069                           
  1070                           ;initializer for ISR@tmpPORTB
  1071  100E  34FF               	retlw	255
  1072                           
  1073                           ;initializer for _ade_cfg
  1074  100F  3400               	retlw	0
  1075  1010  340C               	retlw	12
  1076  1011  3400               	retlw	0
  1077  1012  3440               	retlw	64
  1078  1013  3400               	retlw	0
  1079  1014  3496               	retlw	150
  1080  1015  3400               	retlw	0
  1081  1016  3400               	retlw	0
  1082  1017  3400               	retlw	0
  1083  1018  3400               	retlw	0
  1084  1019  3400               	retlw	0
  1085  101A  3400               	retlw	0
  1086  101B  3400               	retlw	0
  1087  101C  3400               	retlw	0
  1088  101D  3400               	retlw	0
  1089  000E                     _TMR1	set	14
  1090  0003                     _STATUSbits	set	3
  1091  0010                     _T1CONbits	set	16
  1092  0019                     _TXREG	set	25
  1093  0013                     _SSPBUF	set	19
  1094  0014                     _SSPCONbits	set	20
  1095  0006                     _PORTBbits	set	6
  1096  0006                     _PORTB	set	6
  1097  001A                     _RCREG	set	26
  1098  0001                     _TMR0	set	1
  1099  0018                     _RCSTAbits	set	24
  1100  000B                     _INTCONbits	set	11
  1101  000C                     _PIR1bits	set	12
  1102  0008                     _PORTDbits	set	8
  1103  0099                     _SPBRG	set	153
  1104  0098                     _TXSTAbits	set	152
  1105  0094                     _SSPSTATbits	set	148
  1106  0087                     _TRISCbits	set	135
  1107  009F                     _ADCON1	set	159
  1108  008F                     _OSCCONbits	set	143
  1109  0086                     _TRISB	set	134
  1110  0096                     _IOCB	set	150
  1111  0086                     _TRISBbits	set	134
  1112  0096                     _IOCBbits	set	150
  1113  008C                     _PIE1bits	set	140
  1114  0081                     _OPTION_REGbits	set	129
  1115  0088                     _TRISDbits	set	136
  1116  010C                     _EEDATA	set	268
  1117  010D                     _EEADR	set	269
  1118  018D                     _EECON2	set	397
  1119  018C                     _EECON1	set	396
  1120  018C                     _EECON1bits	set	396
  1121  0187                     _BAUDCTLbits	set	391
  1122  0189                     _ANSELH	set	393
  1123  0188                     _ANSEL	set	392
  1124                           
  1125                           	psect	cinit
  1126  0015                     start_initialization:	
  1127                           ; #config settings
  1128                           
  1129  0015                     __initialization:
  1130                           
  1131                           ; Initialize objects allocated to BANK3
  1132  0015  1783               	bsf	3,7	;select IRP bank2
  1133  0016  30DC               	movlw	low (__pdataBANK3+16)
  1134  0017  00FD               	movwf	btemp+-1
  1135  0018  3010               	movlw	high __pidataBANK3
  1136  0019  00FE               	movwf	btemp
  1137  001A  300E               	movlw	low __pidataBANK3
  1138  001B  00FF               	movwf	btemp+1
  1139  001C  30CC               	movlw	low __pdataBANK3
  1140  001D  0084               	movwf	4
  1141  001E  160A  118A  2066  120A  118A  	fcall	init_ram0
  1142                           
  1143                           ; Clear objects allocated to BANK3
  1144  0023  3090               	movlw	low __pbssBANK3
  1145  0024  0084               	movwf	4
  1146  0025  30CC               	movlw	low (__pbssBANK3+60)
  1147  0026  160A  158A  273F  120A  118A  	fcall	clear_ram0
  1148                           
  1149                           ; Clear objects allocated to BANK2
  1150  002B  3010               	movlw	low __pbssBANK2
  1151  002C  0084               	movwf	4
  1152  002D  302E               	movlw	low (__pbssBANK2+30)
  1153  002E  160A  158A  273F  120A  118A  	fcall	clear_ram0
  1154                           
  1155                           ; Clear objects allocated to BANK1
  1156  0033  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0034  01E7               	clrf	__pbssBANK1& (0+127)
  1158  0035  01E8               	clrf	(__pbssBANK1+1)& (0+127)
  1159  0036  01E9               	clrf	(__pbssBANK1+2)& (0+127)
  1160  0037  01EA               	clrf	(__pbssBANK1+3)& (0+127)
  1161  0038  01EB               	clrf	(__pbssBANK1+4)& (0+127)
  1162  0039  01EC               	clrf	(__pbssBANK1+5)& (0+127)
  1163                           
  1164                           ; Clear objects allocated to BANK0
  1165  003A  1383               	bcf	3,7	;select IRP bank0
  1166  003B  305B               	movlw	low __pbssBANK0
  1167  003C  0084               	movwf	4
  1168  003D  3067               	movlw	low (__pbssBANK0+12)
  1169  003E  160A  158A  273F   	fcall	clear_ram0
  1170  0041                     end_of_initialization:	
  1171                           ;End of C runtime variable initialization code
  1172                           
  1173  0041                     __end_of__initialization:
  1174  0041  0183               	clrf	3
  1175  0042  120A  158A  2B70   	ljmp	_main	;jump to C main() function
  1176                           
  1177                           	psect	bssBANK0
  1178  005B                     __pbssBANK0:
  1179  005B                     _last_cmd_rcv:
  1180  005B                     	ds	2
  1181  005D                     _znp_data_rcv_index:
  1182  005D                     	ds	1
  1183  005E                     _znp_len:
  1184  005E                     	ds	1
  1185  005F                     _led_blink_handle:
  1186  005F                     	ds	1
  1187  0060                     __ioc_rb2_isr:
  1188  0060                     	ds	1
  1189  0061                     __ioc_rb1_isr:
  1190  0061                     	ds	1
  1191  0062                     __ex_int_isr:
  1192  0062                     	ds	1
  1193  0063                     __tmr2_isr:
  1194  0063                     	ds	1
  1195  0064                     __tmr1_isr:
  1196  0064                     	ds	1
  1197  0065                     __usart_rx_isr:
  1198  0065                     	ds	1
  1199  0066                     __ade_zx_cb:
  1200  0066                     	ds	1
  1201                           
  1202                           	psect	bssBANK1
  1203  00E7                     __pbssBANK1:
  1204  00E7                     _uxBits:
  1205  00E7                     	ds	1
  1206  00E8                     __ioc_rb6_isr:
  1207  00E8                     	ds	1
  1208  00E9                     __ioc_rb5_isr:
  1209  00E9                     	ds	1
  1210  00EA                     __ioc_rb4_isr:
  1211  00EA                     	ds	1
  1212  00EB                     __ioc_rb3_isr:
  1213  00EB                     	ds	1
  1214  00EC                     __is_reversed:
  1215  00EC                     	ds	1
  1216                           
  1217                           	psect	bssBANK3
  1218  0190                     __pbssBANK3:
  1219  0190                     __sys_tick:
  1220  0190                     	ds	35
  1221  01B3                     __energy:
  1222  01B3                     	ds	4
  1223  01B7                     __linecyc:
  1224  01B7                     	ds	2
  1225  01B9                     _znp_fcs:
  1226  01B9                     	ds	1
  1227  01BA                     _znp_cmd1:
  1228  01BA                     	ds	1
  1229  01BB                     _znp_cmd0:
  1230  01BB                     	ds	1
  1231  01BC                     _znp_state:
  1232  01BC                     	ds	1
  1233  01BD                     __zb_znp_cb:
  1234  01BD                     	ds	1
  1235  01BE                     __ioc_rb7_isr:
  1236  01BE                     	ds	1
  1237  01BF                     _dev_data:
  1238  01BF                     	ds	13
  1239                           
  1240                           	psect	dataBANK3
  1241  01CC                     __pdataBANK3:
  1242  01CC                     ISR@tmpPORTB:
  1243  01CC                     	ds	1
  1244  01CD                     _ade_cfg:
  1245  01CD                     	ds	15
  1246                           
  1247                           	psect	bssBANK2
  1248  0110                     __pbssBANK2:
  1249  0110                     _znp_data_rcv:
  1250  0110                     	ds	30
  1251                           
  1252                           	psect	inittext
  1253  1062                     init_fetch0:	
  1254                           ;	Called with low address in FSR and high address in W
  1255                           
  1256  1062  087E               	movf	126,w
  1257  1063  008A               	movwf	10
  1258  1064  087F               	movf	127,w
  1259  1065  0082               	movwf	2
  1260  1066                     init_ram0:	
  1261                           ;Called with:
  1262                           ;	high address of idata address in btemp 
  1263                           ;	low address of idata address in btemp+1 
  1264                           ;	low address of data in FSR
  1265                           ;	high address + 1 of data in btemp-1
  1266                           
  1267  1066  2062  160A  118A   	fcall	init_fetch0
  1268  1069  0080               	movwf	0
  1269  106A  0A84               	incf	4,f
  1270  106B  0804               	movf	4,w
  1271  106C  067D               	xorwf	125,w
  1272  106D  1903               	btfsc	3,2
  1273  106E  3400               	retlw	0
  1274  106F  0AFF               	incf	127,f
  1275  1070  1903               	btfsc	3,2
  1276  1071  0AFE               	incf	126,f
  1277  1072  2866               	goto	init_ram0
  1278                           
  1279                           	psect	clrtext
  1280  1F3F                     clear_ram0:	
  1281                           ;	Called with FSR containing the base address, and
  1282                           ;	W with the last address+1
  1283                           
  1284  1F3F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1285  1F40                     clrloop0:
  1286  1F40  0180               	clrf	0	;clear RAM location pointed to by FSR
  1287  1F41  0A84               	incf	4,f	;increment pointer
  1288  1F42  0604               	xorwf	4,w	;XOR with final address
  1289  1F43  1903               	btfsc	3,2	;have we reached the end yet?
  1290  1F44  3400               	retlw	0	;all done for this memory range, return
  1291  1F45  0604               	xorwf	4,w	;XOR again to restore value
  1292  1F46  2F40               	goto	clrloop0	;do the next byte
  1293                           
  1294                           	psect	cstackBANK3
  1295  01DC                     __pcstackBANK3:
  1296  01DC                     ??_main:
  1297                           
  1298                           ; 1 bytes @ 0x0
  1299  01DC                     	ds	4
  1300  01E0                     main@keepalive_tick:
  1301                           
  1302                           ; 4 bytes @ 0x4
  1303  01E0                     	ds	4
  1304  01E4                     main@ade_data_tick:
  1305                           
  1306                           ; 4 bytes @ 0x8
  1307  01E4                     	ds	4
  1308                           
  1309                           	psect	cstackBANK1
  1310  00A0                     __pcstackBANK1:
  1311  00A0                     ?___fldiv:
  1312  00A0                     ___fldiv@a:	
  1313                           ; 4 bytes @ 0x0
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x0
  1317  00A0                     	ds	4
  1318  00A4                     ___fldiv@b:
  1319                           
  1320                           ; 4 bytes @ 0x4
  1321  00A4                     	ds	4
  1322  00A8                     ??___fldiv:
  1323                           
  1324                           ; 1 bytes @ 0x8
  1325  00A8                     	ds	5
  1326  00AD                     ___fldiv@rem:
  1327                           
  1328                           ; 4 bytes @ 0xD
  1329  00AD                     	ds	4
  1330  00B1                     ___fldiv@sign:
  1331                           
  1332                           ; 1 bytes @ 0x11
  1333  00B1                     	ds	1
  1334  00B2                     ___fldiv@new_exp:
  1335                           
  1336                           ; 2 bytes @ 0x12
  1337  00B2                     	ds	2
  1338  00B4                     ___fldiv@grs:
  1339                           
  1340                           ; 4 bytes @ 0x14
  1341  00B4                     	ds	4
  1342  00B8                     ___fldiv@bexp:
  1343                           
  1344                           ; 1 bytes @ 0x18
  1345  00B8                     	ds	1
  1346  00B9                     ___fldiv@aexp:
  1347                           
  1348                           ; 1 bytes @ 0x19
  1349  00B9                     	ds	1
  1350  00BA                     ?___fladd:
  1351  00BA                     ___fladd@b:	
  1352                           ; 4 bytes @ 0x1A
  1353                           
  1354                           
  1355                           ; 4 bytes @ 0x1A
  1356  00BA                     	ds	4
  1357  00BE                     ___fladd@a:
  1358                           
  1359                           ; 4 bytes @ 0x1E
  1360  00BE                     	ds	4
  1361  00C2                     ??___fladd:
  1362                           
  1363                           ; 1 bytes @ 0x22
  1364  00C2                     	ds	8
  1365  00CA                     ade_get_power_meter_data@line_periods:
  1366                           
  1367                           ; 4 bytes @ 0x2A
  1368  00CA                     	ds	4
  1369  00CE                     ade_get_power_meter_data@accumulation_times:
  1370                           
  1371                           ; 4 bytes @ 0x2E
  1372  00CE                     	ds	4
  1373  00D2                     ade_get_power_meter_data@period:
  1374                           
  1375                           ; 2 bytes @ 0x32
  1376  00D2                     	ds	2
  1377  00D4                     _ade_get_power_meter_data$354:
  1378                           
  1379                           ; 4 bytes @ 0x34
  1380  00D4                     	ds	4
  1381  00D8                     _ade_get_power_meter_data$357:
  1382                           
  1383                           ; 4 bytes @ 0x38
  1384  00D8                     	ds	4
  1385  00DC                     ade_get_power_meter_data@irms:
  1386                           
  1387                           ; 3 bytes @ 0x3C
  1388  00DC                     	ds	3
  1389  00DF                     _ade_get_power_meter_data$358:
  1390                           
  1391                           ; 2 bytes @ 0x3F
  1392  00DF                     	ds	2
  1393  00E1                     ade_get_power_meter_data@vrms:
  1394                           
  1395                           ; 3 bytes @ 0x41
  1396  00E1                     	ds	3
  1397  00E4                     ade_get_power_meter_data@laenergy:
  1398                           
  1399                           ; 2 bytes @ 0x44
  1400  00E4                     	ds	2
  1401  00E6                     ade_get_power_meter_data@pData:
  1402                           
  1403                           ; 1 bytes @ 0x46
  1404  00E6                     	ds	1
  1405                           
  1406                           	psect	cstackCOMMON
  1407  0070                     __pcstackCOMMON:
  1408  0070                     ?_spi_master_init:
  1409  0070                     ?_ade_reset:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_ade_set_GAIN:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_ex_int_add_isr_handler:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_spi_transfer:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_led_ind_toggle:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ??_led_ind_toggle:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_sys_tick_register_callback_handler:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_led_ind_on:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_sys_tick_stop:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ?_led_ind_off:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_xEventGroupSetBits:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ??_xEventGroupSetBits:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_sys_tick_init:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_xEventGroupCreate:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_znp_init:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ?_eeprom_read:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_znp_router_start:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_xEventGroupGetBits:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_xEventGroupClearBits:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_znp_hard_reset:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?_ade_zx_handler:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_ade_init:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?_ade_config:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_ade_get_power_meter_data:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?_usart_add_isr_handler:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_timer1_add_isr_handler:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ?_ioc_rb1_add_isr_handler:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_ISR:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_led_ind_blink_handler:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_led_ind_init:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ?_led_ind_blink_start:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_led_ind_blink_stop:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_relay_init:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_button_handler:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_button_init:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_ade_zx_cb_handler:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_main:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_usart_init:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_usart_send:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_znp_frame_parser:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_znp_set_startopt:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_znp_set_logical_type:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_znp_set_channels:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_znp_af_register:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_znp_zdo_startup_from_app:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_sys_tick_handler:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?i1___bmul:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     i1___bmul@multiplicand:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553                           
  1554                           ; 1 bytes @ 0x0
  1555  0070                     	ds	1
  1556  0071                     ??_led_ind_blink_handler:
  1557  0071                     ??i1___bmul:	
  1558                           ; 1 bytes @ 0x1
  1559                           
  1560  0071                     xEventGroupSetBits@uxBitsToSet:	
  1561                           ; 1 bytes @ 0x1
  1562                           
  1563                           
  1564                           ; 1 bytes @ 0x1
  1565  0071                     	ds	1
  1566  0072                     ??_ade_zx_handler:
  1567  0072                     ??_button_handler:	
  1568                           ; 1 bytes @ 0x2
  1569                           
  1570  0072                     ?_znp_msg_handler:	
  1571                           ; 1 bytes @ 0x2
  1572                           
  1573  0072                     ??_ade_zx_cb_handler:	
  1574                           ; 1 bytes @ 0x2
  1575                           
  1576  0072                     i1___bmul@product:	
  1577                           ; 1 bytes @ 0x2
  1578                           
  1579  0072                     znp_msg_handler@cmd:	
  1580                           ; 1 bytes @ 0x2
  1581                           
  1582                           
  1583                           ; 2 bytes @ 0x2
  1584  0072                     	ds	1
  1585  0073                     i1___bmul@multiplier:
  1586                           
  1587                           ; 1 bytes @ 0x3
  1588  0073                     	ds	1
  1589  0074                     ??_sys_tick_handler:
  1590  0074                     znp_msg_handler@data:	
  1591                           ; 1 bytes @ 0x4
  1592                           
  1593                           
  1594                           ; 1 bytes @ 0x4
  1595  0074                     	ds	1
  1596  0075                     znp_msg_handler@len:
  1597                           
  1598                           ; 1 bytes @ 0x5
  1599  0075                     	ds	1
  1600  0076                     ??_znp_msg_handler:
  1601                           
  1602                           ; 1 bytes @ 0x6
  1603  0076                     	ds	1
  1604  0077                     ??_znp_frame_parser:
  1605                           
  1606                           ; 1 bytes @ 0x7
  1607  0077                     	ds	2
  1608  0079                     znp_frame_parser@ch:
  1609                           
  1610                           ; 1 bytes @ 0x9
  1611  0079                     	ds	1
  1612  007A                     ?_znp_usart_event_handler:
  1613  007A                     znp_usart_event_handler@rx_event:	
  1614                           ; 1 bytes @ 0xA
  1615                           
  1616                           
  1617                           ; 1 bytes @ 0xA
  1618  007A                     	ds	1
  1619  007B                     znp_usart_event_handler@event_data:
  1620                           
  1621                           ; 1 bytes @ 0xB
  1622  007B                     	ds	1
  1623  007C                     ??_znp_usart_event_handler:
  1624                           
  1625                           ; 1 bytes @ 0xC
  1626  007C                     	ds	2
  1627                           
  1628                           	psect	cstackBANK0
  1629  0020                     __pcstackBANK0:
  1630  0020                     sys_tick_handler@i:
  1631                           
  1632                           ; 1 bytes @ 0x0
  1633  0020                     	ds	1
  1634  0021                     ??_ISR:
  1635                           
  1636                           ; 1 bytes @ 0x1
  1637  0021                     	ds	5
  1638  0026                     ISR@c:
  1639                           
  1640                           ; 1 bytes @ 0x6
  1641  0026                     	ds	1
  1642  0027                     ISR@newPORTB:
  1643                           
  1644                           ; 1 bytes @ 0x7
  1645  0027                     	ds	1
  1646  0028                     ISR@iocMask:
  1647                           
  1648                           ; 1 bytes @ 0x8
  1649  0028                     	ds	1
  1650  0029                     ?___flge:
  1651  0029                     ??_spi_master_init:	
  1652                           ; 1 bit 
  1653                           
  1654  0029                     ??_ade_reset:	
  1655                           ; 1 bytes @ 0x9
  1656                           
  1657  0029                     ??_ex_int_add_isr_handler:	
  1658                           ; 1 bytes @ 0x9
  1659                           
  1660  0029                     ??_spi_transfer:	
  1661                           ; 1 bytes @ 0x9
  1662                           
  1663  0029                     ??_led_ind_on:	
  1664                           ; 1 bytes @ 0x9
  1665                           
  1666  0029                     ??_led_ind_off:	
  1667                           ; 1 bytes @ 0x9
  1668                           
  1669  0029                     ?_memset:	
  1670                           ; 1 bytes @ 0x9
  1671                           
  1672  0029                     ?_eeprom_write:	
  1673                           ; 1 bytes @ 0x9
  1674                           
  1675  0029                     ??_xEventGroupCreate:	
  1676                           ; 1 bytes @ 0x9
  1677                           
  1678  0029                     ??_eeprom_read:	
  1679                           ; 1 bytes @ 0x9
  1680                           
  1681  0029                     ??_xEventGroupGetBits:	
  1682                           ; 1 bytes @ 0x9
  1683                           
  1684  0029                     ??_xEventGroupClearBits:	
  1685                           ; 1 bytes @ 0x9
  1686                           
  1687  0029                     ??_usart_add_isr_handler:	
  1688                           ; 1 bytes @ 0x9
  1689                           
  1690  0029                     ??_timer1_add_isr_handler:	
  1691                           ; 1 bytes @ 0x9
  1692                           
  1693  0029                     ??_ioc_rb1_add_isr_handler:	
  1694                           ; 1 bytes @ 0x9
  1695                           
  1696  0029                     ??_relay_init:	
  1697                           ; 1 bytes @ 0x9
  1698                           
  1699  0029                     ??_usart_init:	
  1700                           ; 1 bytes @ 0x9
  1701                           
  1702  0029                     ??_usart_send:	
  1703                           ; 1 bytes @ 0x9
  1704                           
  1705  0029                     ?_wait_for_msg:	
  1706                           ; 1 bytes @ 0x9
  1707                           
  1708  0029                     ?___bmul:	
  1709                           ; 1 bytes @ 0x9
  1710                           
  1711  0029                     ?__Umul8_16:	
  1712                           ; 1 bytes @ 0x9
  1713                           
  1714  0029                     ?___wmul:	
  1715                           ; 2 bytes @ 0x9
  1716                           
  1717  0029                     ?_sys_tick_get_tick:	
  1718                           ; 2 bytes @ 0x9
  1719                           
  1720  0029                     spi_transfer@data:	
  1721                           ; 4 bytes @ 0x9
  1722                           
  1723  0029                     usart_send@c:	
  1724                           ; 1 bytes @ 0x9
  1725                           
  1726  0029                     eeprom_write@value:	
  1727                           ; 1 bytes @ 0x9
  1728                           
  1729  0029                     ___bmul@multiplicand:	
  1730                           ; 1 bytes @ 0x9
  1731                           
  1732  0029                     __Umul8_16@multiplicand:	
  1733                           ; 1 bytes @ 0x9
  1734                           
  1735  0029                     wait_for_msg@cmd:	
  1736                           ; 1 bytes @ 0x9
  1737                           
  1738  0029                     ___wmul@multiplier:	
  1739                           ; 2 bytes @ 0x9
  1740                           
  1741  0029                     memset@c:	
  1742                           ; 2 bytes @ 0x9
  1743                           
  1744  0029                     ___flge@ff1:	
  1745                           ; 2 bytes @ 0x9
  1746                           
  1747                           
  1748                           ; 4 bytes @ 0x9
  1749  0029                     	ds	1
  1750  002A                     ??_eeprom_write:
  1751  002A                     ??___bmul:	
  1752                           ; 1 bytes @ 0xA
  1753                           
  1754  002A                     ?_ade_read:	
  1755                           ; 1 bytes @ 0xA
  1756                           
  1757  002A                     ade_read@bytes_to_read:	
  1758                           ; 4 bytes @ 0xA
  1759                           
  1760  002A                     usart_add_isr_handler@handler:	
  1761                           ; 1 bytes @ 0xA
  1762                           
  1763  002A                     timer1_add_isr_handler@handler:	
  1764                           ; 1 bytes @ 0xA
  1765                           
  1766  002A                     ex_int_add_isr_handler@handler:	
  1767                           ; 1 bytes @ 0xA
  1768                           
  1769  002A                     ioc_rb1_add_isr_handler@handler:	
  1770                           ; 1 bytes @ 0xA
  1771                           
  1772  002A                     xEventGroupClearBits@uxBitsToClear:	
  1773                           ; 1 bytes @ 0xA
  1774                           
  1775  002A                     eeprom_read@addr:	
  1776                           ; 1 bytes @ 0xA
  1777                           
  1778                           
  1779                           ; 1 bytes @ 0xA
  1780  002A                     	ds	1
  1781  002B                     ??_sys_tick_init:
  1782  002B                     ??_znp_init:	
  1783                           ; 1 bytes @ 0xB
  1784                           
  1785  002B                     ??_znp_hard_reset:	
  1786                           ; 1 bytes @ 0xB
  1787                           
  1788  002B                     ??__Umul8_16:	
  1789                           ; 1 bytes @ 0xB
  1790                           
  1791  002B                     ??_ade_init:	
  1792                           ; 1 bytes @ 0xB
  1793                           
  1794  002B                     ??_button_init:	
  1795                           ; 1 bytes @ 0xB
  1796                           
  1797  002B                     ??_wait_for_msg:	
  1798                           ; 1 bytes @ 0xB
  1799                           
  1800  002B                     ?_wait_for_status:	
  1801                           ; 1 bytes @ 0xB
  1802                           
  1803  002B                     ??_znp_zdo_startup_from_app:	
  1804                           ; 1 bytes @ 0xB
  1805                           
  1806  002B                     eeprom_write@addr:	
  1807                           ; 1 bytes @ 0xB
  1808                           
  1809  002B                     ___bmul@product:	
  1810                           ; 1 bytes @ 0xB
  1811                           
  1812  002B                     wait_for_status@cmd:	
  1813                           ; 1 bytes @ 0xB
  1814                           
  1815  002B                     ___wmul@multiplicand:	
  1816                           ; 2 bytes @ 0xB
  1817                           
  1818  002B                     memset@n:	
  1819                           ; 2 bytes @ 0xB
  1820                           
  1821                           
  1822                           ; 2 bytes @ 0xB
  1823  002B                     	ds	1
  1824  002C                     znp_init@callback:
  1825  002C                     ___bmul@multiplier:	
  1826                           ; 1 bytes @ 0xC
  1827                           
  1828                           
  1829                           ; 1 bytes @ 0xC
  1830  002C                     	ds	1
  1831  002D                     ?_ade_write:
  1832  002D                     ??_sys_tick_register_callback_handler:	
  1833                           ; 1 bytes @ 0xD
  1834                           
  1835  002D                     ?_sys_tick_start_periodic:	
  1836                           ; 1 bytes @ 0xD
  1837                           
  1838  002D                     ??_sys_tick_stop:	
  1839                           ; 1 bytes @ 0xD
  1840                           
  1841  002D                     ??_memset:	
  1842                           ; 1 bytes @ 0xD
  1843                           
  1844  002D                     ?_xEventGroupWaitBits:	
  1845                           ; 1 bytes @ 0xD
  1846                           
  1847  002D                     ??_sys_tick_get_tick:	
  1848                           ; 1 bytes @ 0xD
  1849                           
  1850  002D                     ??___wmul:	
  1851                           ; 1 bytes @ 0xD
  1852                           
  1853  002D                     wait_for_status@offset:	
  1854                           ; 1 bytes @ 0xD
  1855                           
  1856  002D                     ___wmul@product:	
  1857                           ; 1 bytes @ 0xD
  1858                           
  1859  002D                     __Umul8_16@product:	
  1860                           ; 2 bytes @ 0xD
  1861                           
  1862  002D                     ade_write@write_buf:	
  1863                           ; 2 bytes @ 0xD
  1864                           
  1865  002D                     xEventGroupWaitBits@ticks_to_wait:	
  1866                           ; 4 bytes @ 0xD
  1867                           
  1868  002D                     sys_tick_start_periodic@tick:	
  1869                           ; 4 bytes @ 0xD
  1870                           
  1871  002D                     ___flge@ff2:	
  1872                           ; 4 bytes @ 0xD
  1873                           
  1874                           
  1875                           ; 4 bytes @ 0xD
  1876  002D                     	ds	1
  1877  002E                     ??_ade_read:
  1878  002E                     wait_for_status@status_to_wait:	
  1879                           ; 1 bytes @ 0xE
  1880                           
  1881  002E                     memset@p1:	
  1882                           ; 1 bytes @ 0xE
  1883                           
  1884                           
  1885                           ; 1 bytes @ 0xE
  1886  002E                     	ds	1
  1887  002F                     ?_znp_af_data_request:
  1888  002F                     ??_wait_for_status:	
  1889                           ; 1 bytes @ 0xF
  1890                           
  1891  002F                     ??_znp_set_startopt:	
  1892                           ; 1 bytes @ 0xF
  1893                           
  1894  002F                     ??_znp_set_logical_type:	
  1895                           ; 1 bytes @ 0xF
  1896                           
  1897  002F                     ??_znp_set_channels:	
  1898                           ; 1 bytes @ 0xF
  1899                           
  1900  002F                     ??_znp_af_register:	
  1901                           ; 1 bytes @ 0xF
  1902                           
  1903  002F                     ?___xxtofl:	
  1904                           ; 1 bytes @ 0xF
  1905                           
  1906  002F                     znp_set_startopt@startopt:	
  1907                           ; 4 bytes @ 0xF
  1908                           
  1909  002F                     znp_set_logical_type@logical_type:	
  1910                           ; 1 bytes @ 0xF
  1911                           
  1912  002F                     znp_af_register@endpoint:	
  1913                           ; 1 bytes @ 0xF
  1914                           
  1915  002F                     sys_tick_register_callback_handler@cb:	
  1916                           ; 1 bytes @ 0xF
  1917                           
  1918  002F                     sys_tick_stop@handle:	
  1919                           ; 1 bytes @ 0xF
  1920                           
  1921  002F                     memset@p:	
  1922                           ; 1 bytes @ 0xF
  1923                           
  1924  002F                     znp_af_data_request@cluster_id:	
  1925                           ; 1 bytes @ 0xF
  1926                           
  1927  002F                     __Umul8_16@word_mpld:	
  1928                           ; 2 bytes @ 0xF
  1929                           
  1930  002F                     ___xxtofl@val:	
  1931                           ; 2 bytes @ 0xF
  1932                           
  1933                           
  1934                           ; 4 bytes @ 0xF
  1935  002F                     	ds	1
  1936  0030                     ??_znp_router_start:
  1937  0030                     sys_tick_register_callback_handler@_handler_index:	
  1938                           ; 1 bytes @ 0x10
  1939                           
  1940  0030                     sys_tick_stop@i:	
  1941                           ; 1 bytes @ 0x10
  1942                           
  1943                           
  1944                           ; 1 bytes @ 0x10
  1945  0030                     	ds	1
  1946  0031                     ??_sys_tick_start_periodic:
  1947  0031                     ??_xEventGroupWaitBits:	
  1948                           ; 1 bytes @ 0x11
  1949                           
  1950  0031                     ??_led_ind_init:	
  1951                           ; 1 bytes @ 0x11
  1952                           
  1953  0031                     ??_led_ind_blink_stop:	
  1954                           ; 1 bytes @ 0x11
  1955                           
  1956  0031                     ??___flge:	
  1957                           ; 1 bytes @ 0x11
  1958                           
  1959  0031                     ade_write@bytes_to_write:	
  1960                           ; 1 bytes @ 0x11
  1961                           
  1962  0031                     znp_af_data_request@data:	
  1963                           ; 1 bytes @ 0x11
  1964                           
  1965  0031                     __Umul8_16@multiplier:	
  1966                           ; 1 bytes @ 0x11
  1967                           
  1968                           
  1969                           ; 1 bytes @ 0x11
  1970  0031                     	ds	1
  1971  0032                     ??_ade_write:
  1972  0032                     ade_read@addr:	
  1973                           ; 1 bytes @ 0x12
  1974                           
  1975  0032                     znp_af_data_request@len:	
  1976                           ; 1 bytes @ 0x12
  1977                           
  1978  0032                     znp_router_start@start_opt:	
  1979                           ; 1 bytes @ 0x12
  1980                           
  1981                           
  1982                           ; 1 bytes @ 0x12
  1983  0032                     	ds	1
  1984  0033                     ??___xxtofl:
  1985  0033                     znp_af_data_request@wait_for_rsps:	
  1986                           ; 1 bytes @ 0x13
  1987                           
  1988  0033                     sys_tick_start_periodic@handle:	
  1989                           ; 1 bytes @ 0x13
  1990                           
  1991  0033                     ade_read@data:	
  1992                           ; 1 bytes @ 0x13
  1993                           
  1994                           
  1995                           ; 4 bytes @ 0x13
  1996  0033                     	ds	1
  1997  0034                     ??_znp_af_data_request:
  1998  0034                     sys_tick_start_periodic@i:	
  1999                           ; 1 bytes @ 0x14
  2000                           
  2001                           
  2002                           ; 1 bytes @ 0x14
  2003  0034                     	ds	1
  2004  0035                     ??_led_ind_blink_start:
  2005  0035                     xEventGroupWaitBits@last_tick:	
  2006                           ; 1 bytes @ 0x15
  2007                           
  2008                           
  2009                           ; 4 bytes @ 0x15
  2010  0035                     	ds	1
  2011  0036                     znp_af_data_request@endpoint:
  2012                           
  2013                           ; 1 bytes @ 0x16
  2014  0036                     	ds	1
  2015  0037                     ade_read@i:
  2016  0037                     znp_af_data_request@i:	
  2017                           ; 1 bytes @ 0x17
  2018                           
  2019  0037                     ___xxtofl@sign:	
  2020                           ; 1 bytes @ 0x17
  2021                           
  2022                           
  2023                           ; 1 bytes @ 0x17
  2024  0037                     	ds	1
  2025  0038                     ?_ade_signed_value:
  2026  0038                     ?_ade_get_PERIOD:	
  2027                           ; 2 bytes @ 0x18
  2028                           
  2029  0038                     ?_ade_get_IRMS:	
  2030                           ; 2 bytes @ 0x18
  2031                           
  2032  0038                     ?_ade_get_VRMS:	
  2033                           ; 3 bytes @ 0x18
  2034                           
  2035  0038                     znp_af_data_request@i_1601:	
  2036                           ; 3 bytes @ 0x18
  2037                           
  2038  0038                     ___xxtofl@exp:	
  2039                           ; 1 bytes @ 0x18
  2040                           
  2041  0038                     ade_signed_value@value:	
  2042                           ; 1 bytes @ 0x18
  2043                           
  2044                           
  2045                           ; 4 bytes @ 0x18
  2046  0038                     	ds	1
  2047  0039                     ade_write@addr:
  2048  0039                     znp_af_data_request@fcs_calc:	
  2049                           ; 1 bytes @ 0x19
  2050                           
  2051  0039                     xEventGroupWaitBits@uxBitsToWaitFor:	
  2052                           ; 1 bytes @ 0x19
  2053                           
  2054  0039                     ___xxtofl@arg:	
  2055                           ; 1 bytes @ 0x19
  2056                           
  2057                           
  2058                           ; 4 bytes @ 0x19
  2059  0039                     	ds	1
  2060  003A                     ??_ade_get_PERIOD:
  2061  003A                     ?_znp_send_msg:	
  2062                           ; 1 bytes @ 0x1A
  2063                           
  2064  003A                     ade_write@data:	
  2065                           ; 1 bytes @ 0x1A
  2066                           
  2067  003A                     znp_send_msg@wait_for_rsps:	
  2068                           ; 1 bytes @ 0x1A
  2069                           
  2070                           
  2071                           ; 1 bytes @ 0x1A
  2072  003A                     	ds	1
  2073  003B                     ??_ade_get_IRMS:
  2074  003B                     ??_ade_get_VRMS:	
  2075                           ; 1 bytes @ 0x1B
  2076                           
  2077  003B                     ??_znp_send_msg:	
  2078                           ; 1 bytes @ 0x1B
  2079                           
  2080  003B                     ade_write@i:	
  2081                           ; 1 bytes @ 0x1B
  2082                           
  2083                           
  2084                           ; 1 bytes @ 0x1B
  2085  003B                     	ds	1
  2086  003C                     ??_ade_set_GAIN:
  2087  003C                     ?_ade_set_LINECYC:	
  2088                           ; 1 bytes @ 0x1C
  2089                           
  2090  003C                     ade_signed_value@bits:	
  2091                           ; 1 bytes @ 0x1C
  2092                           
  2093  003C                     ade_set_LINECYC@linecyc:	
  2094                           ; 1 bytes @ 0x1C
  2095                           
  2096                           
  2097                           ; 2 bytes @ 0x1C
  2098  003C                     	ds	1
  2099  003D                     ??_ade_signed_value:
  2100  003D                     ?___flmul:	
  2101                           ; 1 bytes @ 0x1D
  2102                           
  2103  003D                     ___flmul@b:	
  2104                           ; 4 bytes @ 0x1D
  2105                           
  2106                           
  2107                           ; 4 bytes @ 0x1D
  2108  003D                     	ds	1
  2109  003E                     ??_ade_set_LINECYC:
  2110  003E                     znp_send_msg@data:	
  2111                           ; 1 bytes @ 0x1E
  2112                           
  2113                           
  2114                           ; 1 bytes @ 0x1E
  2115  003E                     	ds	1
  2116  003F                     znp_send_msg@len:
  2117                           
  2118                           ; 1 bytes @ 0x1F
  2119  003F                     	ds	1
  2120  0040                     ade_set_GAIN@gain_config:
  2121  0040                     znp_send_msg@endpoint:	
  2122                           ; 1 bytes @ 0x20
  2123                           
  2124                           
  2125                           ; 1 bytes @ 0x20
  2126  0040                     	ds	1
  2127  0041                     ??_ade_config:
  2128  0041                     ___flmul@a:	
  2129                           ; 1 bytes @ 0x21
  2130                           
  2131                           
  2132                           ; 4 bytes @ 0x21
  2133  0041                     	ds	4
  2134  0045                     ??___flmul:
  2135  0045                     ade_config@config:	
  2136                           ; 1 bytes @ 0x25
  2137                           
  2138                           
  2139                           ; 1 bytes @ 0x25
  2140  0045                     	ds	3
  2141  0048                     ade_signed_value@i:
  2142                           
  2143                           ; 1 bytes @ 0x28
  2144  0048                     	ds	1
  2145  0049                     ?_ade_get_LAENERGY:
  2146                           
  2147                           ; 2 bytes @ 0x29
  2148  0049                     	ds	1
  2149  004A                     ___flmul@sign:
  2150                           
  2151                           ; 1 bytes @ 0x2A
  2152  004A                     	ds	1
  2153  004B                     ??_ade_get_LAENERGY:
  2154  004B                     ___flmul@aexp:	
  2155                           ; 1 bytes @ 0x2B
  2156                           
  2157                           
  2158                           ; 1 bytes @ 0x2B
  2159  004B                     	ds	1
  2160  004C                     ___flmul@bexp:
  2161                           
  2162                           ; 1 bytes @ 0x2C
  2163  004C                     	ds	1
  2164  004D                     ___flmul@grs:
  2165                           
  2166                           ; 4 bytes @ 0x2D
  2167  004D                     	ds	4
  2168  0051                     ___flmul@prod:
  2169                           
  2170                           ; 4 bytes @ 0x31
  2171  0051                     	ds	4
  2172  0055                     ___flmul@temp:
  2173                           
  2174                           ; 2 bytes @ 0x35
  2175  0055                     	ds	2
  2176  0057                     ___fladd@signs:
  2177                           
  2178                           ; 1 bytes @ 0x37
  2179  0057                     	ds	1
  2180  0058                     ___fladd@aexp:
  2181                           
  2182                           ; 1 bytes @ 0x38
  2183  0058                     	ds	1
  2184  0059                     ___fladd@bexp:
  2185                           
  2186                           ; 1 bytes @ 0x39
  2187  0059                     	ds	1
  2188  005A                     ___fladd@grs:
  2189                           
  2190                           ; 1 bytes @ 0x3A
  2191  005A                     	ds	1
  2192  005B                     ??_ade_get_power_meter_data:
  2193                           
  2194                           	psect	maintext
  2195  0B70                     __pmaintext:	
  2196                           ; 1 bytes @ 0x3B
  2197 ;;
  2198 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2199 ;;
  2200 ;; *************** function _main *****************
  2201 ;; Defined at:
  2202 ;;		line 103 in file "main.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  ade_data_tic    4    8[BANK3 ] unsigned long 
  2207 ;;  keepalive_ti    4    4[BANK3 ] unsigned long 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : B00/0
  2214 ;;		On exit  : 300/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2217 ;;      Params:         0       0       0       0       0
  2218 ;;      Locals:         0       0       0       8       0
  2219 ;;      Temps:          0       0       0       4       0
  2220 ;;      Totals:         0       0       0      12       0
  2221 ;;Total ram usage:       12 bytes
  2222 ;; Hardware stack levels required when called: 9
  2223 ;; This function calls:
  2224 ;;		_ade_config
  2225 ;;		_ade_get_power_meter_data
  2226 ;;		_ade_init
  2227 ;;		_button_init
  2228 ;;		_eeprom_read
  2229 ;;		_eeprom_write
  2230 ;;		_led_ind_blink_start
  2231 ;;		_led_ind_blink_stop
  2232 ;;		_led_ind_init
  2233 ;;		_led_ind_off
  2234 ;;		_led_ind_on
  2235 ;;		_memset
  2236 ;;		_relay_init
  2237 ;;		_sys_tick_get_tick
  2238 ;;		_sys_tick_init
  2239 ;;		_xEventGroupClearBits
  2240 ;;		_xEventGroupCreate
  2241 ;;		_xEventGroupGetBits
  2242 ;;		_xEventGroupWaitBits
  2243 ;;		_znp_init
  2244 ;;		_znp_router_start
  2245 ;;		_znp_send_msg
  2246 ;; This function is called by:
  2247 ;;		Startup code after reset
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251  0B70                     _main:	
  2252                           ;psect for function _main
  2253                           
  2254                           
  2255                           ;main.c: 104:     OSCCONbits.IRCF = 0b111;
  2256                           
  2257                           ;incstack = 0
  2258 ;; hardware stack exceeded
  2259                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2260  0B70  3070               	movlw	112
  2261  0B71  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0B72  048F               	iorwf	15,f	;volatile
  2263                           
  2264                           ;main.c: 105:     ANSEL = ANSELH = 0;
  2265  0B73  1703               	bsf	3,6	;RP1=1, select bank3
  2266  0B74  0189               	clrf	9	;volatile
  2267  0B75  0188               	clrf	8	;volatile
  2268                           
  2269                           ;main.c: 106:     ADCON1 = 0;
  2270  0B76  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0B77  019F               	clrf	31	;volatile
  2272                           
  2273                           ;main.c: 107:     INTCONbits.GIE = 1;
  2274  0B78  178B               	bsf	11,7	;volatile
  2275                           
  2276                           ;main.c: 108:     INTCONbits.PEIE = 1;
  2277  0B79  170B               	bsf	11,6	;volatile
  2278                           
  2279                           ;main.c: 110:     memset(dev_data.raw, 0, sizeof (dev_data.raw));
  2280  0B7A  3000               	movlw	0
  2281  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0B7C  00A9               	movwf	memset@c
  2283  0B7D  00AA               	movwf	memset@c+1
  2284  0B7E  300D               	movlw	13
  2285  0B7F  00AB               	movwf	memset@n
  2286  0B80  3000               	movlw	0
  2287  0B81  00AC               	movwf	memset@n+1
  2288  0B82  30BF               	movlw	(low (_dev_data| (0+256)))& (0+255)
  2289  0B83  160A  118A  213B  120A  158A  	fcall	_memset
  2290                           
  2291                           ;main.c: 111:     OPTION_REGbits.nRBPU = 0;
  2292  0B88  1683               	bsf	3,5	;RP0=1, select bank1
  2293  0B89  1381               	bcf	1,7	;volatile
  2294                           
  2295                           ;main.c: 113:     if (!PORTBbits.RB7) eeprom_write(0, 0x00);
  2296  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0B8B  1B86               	btfsc	6,7	;volatile
  2298  0B8C  2B94               	goto	l5432
  2299  0B8D  01A9               	clrf	eeprom_write@value
  2300  0B8E  3000               	movlw	0
  2301  0B8F  160A  118A  21F7  120A  158A  	fcall	_eeprom_write
  2302  0B94                     l5432:
  2303                           
  2304                           ;main.c: 115:     sys_tick_init();
  2305  0B94  160A  118A  2194  120A  158A  	fcall	_sys_tick_init
  2306                           
  2307                           ;main.c: 116:     xEventGroupCreate();
  2308  0B99  160A  158A  2711  120A  158A  	fcall	_xEventGroupCreate
  2309                           
  2310                           ;main.c: 117:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2311  0B9E  3002               	movlw	2
  2312  0B9F  1683               	bsf	3,5	;RP0=1, select bank3
  2313  0BA0  1703               	bsf	3,6	;RP1=1, select bank3
  2314  0BA1  00DE               	movwf	(??_main^(0+384)+2)
  2315  0BA2  3004               	movlw	4
  2316  0BA3  00DD               	movwf	(??_main^(0+384)+1)
  2317  0BA4  30B9               	movlw	185
  2318  0BA5  00DC               	movwf	??_main^(0+384)
  2319  0BA6                     u6587:
  2320  0BA6  0BDC               	decfsz	??_main^(0+384),f
  2321  0BA7  2BA6               	goto	u6587
  2322  0BA8  0BDD               	decfsz	(??_main^(0+384)+1),f
  2323  0BA9  2BA6               	goto	u6587
  2324  0BAA  0BDE               	decfsz	(??_main^(0+384)+2),f
  2325  0BAB  2BA6               	goto	u6587
  2326  0BAC  2BAD               	nop2
  2327                           
  2328                           ;main.c: 119:     led_ind_init();
  2329  0BAD  160A  158A  27F0  120A  158A  	fcall	_led_ind_init
  2330                           
  2331                           ;main.c: 120:     relay_init();
  2332  0BB2  160A  158A  272A  120A  158A  	fcall	_relay_init
  2333                           
  2334                           ;main.c: 121:     button_init();
  2335  0BB7  160A  158A  2725  120A  158A  	fcall	_button_init
  2336                           
  2337                           ;main.c: 123:     ade_init();
  2338  0BBC  160A  118A  2040  120A  158A  	fcall	_ade_init
  2339                           
  2340                           ;main.c: 124:     ade_cfg.is_reversed = 1;
  2341  0BC1  1683               	bsf	3,5	;RP0=1, select bank3
  2342  0BC2  1703               	bsf	3,6	;RP1=1, select bank3
  2343  0BC3  01DA               	clrf	(_ade_cfg^(0+384)+13)
  2344  0BC4  0ADA               	incf	(_ade_cfg^(0+384)+13),f
  2345                           
  2346                           ;main.c: 125:     ade_cfg.mode.CYCMODE = 1;
  2347  0BC5  17CE               	bsf	(_ade_cfg^(0+384)+1),7
  2348                           
  2349                           ;main.c: 126:     ade_cfg.zx_cb = ade_zx_cb_handler;
  2350  0BC6  3001               	movlw	(low (fp__ade_zx_cb_handler-i1fpbase))& (0+255)
  2351  0BC7  00DC               	movwf	??_main^(0+384)
  2352  0BC8  085C               	movf	??_main^(0+384),w
  2353  0BC9  00DB               	movwf	(low ((_ade_cfg| (0+256)+14)))^(0+128)
  2354                           
  2355                           ;main.c: 127:     ade_config(&ade_cfg);
  2356  0BCA  30CD               	movlw	(low (_ade_cfg| (0+256)))& (0+255)
  2357  0BCB  120A  158A  2293  120A  158A  	fcall	_ade_config
  2358                           
  2359                           ;main.c: 129:     led_ind_blink_start();
  2360  0BD0  160A  158A  2787  120A  158A  	fcall	_led_ind_blink_start
  2361                           
  2362                           ;main.c: 130:     znp_init(znp_msg_handler);
  2363  0BD5  3010               	movlw	(low (fp__znp_msg_handler-i1fpbase))& (0+255)
  2364  0BD6  160A  118A  20C1  120A  158A  	fcall	_znp_init
  2365  0BDB                     l5456:
  2366                           
  2367                           ;main.c: 132:         if (eeprom_read(0) == 0xFE)
  2368  0BDB  3000               	movlw	0
  2369  0BDC  160A  118A  2106  120A  158A  	fcall	_eeprom_read
  2370  0BE1  3AFE               	xorlw	254
  2371  0BE2  1D03               	skipz
  2372  0BE3  2BE6               	goto	l5460
  2373                           
  2374                           ;main.c: 133:             znp_router_start(ROUTER_START_REJOIN);
  2375  0BE4  3001               	movlw	1
  2376  0BE5  2BE7               	goto	L1
  2377  0BE6                     l5460:
  2378  0BE6  3000               	movlw	0
  2379  0BE7                     L1:
  2380  0BE7  160A  118A  2370  120A  158A  	fcall	_znp_router_start
  2381                           
  2382                           ;main.c: 136:         uxBits = xEventGroupWaitBits((1 << 0), 100);
  2383  0BEC  3000               	movlw	0
  2384  0BED  00B0               	movwf	xEventGroupWaitBits@ticks_to_wait+3
  2385  0BEE  3000               	movlw	0
  2386  0BEF  00AF               	movwf	xEventGroupWaitBits@ticks_to_wait+2
  2387  0BF0  3000               	movlw	0
  2388  0BF1  00AE               	movwf	xEventGroupWaitBits@ticks_to_wait+1
  2389  0BF2  3064               	movlw	100
  2390  0BF3  00AD               	movwf	xEventGroupWaitBits@ticks_to_wait
  2391  0BF4  3001               	movlw	1
  2392  0BF5  120A  158A  200A  120A  158A  	fcall	_xEventGroupWaitBits
  2393  0BFA  1683               	bsf	3,5	;RP0=1, select bank3
  2394  0BFB  1703               	bsf	3,6	;RP1=1, select bank3
  2395  0BFC  00DC               	movwf	??_main^(0+384)
  2396  0BFD  085C               	movf	??_main^(0+384),w
  2397  0BFE  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0BFF  00E7               	movwf	_uxBits^(0+128)
  2399                           
  2400                           ;main.c: 137:     } while (!(uxBits & (1 << 0)));
  2401  0C00  1C67               	btfss	_uxBits^(0+128),0
  2402  0C01  2BDB               	goto	l5456
  2403                           
  2404                           ;main.c: 139:     eeprom_write(0, 0xFE);
  2405  0C02  30FE               	movlw	254
  2406  0C03  1703               	bsf	3,6	;RP1=1, select bank3
  2407  0C04  00DC               	movwf	??_main^(0+384)
  2408  0C05  085C               	movf	??_main^(0+384),w
  2409  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0C08  00A9               	movwf	eeprom_write@value
  2412  0C09  3000               	movlw	0
  2413  0C0A  160A  118A  21F7  120A  158A  	fcall	_eeprom_write
  2414                           
  2415                           ;main.c: 140:     znp_send_msg(0x01, 1);
  2416  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0C10  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0C11  01BA               	clrf	znp_send_msg@wait_for_rsps
  2419  0C12  0ABA               	incf	znp_send_msg@wait_for_rsps,f
  2420  0C13  3001               	movlw	1
  2421  0C14  160A  118A  2247  120A  158A  	fcall	_znp_send_msg
  2422                           
  2423                           ;main.c: 141:     led_ind_blink_stop();
  2424  0C19  160A  158A  2759  120A  158A  	fcall	_led_ind_blink_stop
  2425                           
  2426                           ;main.c: 143:     sys_tick_t keepalive_tick, ade_data_tick;;main.c: 144:     keepalive_t
      +                          ick = ade_data_tick = sys_tick_get_tick();
  2427  0C1E  160A  118A  2073  120A  158A  	fcall	_sys_tick_get_tick
  2428  0C23  082C               	movf	?_sys_tick_get_tick+3,w
  2429  0C24  1683               	bsf	3,5	;RP0=1, select bank3
  2430  0C25  1703               	bsf	3,6	;RP1=1, select bank3
  2431  0C26  00E7               	movwf	(main@ade_data_tick+3)^(0+384)
  2432  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0C29  082B               	movf	?_sys_tick_get_tick+2,w
  2435  0C2A  1683               	bsf	3,5	;RP0=1, select bank3
  2436  0C2B  1703               	bsf	3,6	;RP1=1, select bank3
  2437  0C2C  00E6               	movwf	(main@ade_data_tick+2)^(0+384)
  2438  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0C2F  082A               	movf	?_sys_tick_get_tick+1,w
  2441  0C30  1683               	bsf	3,5	;RP0=1, select bank3
  2442  0C31  1703               	bsf	3,6	;RP1=1, select bank3
  2443  0C32  00E5               	movwf	(main@ade_data_tick+1)^(0+384)
  2444  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0C35  0829               	movf	?_sys_tick_get_tick,w
  2447  0C36  1683               	bsf	3,5	;RP0=1, select bank3
  2448  0C37  1703               	bsf	3,6	;RP1=1, select bank3
  2449  0C38  00E4               	movwf	main@ade_data_tick^(0+384)
  2450  0C39  0867               	movf	(main@ade_data_tick+3)^(0+384),w
  2451  0C3A  00E3               	movwf	(main@keepalive_tick+3)^(0+384)
  2452  0C3B  0866               	movf	(main@ade_data_tick+2)^(0+384),w
  2453  0C3C  00E2               	movwf	(main@keepalive_tick+2)^(0+384)
  2454  0C3D  0865               	movf	(main@ade_data_tick+1)^(0+384),w
  2455  0C3E  00E1               	movwf	(main@keepalive_tick+1)^(0+384)
  2456  0C3F  0864               	movf	main@ade_data_tick^(0+384),w
  2457  0C40  00E0               	movwf	main@keepalive_tick^(0+384)
  2458  0C41                     l5472:
  2459                           
  2460                           ;main.c: 147:         uxBits = xEventGroupGetBits();
  2461  0C41  160A  158A  271C  120A  158A  	fcall	_xEventGroupGetBits
  2462  0C46  1703               	bsf	3,6	;RP1=1, select bank3
  2463  0C47  00DC               	movwf	??_main^(0+384)
  2464  0C48  085C               	movf	??_main^(0+384),w
  2465  0C49  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0C4A  00E7               	movwf	_uxBits^(0+128)
  2467                           
  2468                           ;main.c: 149:         if (sys_tick_get_tick() - ade_data_tick >= 20) {
  2469  0C4B  160A  118A  2073  120A  158A  	fcall	_sys_tick_get_tick
  2470  0C50  0829               	movf	?_sys_tick_get_tick,w
  2471  0C51  1683               	bsf	3,5	;RP0=1, select bank3
  2472  0C52  1703               	bsf	3,6	;RP1=1, select bank3
  2473  0C53  00DC               	movwf	??_main^(0+384)
  2474  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0C56  082A               	movf	?_sys_tick_get_tick+1,w
  2477  0C57  1683               	bsf	3,5	;RP0=1, select bank3
  2478  0C58  1703               	bsf	3,6	;RP1=1, select bank3
  2479  0C59  00DD               	movwf	(??_main^(0+384)+1)
  2480  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0C5C  082B               	movf	?_sys_tick_get_tick+2,w
  2483  0C5D  1683               	bsf	3,5	;RP0=1, select bank3
  2484  0C5E  1703               	bsf	3,6	;RP1=1, select bank3
  2485  0C5F  00DE               	movwf	(??_main^(0+384)+2)
  2486  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0C62  082C               	movf	?_sys_tick_get_tick+3,w
  2489  0C63  1683               	bsf	3,5	;RP0=1, select bank3
  2490  0C64  1703               	bsf	3,6	;RP1=1, select bank3
  2491  0C65  00DF               	movwf	(??_main^(0+384)+3)
  2492  0C66  0864               	movf	main@ade_data_tick^(0+384),w
  2493  0C67  02DC               	subwf	??_main^(0+384),f
  2494  0C68  0865               	movf	(main@ade_data_tick+1)^(0+384),w
  2495  0C69  1C03               	skipc
  2496  0C6A  0F65               	incfsz	(main@ade_data_tick+1)^(0+384),w
  2497  0C6B  2C6D               	goto	u6531
  2498  0C6C  2C6E               	goto	u6532
  2499  0C6D                     u6531:
  2500  0C6D  02DD               	subwf	(??_main^(0+384)+1),f
  2501  0C6E                     u6532:
  2502  0C6E  0866               	movf	(main@ade_data_tick+2)^(0+384),w
  2503  0C6F  1C03               	skipc
  2504  0C70  0F66               	incfsz	(main@ade_data_tick+2)^(0+384),w
  2505  0C71  2C73               	goto	u6533
  2506  0C72  2C74               	goto	u6534
  2507  0C73                     u6533:
  2508  0C73  02DE               	subwf	(??_main^(0+384)+2),f
  2509  0C74                     u6534:
  2510  0C74  0867               	movf	(main@ade_data_tick+3)^(0+384),w
  2511  0C75  1C03               	skipc
  2512  0C76  0F67               	incfsz	(main@ade_data_tick+3)^(0+384),w
  2513  0C77  2C79               	goto	u6535
  2514  0C78  2C7A               	goto	u6536
  2515  0C79                     u6535:
  2516  0C79  02DF               	subwf	(??_main^(0+384)+3),f
  2517  0C7A                     u6536:
  2518  0C7A  085F               	movf	(??_main^(0+384)+3),w
  2519  0C7B  1D03               	btfss	3,2
  2520  0C7C  2C89               	goto	l5476
  2521  0C7D  085E               	movf	(??_main^(0+384)+2),w
  2522  0C7E  1D03               	btfss	3,2
  2523  0C7F  2C89               	goto	l5476
  2524  0C80  085D               	movf	(??_main^(0+384)+1),w
  2525  0C81  1D03               	btfss	3,2
  2526  0C82  2C89               	goto	l5476
  2527  0C83  3014               	movlw	20
  2528  0C84  025C               	subwf	??_main^(0+384),w
  2529  0C85  1D03               	skipz
  2530  0C86  2C87               	goto	u6543
  2531  0C87                     u6543:
  2532  0C87  1C03               	btfss	3,0
  2533  0C88  2CD1               	goto	l5488
  2534  0C89                     l5476:
  2535                           
  2536                           ;main.c: 150:             ade_data_tick = sys_tick_get_tick();
  2537  0C89  160A  118A  2073  120A  158A  	fcall	_sys_tick_get_tick
  2538  0C8E  082C               	movf	?_sys_tick_get_tick+3,w
  2539  0C8F  1683               	bsf	3,5	;RP0=1, select bank3
  2540  0C90  1703               	bsf	3,6	;RP1=1, select bank3
  2541  0C91  00E7               	movwf	(main@ade_data_tick+3)^(0+384)
  2542  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0C94  082B               	movf	?_sys_tick_get_tick+2,w
  2545  0C95  1683               	bsf	3,5	;RP0=1, select bank3
  2546  0C96  1703               	bsf	3,6	;RP1=1, select bank3
  2547  0C97  00E6               	movwf	(main@ade_data_tick+2)^(0+384)
  2548  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0C9A  082A               	movf	?_sys_tick_get_tick+1,w
  2551  0C9B  1683               	bsf	3,5	;RP0=1, select bank3
  2552  0C9C  1703               	bsf	3,6	;RP1=1, select bank3
  2553  0C9D  00E5               	movwf	(main@ade_data_tick+1)^(0+384)
  2554  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0CA0  0829               	movf	?_sys_tick_get_tick,w
  2557  0CA1  1683               	bsf	3,5	;RP0=1, select bank3
  2558  0CA2  1703               	bsf	3,6	;RP1=1, select bank3
  2559  0CA3  00E4               	movwf	main@ade_data_tick^(0+384)
  2560                           
  2561                           ;main.c: 151:             xEventGroupClearBits((1 << 1));
  2562  0CA4  3002               	movlw	2
  2563  0CA5  160A  118A  2000  120A  158A  	fcall	_xEventGroupClearBits
  2564                           
  2565                           ;main.c: 152:             xEventGroupWaitBits((1 << 1), 2);
  2566  0CAA  3000               	movlw	0
  2567  0CAB  00B0               	movwf	xEventGroupWaitBits@ticks_to_wait+3
  2568  0CAC  3000               	movlw	0
  2569  0CAD  00AF               	movwf	xEventGroupWaitBits@ticks_to_wait+2
  2570  0CAE  3000               	movlw	0
  2571  0CAF  00AE               	movwf	xEventGroupWaitBits@ticks_to_wait+1
  2572  0CB0  3002               	movlw	2
  2573  0CB1  00AD               	movwf	xEventGroupWaitBits@ticks_to_wait
  2574  0CB2  3002               	movlw	2
  2575  0CB3  120A  158A  200A  120A  158A  	fcall	_xEventGroupWaitBits
  2576                           
  2577                           ;main.c: 153:             xEventGroupClearBits((1 << 1));
  2578  0CB8  3002               	movlw	2
  2579  0CB9  160A  118A  2000  120A  158A  	fcall	_xEventGroupClearBits
  2580                           
  2581                           ;main.c: 154:             ade_get_power_meter_data(&dev_data.meter_data);
  2582  0CBE  30BF               	movlw	(low (_dev_data| (0+256)))& (0+255)
  2583  0CBF  120A  118A  2356  120A  158A  	fcall	_ade_get_power_meter_data
  2584                           
  2585                           ;main.c: 155:             ade_config(&ade_cfg);
  2586  0CC4  30CD               	movlw	(low (_ade_cfg| (0+256)))& (0+255)
  2587  0CC5  120A  158A  2293  120A  158A  	fcall	_ade_config
  2588                           
  2589                           ;main.c: 156:             znp_send_msg(0x02, 0);
  2590  0CCA  01BA               	clrf	znp_send_msg@wait_for_rsps
  2591  0CCB  3002               	movlw	2
  2592  0CCC  160A  118A  2247  120A  158A  	fcall	_znp_send_msg
  2593  0CD1                     l5488:
  2594                           
  2595                           ;main.c: 159:         if (sys_tick_get_tick() - keepalive_tick >= 20) {
  2596  0CD1  160A  118A  2073  120A  158A  	fcall	_sys_tick_get_tick
  2597  0CD6  0829               	movf	?_sys_tick_get_tick,w
  2598  0CD7  1683               	bsf	3,5	;RP0=1, select bank3
  2599  0CD8  1703               	bsf	3,6	;RP1=1, select bank3
  2600  0CD9  00DC               	movwf	??_main^(0+384)
  2601  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0CDC  082A               	movf	?_sys_tick_get_tick+1,w
  2604  0CDD  1683               	bsf	3,5	;RP0=1, select bank3
  2605  0CDE  1703               	bsf	3,6	;RP1=1, select bank3
  2606  0CDF  00DD               	movwf	(??_main^(0+384)+1)
  2607  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0CE2  082B               	movf	?_sys_tick_get_tick+2,w
  2610  0CE3  1683               	bsf	3,5	;RP0=1, select bank3
  2611  0CE4  1703               	bsf	3,6	;RP1=1, select bank3
  2612  0CE5  00DE               	movwf	(??_main^(0+384)+2)
  2613  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0CE8  082C               	movf	?_sys_tick_get_tick+3,w
  2616  0CE9  1683               	bsf	3,5	;RP0=1, select bank3
  2617  0CEA  1703               	bsf	3,6	;RP1=1, select bank3
  2618  0CEB  00DF               	movwf	(??_main^(0+384)+3)
  2619  0CEC  0860               	movf	main@keepalive_tick^(0+384),w
  2620  0CED  02DC               	subwf	??_main^(0+384),f
  2621  0CEE  0861               	movf	(main@keepalive_tick+1)^(0+384),w
  2622  0CEF  1C03               	skipc
  2623  0CF0  0F61               	incfsz	(main@keepalive_tick+1)^(0+384),w
  2624  0CF1  2CF3               	goto	u6551
  2625  0CF2  2CF4               	goto	u6552
  2626  0CF3                     u6551:
  2627  0CF3  02DD               	subwf	(??_main^(0+384)+1),f
  2628  0CF4                     u6552:
  2629  0CF4  0862               	movf	(main@keepalive_tick+2)^(0+384),w
  2630  0CF5  1C03               	skipc
  2631  0CF6  0F62               	incfsz	(main@keepalive_tick+2)^(0+384),w
  2632  0CF7  2CF9               	goto	u6553
  2633  0CF8  2CFA               	goto	u6554
  2634  0CF9                     u6553:
  2635  0CF9  02DE               	subwf	(??_main^(0+384)+2),f
  2636  0CFA                     u6554:
  2637  0CFA  0863               	movf	(main@keepalive_tick+3)^(0+384),w
  2638  0CFB  1C03               	skipc
  2639  0CFC  0F63               	incfsz	(main@keepalive_tick+3)^(0+384),w
  2640  0CFD  2CFF               	goto	u6555
  2641  0CFE  2D00               	goto	u6556
  2642  0CFF                     u6555:
  2643  0CFF  02DF               	subwf	(??_main^(0+384)+3),f
  2644  0D00                     u6556:
  2645  0D00  085F               	movf	(??_main^(0+384)+3),w
  2646  0D01  1D03               	btfss	3,2
  2647  0D02  2D0F               	goto	l5490
  2648  0D03  085E               	movf	(??_main^(0+384)+2),w
  2649  0D04  1D03               	btfss	3,2
  2650  0D05  2D0F               	goto	l5490
  2651  0D06  085D               	movf	(??_main^(0+384)+1),w
  2652  0D07  1D03               	btfss	3,2
  2653  0D08  2D0F               	goto	l5490
  2654  0D09  3014               	movlw	20
  2655  0D0A  025C               	subwf	??_main^(0+384),w
  2656  0D0B  1D03               	skipz
  2657  0D0C  2D0D               	goto	u6563
  2658  0D0D                     u6563:
  2659  0D0D  1C03               	btfss	3,0
  2660  0D0E  2D48               	goto	l5498
  2661  0D0F                     l5490:
  2662                           
  2663                           ;main.c: 160:             keepalive_tick = sys_tick_get_tick();
  2664  0D0F  160A  118A  2073  120A  158A  	fcall	_sys_tick_get_tick
  2665  0D14  082C               	movf	?_sys_tick_get_tick+3,w
  2666  0D15  1683               	bsf	3,5	;RP0=1, select bank3
  2667  0D16  1703               	bsf	3,6	;RP1=1, select bank3
  2668  0D17  00E3               	movwf	(main@keepalive_tick+3)^(0+384)
  2669  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0D1A  082B               	movf	?_sys_tick_get_tick+2,w
  2672  0D1B  1683               	bsf	3,5	;RP0=1, select bank3
  2673  0D1C  1703               	bsf	3,6	;RP1=1, select bank3
  2674  0D1D  00E2               	movwf	(main@keepalive_tick+2)^(0+384)
  2675  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0D20  082A               	movf	?_sys_tick_get_tick+1,w
  2678  0D21  1683               	bsf	3,5	;RP0=1, select bank3
  2679  0D22  1703               	bsf	3,6	;RP1=1, select bank3
  2680  0D23  00E1               	movwf	(main@keepalive_tick+1)^(0+384)
  2681  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0D26  0829               	movf	?_sys_tick_get_tick,w
  2684  0D27  1683               	bsf	3,5	;RP0=1, select bank3
  2685  0D28  1703               	bsf	3,6	;RP1=1, select bank3
  2686  0D29  00E0               	movwf	main@keepalive_tick^(0+384)
  2687                           
  2688                           ;main.c: 161:             znp_send_msg(0x04, 0);
  2689  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0D2C  01BA               	clrf	znp_send_msg@wait_for_rsps
  2692  0D2D  3004               	movlw	4
  2693  0D2E  160A  118A  2247  120A  158A  	fcall	_znp_send_msg
  2694                           
  2695                           ;main.c: 162:             led_ind_on();
  2696  0D33  160A  158A  270F  120A  158A  	fcall	_led_ind_on
  2697                           
  2698                           ;main.c: 163:             _delay((unsigned long)((10)*(8000000/4000.0)));
  2699  0D38  301A               	movlw	26
  2700  0D39  1683               	bsf	3,5	;RP0=1, select bank3
  2701  0D3A  1703               	bsf	3,6	;RP1=1, select bank3
  2702  0D3B  00DD               	movwf	(??_main^(0+384)+1)
  2703  0D3C  30F7               	movlw	247
  2704  0D3D  00DC               	movwf	??_main^(0+384)
  2705  0D3E                     u6597:
  2706  0D3E  0BDC               	decfsz	??_main^(0+384),f
  2707  0D3F  2D3E               	goto	u6597
  2708  0D40  0BDD               	decfsz	(??_main^(0+384)+1),f
  2709  0D41  2D3E               	goto	u6597
  2710  0D42  2D43               	nop2
  2711                           
  2712                           ;main.c: 164:             led_ind_off();
  2713  0D43  160A  158A  2718  120A  158A  	fcall	_led_ind_off
  2714  0D48                     l5498:
  2715                           
  2716                           ;main.c: 167:         if (uxBits & (1 << 2)) {
  2717  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  2718  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  2719  0D4A  1D67               	btfss	_uxBits^(0+128),2
  2720  0D4B  2C41               	goto	l5472
  2721                           
  2722                           ;main.c: 173:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2723  0D4C  3002               	movlw	2
  2724  0D4D  1683               	bsf	3,5	;RP0=1, select bank3
  2725  0D4E  1703               	bsf	3,6	;RP1=1, select bank3
  2726  0D4F  00DE               	movwf	(??_main^(0+384)+2)
  2727  0D50  3004               	movlw	4
  2728  0D51  00DD               	movwf	(??_main^(0+384)+1)
  2729  0D52  30B9               	movlw	185
  2730  0D53  00DC               	movwf	??_main^(0+384)
  2731  0D54                     u6607:
  2732  0D54  0BDC               	decfsz	??_main^(0+384),f
  2733  0D55  2D54               	goto	u6607
  2734  0D56  0BDD               	decfsz	(??_main^(0+384)+1),f
  2735  0D57  2D54               	goto	u6607
  2736  0D58  0BDE               	decfsz	(??_main^(0+384)+2),f
  2737  0D59  2D54               	goto	u6607
  2738  0D5A  2D5B               	nop2
  2739                           
  2740                           ;main.c: 174:             ade_config(&ade_cfg);
  2741  0D5B  30CD               	movlw	(low (_ade_cfg| (0+256)))& (0+255)
  2742  0D5C  120A  158A  2293  120A  158A  	fcall	_ade_config
  2743                           
  2744                           ;main.c: 177:             znp_send_msg(0x02, 0);
  2745  0D61  01BA               	clrf	znp_send_msg@wait_for_rsps
  2746  0D62  3002               	movlw	2
  2747  0D63  160A  118A  2247  120A  158A  	fcall	_znp_send_msg
  2748                           
  2749                           ;main.c: 178:             xEventGroupClearBits((1 << 2));
  2750  0D68  3004               	movlw	4
  2751  0D69  160A  118A  2000  120A  158A  	fcall	_xEventGroupClearBits
  2752  0D6E  2C41               	goto	l5472
  2753  0D6F                     __end_of_main:
  2754                           
  2755                           	psect	text1
  2756  1247                     __ptext1:	
  2757 ;; *************** function _znp_send_msg *****************
  2758 ;; Defined at:
  2759 ;;		line 83 in file "main.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  endpoint        1    wreg     unsigned char 
  2762 ;;  wait_for_rsp    1   26[BANK0 ] _Bool 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  endpoint        1   32[BANK0 ] unsigned char 
  2765 ;;  len             1   31[BANK0 ] unsigned char 
  2766 ;;  data            1   30[BANK0 ] PTR unsigned char 
  2767 ;;		 -> dev_data(13), NULL(0), 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 300/800
  2774 ;;		On exit  : 300/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       1       0       0       0
  2778 ;;      Locals:         0       3       0       0       0
  2779 ;;      Temps:          0       3       0       0       0
  2780 ;;      Totals:         0       7       0       0       0
  2781 ;;Total ram usage:        7 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 8
  2784 ;; This function calls:
  2785 ;;		_znp_af_data_request
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791  1247                     _znp_send_msg:	
  2792                           ;psect for function _znp_send_msg
  2793                           
  2794                           
  2795                           ;incstack = 0
  2796 ;; hardware stack exceeded
  2797                           ; Regs used in _znp_send_msg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2798                           ;znp_send_msg@endpoint stored from wreg
  2799  1247  00C0               	movwf	znp_send_msg@endpoint
  2800                           
  2801                           ;main.c: 84:     uint8_t* data = (0);
  2802  1248  01BE               	clrf	znp_send_msg@data
  2803                           
  2804                           ;main.c: 85:     uint8_t len = 0;
  2805  1249  01BF               	clrf	znp_send_msg@len
  2806                           
  2807                           ;main.c: 86:     if (endpoint == 0x02) {
  2808  124A  3002               	movlw	2
  2809  124B  0640               	xorwf	znp_send_msg@endpoint,w
  2810  124C  1D03               	btfss	3,2
  2811  124D  2A60               	goto	l5232
  2812                           
  2813                           ;main.c: 87:         dev_data.relay_state = !PORTDbits.RD2;
  2814  124E  1003               	clrc
  2815  124F  1D08               	btfss	8,2	;volatile
  2816  1250  1403               	setc
  2817  1251  1683               	bsf	3,5	;RP0=1, select bank3
  2818  1252  1703               	bsf	3,6	;RP1=1, select bank3
  2819  1253  104B               	bcf	(_dev_data^(0+384)+12),0
  2820  1254  1803               	btfsc	3,0
  2821  1255  144B               	bsf	(_dev_data^(0+384)+12),0
  2822                           
  2823                           ;main.c: 88:         data = dev_data.raw;
  2824  1256  30BF               	movlw	(low (_dev_data| (0+256)))& (0+255)
  2825  1257  1283               	bcf	3,5	;RP0=0, select bank0
  2826  1258  1303               	bcf	3,6	;RP1=0, select bank0
  2827  1259  00BB               	movwf	??_znp_send_msg
  2828  125A  083B               	movf	??_znp_send_msg,w
  2829  125B  00BE               	movwf	znp_send_msg@data
  2830                           
  2831                           ;main.c: 89:         len = sizeof (dev_data.raw);
  2832  125C  300D               	movlw	13
  2833  125D  00BB               	movwf	??_znp_send_msg
  2834  125E  083B               	movf	??_znp_send_msg,w
  2835  125F  00BF               	movwf	znp_send_msg@len
  2836  1260                     l5232:
  2837                           
  2838                           ;main.c: 92:     znp_af_data_request(endpoint,
  2839  1260  3004               	movlw	4
  2840  1261  00AF               	movwf	znp_af_data_request@cluster_id
  2841  1262  3000               	movlw	0
  2842  1263  00B0               	movwf	znp_af_data_request@cluster_id+1
  2843  1264  083E               	movf	znp_send_msg@data,w
  2844  1265  00BB               	movwf	??_znp_send_msg
  2845  1266  083B               	movf	??_znp_send_msg,w
  2846  1267  00B1               	movwf	znp_af_data_request@data
  2847  1268  083F               	movf	znp_send_msg@len,w
  2848  1269  00BC               	movwf	??_znp_send_msg+1
  2849  126A  083C               	movf	??_znp_send_msg+1,w
  2850  126B  00B2               	movwf	znp_af_data_request@len
  2851  126C  083A               	movf	znp_send_msg@wait_for_rsps,w
  2852  126D  00BD               	movwf	??_znp_send_msg+2
  2853  126E  083D               	movf	??_znp_send_msg+2,w
  2854  126F  00B3               	movwf	znp_af_data_request@wait_for_rsps
  2855  1270  0840               	movf	znp_send_msg@endpoint,w
  2856  1271  120A  158A  2103   	fcall	_znp_af_data_request
  2857  1274  0008               	return
  2858  1275                     __end_of_znp_send_msg:
  2859                           
  2860                           	psect	text2
  2861  0903                     __ptext2:	
  2862 ;; *************** function _znp_af_data_request *****************
  2863 ;; Defined at:
  2864 ;;		line 200 in file "zb_znp.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  endpoint        1    wreg     unsigned char 
  2867 ;;  cluster_id      2   15[BANK0 ] unsigned int 
  2868 ;;  data            1   17[BANK0 ] PTR unsigned char 
  2869 ;;		 -> dev_data(13), NULL(0), 
  2870 ;;  len             1   18[BANK0 ] unsigned char 
  2871 ;;  wait_for_rsp    1   19[BANK0 ] _Bool 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  endpoint        1   22[BANK0 ] unsigned char 
  2874 ;;  i               1   24[BANK0 ] unsigned char 
  2875 ;;  i               1   23[BANK0 ] unsigned char 
  2876 ;;  fcs_calc        1   25[BANK0 ] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 300/800
  2883 ;;		On exit  : 300/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         0       5       0       0       0
  2887 ;;      Locals:         0       4       0       0       0
  2888 ;;      Temps:          0       2       0       0       0
  2889 ;;      Totals:         0      11       0       0       0
  2890 ;;Total ram usage:       11 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 7
  2893 ;; This function calls:
  2894 ;;		_usart_send
  2895 ;;		_wait_for_status
  2896 ;; This function is called by:
  2897 ;;		_znp_send_msg
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901  0903                     _znp_af_data_request:	
  2902                           ;psect for function _znp_af_data_request
  2903                           
  2904                           
  2905                           ;incstack = 0
  2906 ;; hardware stack exceeded
  2907                           ; Regs used in _znp_af_data_request: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2908                           ;znp_af_data_request@endpoint stored from wreg
  2909  0903  00B6               	movwf	znp_af_data_request@endpoint
  2910                           
  2911                           ;zb_znp.c: 201:         uint8_t endpoint,;zb_znp.c: 202:         uint16_t cluster_id,;zb
      +                          _znp.c: 203:         uint8_t* data,;zb_znp.c: 204:         uint8_t len,;zb_znp.c: 205:  
      +                                 _Bool wait_for_rsps) {;zb_znp.c: 206:     uint8_t fcs_calc = 0;
  2912  0904  01B9               	clrf	znp_af_data_request@fcs_calc
  2913                           
  2914                           ;zb_znp.c: 207:     if (data == (0)) len = 0;
  2915  0905  0831               	movf	znp_af_data_request@data,w
  2916  0906  1903               	btfsc	3,2
  2917  0907  01B2               	clrf	znp_af_data_request@len
  2918                           
  2919                           ;zb_znp.c: 208:     for (uint8_t i = 0; i < len; i++)
  2920  0908  01B7               	clrf	znp_af_data_request@i
  2921  0909                     l4462:
  2922  0909  0832               	movf	znp_af_data_request@len,w
  2923  090A  0237               	subwf	znp_af_data_request@i,w
  2924  090B  1803               	btfsc	3,0
  2925  090C  291C               	goto	l4464
  2926                           
  2927                           ;zb_znp.c: 209:         fcs_calc ^= data[i];
  2928  090D  0837               	movf	znp_af_data_request@i,w
  2929  090E  0731               	addwf	znp_af_data_request@data,w
  2930  090F  00B4               	movwf	??_znp_af_data_request
  2931  0910  0834               	movf	??_znp_af_data_request,w
  2932  0911  0084               	movwf	4
  2933  0912  1783               	bsf	3,7	;select IRP bank2
  2934  0913  0800               	movf	0,w
  2935  0914  00B5               	movwf	??_znp_af_data_request+1
  2936  0915  0835               	movf	??_znp_af_data_request+1,w
  2937  0916  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2938  0917  3001               	movlw	1
  2939  0918  00B4               	movwf	??_znp_af_data_request
  2940  0919  0834               	movf	??_znp_af_data_request,w
  2941  091A  07B7               	addwf	znp_af_data_request@i,f
  2942  091B  2909               	goto	l4462
  2943  091C                     l4464:
  2944                           
  2945                           ;zb_znp.c: 210:     fcs_calc ^= 10 + len;
  2946  091C  0832               	movf	znp_af_data_request@len,w
  2947  091D  3E0A               	addlw	10
  2948  091E  00B4               	movwf	??_znp_af_data_request
  2949  091F  0834               	movf	??_znp_af_data_request,w
  2950  0920  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2951                           
  2952                           ;zb_znp.c: 211:     fcs_calc ^= 0x24;
  2953  0921  3024               	movlw	36
  2954  0922  00B4               	movwf	??_znp_af_data_request
  2955  0923  0834               	movf	??_znp_af_data_request,w
  2956  0924  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2957                           
  2958                           ;zb_znp.c: 212:     fcs_calc ^= 0x01;
  2959  0925  3001               	movlw	1
  2960  0926  00B4               	movwf	??_znp_af_data_request
  2961  0927  0834               	movf	??_znp_af_data_request,w
  2962  0928  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2963                           
  2964                           ;zb_znp.c: 213:     fcs_calc ^= 0x0F;
  2965  0929  300F               	movlw	15
  2966  092A  00B4               	movwf	??_znp_af_data_request
  2967  092B  0834               	movf	??_znp_af_data_request,w
  2968  092C  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2969                           
  2970                           ;zb_znp.c: 214:     fcs_calc ^= len;
  2971  092D  0832               	movf	znp_af_data_request@len,w
  2972  092E  00B4               	movwf	??_znp_af_data_request
  2973  092F  0834               	movf	??_znp_af_data_request,w
  2974  0930  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2975                           
  2976                           ;zb_znp.c: 215:     fcs_calc ^= ((cluster_id) & 0xFF);
  2977  0931  082F               	movf	znp_af_data_request@cluster_id,w
  2978  0932  00B4               	movwf	??_znp_af_data_request
  2979  0933  0834               	movf	??_znp_af_data_request,w
  2980  0934  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2981                           
  2982                           ;zb_znp.c: 216:     fcs_calc ^= (((cluster_id) >> 8) & 0xFF);
  2983  0935  0830               	movf	znp_af_data_request@cluster_id+1,w
  2984  0936  00B4               	movwf	??_znp_af_data_request
  2985  0937  0834               	movf	??_znp_af_data_request,w
  2986  0938  06B9               	xorwf	znp_af_data_request@fcs_calc,f
  2987                           
  2988                           ;zb_znp.c: 218:     usart_send(0xFE);
  2989  0939  30FE               	movlw	254
  2990  093A  160A  158A  2737  120A  158A  	fcall	_usart_send
  2991                           
  2992                           ;zb_znp.c: 219:     usart_send(10 + len);
  2993  093F  0832               	movf	znp_af_data_request@len,w
  2994  0940  3E0A               	addlw	10
  2995  0941  160A  158A  2737  120A  158A  	fcall	_usart_send
  2996                           
  2997                           ;zb_znp.c: 220:     usart_send(0x24);
  2998  0946  3024               	movlw	36
  2999  0947  160A  158A  2737  120A  158A  	fcall	_usart_send
  3000                           
  3001                           ;zb_znp.c: 221:     usart_send(0x01);
  3002  094C  3001               	movlw	1
  3003  094D  160A  158A  2737  120A  158A  	fcall	_usart_send
  3004                           
  3005                           ;zb_znp.c: 222:     usart_send(0x00);
  3006  0952  3000               	movlw	0
  3007  0953  160A  158A  2737  120A  158A  	fcall	_usart_send
  3008                           
  3009                           ;zb_znp.c: 223:     usart_send(0x00);
  3010  0958  3000               	movlw	0
  3011  0959  160A  158A  2737  120A  158A  	fcall	_usart_send
  3012                           
  3013                           ;zb_znp.c: 224:     usart_send(endpoint);
  3014  095E  0836               	movf	znp_af_data_request@endpoint,w
  3015  095F  160A  158A  2737  120A  158A  	fcall	_usart_send
  3016                           
  3017                           ;zb_znp.c: 225:     usart_send(endpoint);
  3018  0964  0836               	movf	znp_af_data_request@endpoint,w
  3019  0965  160A  158A  2737  120A  158A  	fcall	_usart_send
  3020                           
  3021                           ;zb_znp.c: 226:     usart_send(((cluster_id) & 0xFF));
  3022  096A  082F               	movf	znp_af_data_request@cluster_id,w
  3023  096B  160A  158A  2737  120A  158A  	fcall	_usart_send
  3024                           
  3025                           ;zb_znp.c: 227:     usart_send((((cluster_id) >> 8) & 0xFF));
  3026  0970  0830               	movf	znp_af_data_request@cluster_id+1,w
  3027  0971  160A  158A  2737  120A  158A  	fcall	_usart_send
  3028                           
  3029                           ;zb_znp.c: 228:     usart_send(0x00);
  3030  0976  3000               	movlw	0
  3031  0977  160A  158A  2737  120A  158A  	fcall	_usart_send
  3032                           
  3033                           ;zb_znp.c: 229:     usart_send(0x00);
  3034  097C  3000               	movlw	0
  3035  097D  160A  158A  2737  120A  158A  	fcall	_usart_send
  3036                           
  3037                           ;zb_znp.c: 230:     usart_send(0x0F);
  3038  0982  300F               	movlw	15
  3039  0983  160A  158A  2737  120A  158A  	fcall	_usart_send
  3040                           
  3041                           ;zb_znp.c: 231:     usart_send(len);
  3042  0988  0832               	movf	znp_af_data_request@len,w
  3043  0989  160A  158A  2737  120A  158A  	fcall	_usart_send
  3044                           
  3045                           ;zb_znp.c: 232:     for (uint8_t i = 0; i < len; i++)
  3046  098E  01B8               	clrf	znp_af_data_request@i_1601
  3047  098F                     l4500:
  3048  098F  0832               	movf	znp_af_data_request@len,w
  3049  0990  0238               	subwf	znp_af_data_request@i_1601,w
  3050  0991  1803               	btfsc	3,0
  3051  0992  29A4               	goto	l4502
  3052                           
  3053                           ;zb_znp.c: 233:         usart_send(data[i]);
  3054  0993  0838               	movf	znp_af_data_request@i_1601,w
  3055  0994  0731               	addwf	znp_af_data_request@data,w
  3056  0995  00B4               	movwf	??_znp_af_data_request
  3057  0996  0834               	movf	??_znp_af_data_request,w
  3058  0997  0084               	movwf	4
  3059  0998  1783               	bsf	3,7	;select IRP bank2
  3060  0999  0800               	movf	0,w
  3061  099A  160A  158A  2737  120A  158A  	fcall	_usart_send
  3062  099F  3001               	movlw	1
  3063  09A0  00B4               	movwf	??_znp_af_data_request
  3064  09A1  0834               	movf	??_znp_af_data_request,w
  3065  09A2  07B8               	addwf	znp_af_data_request@i_1601,f
  3066  09A3  298F               	goto	l4500
  3067  09A4                     l4502:
  3068                           
  3069                           ;zb_znp.c: 234:     usart_send(fcs_calc);
  3070  09A4  0839               	movf	znp_af_data_request@fcs_calc,w
  3071  09A5  160A  158A  2737  120A  158A  	fcall	_usart_send
  3072                           
  3073                           ;zb_znp.c: 236:     if (wait_for_rsps)
  3074  09AA  0833               	movf	znp_af_data_request@wait_for_rsps,w
  3075  09AB  1903               	btfsc	3,2
  3076  09AC  0008               	return
  3077                           
  3078                           ;zb_znp.c: 237:         wait_for_status(0x6401, 0, 0x00);
  3079  09AD  3001               	movlw	1
  3080  09AE  00AB               	movwf	wait_for_status@cmd
  3081  09AF  3064               	movlw	100
  3082  09B0  00AC               	movwf	wait_for_status@cmd+1
  3083  09B1  01AD               	clrf	wait_for_status@offset
  3084  09B2  01AE               	clrf	wait_for_status@status_to_wait
  3085  09B3  160A  118A  2085   	fcall	_wait_for_status
  3086  09B6  0008               	return
  3087  09B7                     __end_of_znp_af_data_request:
  3088                           
  3089                           	psect	text3
  3090  1370                     __ptext3:	
  3091 ;; *************** function _znp_router_start *****************
  3092 ;; Defined at:
  3093 ;;		line 240 in file "zb_znp.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  start_opt       1    wreg     enum E1505
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  start_opt       1   18[BANK0 ] enum E1505
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 300/A00
  3104 ;;		On exit  : B00/800
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       0       0       0       0
  3108 ;;      Locals:         0       1       0       0       0
  3109 ;;      Temps:          0       2       0       0       0
  3110 ;;      Totals:         0       3       0       0       0
  3111 ;;Total ram usage:        3 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 8
  3114 ;; This function calls:
  3115 ;;		_znp_af_register
  3116 ;;		_znp_hard_reset
  3117 ;;		_znp_set_channels
  3118 ;;		_znp_set_logical_type
  3119 ;;		_znp_set_startopt
  3120 ;;		_znp_zdo_startup_from_app
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126  1370                     _znp_router_start:	
  3127                           ;psect for function _znp_router_start
  3128                           
  3129                           
  3130                           ;incstack = 0
  3131 ;; hardware stack exceeded
  3132                           ; Regs used in _znp_router_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3133                           ;znp_router_start@start_opt stored from wreg
  3134  1370  1303               	bcf	3,6	;RP1=0, select bank0
  3135  1371  00B2               	movwf	znp_router_start@start_opt
  3136                           
  3137                           ;zb_znp.c: 241:     znp_hard_reset();
  3138  1372  160A  118A  20D6  160A  118A  	fcall	_znp_hard_reset
  3139                           
  3140                           ;zb_znp.c: 242:     switch (start_opt) {
  3141  1377  2B8F               	goto	l5300
  3142  1378                     l5294:
  3143                           
  3144                           ;zb_znp.c: 244:             znp_set_startopt(((1 << 0) | (1 << 1)));
  3145  1378  3003               	movlw	3
  3146  1379  160A  118A  23B6  160A  118A  	fcall	_znp_set_startopt
  3147                           
  3148                           ;zb_znp.c: 245:             znp_set_logical_type(0x01);
  3149  137E  3001               	movlw	1
  3150  137F  120A  118A  27B7  160A  118A  	fcall	_znp_set_logical_type
  3151                           
  3152                           ;zb_znp.c: 246:             znp_set_channels();
  3153  1384  160A  118A  263D  160A  118A  	fcall	_znp_set_channels
  3154  1389                     l5296:
  3155                           
  3156                           ;zb_znp.c: 248:             znp_zdo_startup_from_app();
  3157  1389  160A  118A  221B  160A  118A  	fcall	_znp_zdo_startup_from_app
  3158                           
  3159                           ;zb_znp.c: 249:             break;
  3160  138E  2B9F               	goto	l5302
  3161  138F                     l5300:
  3162  138F  0832               	movf	znp_router_start@start_opt,w
  3163  1390  00B0               	movwf	??_znp_router_start
  3164  1391  01B1               	clrf	??_znp_router_start+1
  3165                           
  3166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3167                           ; Switch size 1, requested type "simple"
  3168                           ; Number of cases is 1, Range of values is 0 to 0
  3169                           ; switch strategies available:
  3170                           ; Name         Instructions Cycles
  3171                           ; simple_byte            4     3 (average)
  3172                           ; direct_byte           11     8 (fixed)
  3173                           ; jumptable            260     6 (fixed)
  3174                           ;	Chosen strategy is simple_byte
  3175  1392  0831               	movf	??_znp_router_start+1,w
  3176  1393  3A00               	xorlw	0	; case 0
  3177  1394  1903               	skipnz
  3178  1395  2B97               	goto	l5618
  3179  1396  2B9F               	goto	l5302
  3180  1397                     l5618:
  3181                           
  3182                           ; Switch size 1, requested type "simple"
  3183                           ; Number of cases is 2, Range of values is 0 to 1
  3184                           ; switch strategies available:
  3185                           ; Name         Instructions Cycles
  3186                           ; simple_byte            7     4 (average)
  3187                           ; direct_byte           14     8 (fixed)
  3188                           ; jumptable            260     6 (fixed)
  3189                           ;	Chosen strategy is simple_byte
  3190  1397  0830               	movf	??_znp_router_start,w
  3191  1398  3A00               	xorlw	0	; case 0
  3192  1399  1903               	skipnz
  3193  139A  2B78               	goto	l5294
  3194  139B  3A01               	xorlw	1	; case 1
  3195  139C  1903               	skipnz
  3196  139D  2B89               	goto	l5296
  3197  139E  2B9F               	goto	l5302
  3198  139F                     l5302:
  3199                           
  3200                           ;zb_znp.c: 253:     znp_af_register(0x01);
  3201  139F  3001               	movlw	1
  3202  13A0  160A  118A  2403  160A  118A  	fcall	_znp_af_register
  3203                           
  3204                           ;zb_znp.c: 254:     znp_af_register(0x02);
  3205  13A5  3002               	movlw	2
  3206  13A6  160A  118A  2403  160A  118A  	fcall	_znp_af_register
  3207                           
  3208                           ;zb_znp.c: 255:     znp_af_register(0x03);
  3209  13AB  3003               	movlw	3
  3210  13AC  160A  118A  2403  160A  118A  	fcall	_znp_af_register
  3211                           
  3212                           ;zb_znp.c: 256:     znp_af_register(0x04);
  3213  13B1  3004               	movlw	4
  3214  13B2  160A  118A  2403   	fcall	_znp_af_register
  3215  13B5  0008               	return
  3216  13B6                     __end_of_znp_router_start:
  3217                           
  3218                           	psect	text4
  3219  121B                     __ptext4:	
  3220 ;; *************** function _znp_zdo_startup_from_app *****************
  3221 ;; Defined at:
  3222 ;;		line 190 in file "zb_znp.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 300/800
  3233 ;;		On exit  : 300/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 6
  3243 ;; This function calls:
  3244 ;;		_usart_send
  3245 ;;		_wait_for_msg
  3246 ;; This function is called by:
  3247 ;;		_znp_router_start
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251  121B                     _znp_zdo_startup_from_app:	
  3252                           ;psect for function _znp_zdo_startup_from_app
  3253                           
  3254                           
  3255                           ;zb_znp.c: 191:     usart_send(0xFE);
  3256                           
  3257                           ;incstack = 0
  3258                           ; Regs used in _znp_zdo_startup_from_app: [wreg+status,2+status,0+pclath+cstack]
  3259  121B  30FE               	movlw	254
  3260  121C  160A  158A  2737  160A  118A  	fcall	_usart_send
  3261                           
  3262                           ;zb_znp.c: 192:     usart_send(0x01);
  3263  1221  3001               	movlw	1
  3264  1222  160A  158A  2737  160A  118A  	fcall	_usart_send
  3265                           
  3266                           ;zb_znp.c: 193:     usart_send(0x25);
  3267  1227  3025               	movlw	37
  3268  1228  160A  158A  2737  160A  118A  	fcall	_usart_send
  3269                           
  3270                           ;zb_znp.c: 194:     usart_send(0x40);
  3271  122D  3040               	movlw	64
  3272  122E  160A  158A  2737  160A  118A  	fcall	_usart_send
  3273                           
  3274                           ;zb_znp.c: 195:     usart_send(0x00);
  3275  1233  3000               	movlw	0
  3276  1234  160A  158A  2737  160A  118A  	fcall	_usart_send
  3277                           
  3278                           ;zb_znp.c: 196:     usart_send(0x64);
  3279  1239  3064               	movlw	100
  3280  123A  160A  158A  2737  160A  118A  	fcall	_usart_send
  3281                           
  3282                           ;zb_znp.c: 197:     wait_for_msg(0x4F80);
  3283  123F  3080               	movlw	128
  3284  1240  00A9               	movwf	wait_for_msg@cmd
  3285  1241  304F               	movlw	79
  3286  1242  00AA               	movwf	wait_for_msg@cmd+1
  3287  1243  160A  158A  2763   	fcall	_wait_for_msg
  3288  1246  0008               	return
  3289  1247                     __end_of_znp_zdo_startup_from_app:
  3290                           
  3291                           	psect	text5
  3292  13B6                     __ptext5:	
  3293 ;; *************** function _znp_set_startopt *****************
  3294 ;; Defined at:
  3295 ;;		line 98 in file "zb_znp.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  startopt        1    wreg     unsigned char 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  startopt        1   15[BANK0 ] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 300/800
  3306 ;;		On exit  : 300/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       0       0       0       0
  3310 ;;      Locals:         0       1       0       0       0
  3311 ;;      Temps:          0       0       0       0       0
  3312 ;;      Totals:         0       1       0       0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 7
  3316 ;; This function calls:
  3317 ;;		_usart_send
  3318 ;;		_wait_for_status
  3319 ;;		_znp_hard_reset
  3320 ;; This function is called by:
  3321 ;;		_znp_router_start
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325  13B6                     _znp_set_startopt:	
  3326                           ;psect for function _znp_set_startopt
  3327                           
  3328                           
  3329                           ;incstack = 0
  3330 ;; hardware stack exceeded
  3331                           ; Regs used in _znp_set_startopt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3332                           ;znp_set_startopt@startopt stored from wreg
  3333  13B6  00AF               	movwf	znp_set_startopt@startopt
  3334                           
  3335                           ;zb_znp.c: 99:     usart_send(0xFE);
  3336  13B7  30FE               	movlw	254
  3337  13B8  160A  158A  2737  160A  118A  	fcall	_usart_send
  3338                           
  3339                           ;zb_znp.c: 100:     usart_send(0x05);
  3340  13BD  3005               	movlw	5
  3341  13BE  160A  158A  2737  160A  118A  	fcall	_usart_send
  3342                           
  3343                           ;zb_znp.c: 101:     usart_send(0x21);
  3344  13C3  3021               	movlw	33
  3345  13C4  160A  158A  2737  160A  118A  	fcall	_usart_send
  3346                           
  3347                           ;zb_znp.c: 102:     usart_send(0x09);
  3348  13C9  3009               	movlw	9
  3349  13CA  160A  158A  2737  160A  118A  	fcall	_usart_send
  3350                           
  3351                           ;zb_znp.c: 103:     usart_send(0x03);
  3352  13CF  3003               	movlw	3
  3353  13D0  160A  158A  2737  160A  118A  	fcall	_usart_send
  3354                           
  3355                           ;zb_znp.c: 104:     usart_send(0x00);
  3356  13D5  3000               	movlw	0
  3357  13D6  160A  158A  2737  160A  118A  	fcall	_usart_send
  3358                           
  3359                           ;zb_znp.c: 105:     usart_send(0x00);
  3360  13DB  3000               	movlw	0
  3361  13DC  160A  158A  2737  160A  118A  	fcall	_usart_send
  3362                           
  3363                           ;zb_znp.c: 106:     usart_send(0x01);
  3364  13E1  3001               	movlw	1
  3365  13E2  160A  158A  2737  160A  118A  	fcall	_usart_send
  3366                           
  3367                           ;zb_znp.c: 107:     usart_send(startopt);
  3368  13E7  082F               	movf	znp_set_startopt@startopt,w
  3369  13E8  160A  158A  2737  160A  118A  	fcall	_usart_send
  3370                           
  3371                           ;zb_znp.c: 108:     usart_send(0x2F ^ startopt);
  3372  13ED  082F               	movf	znp_set_startopt@startopt,w
  3373  13EE  3A2F               	xorlw	47
  3374  13EF  160A  158A  2737  160A  118A  	fcall	_usart_send
  3375                           
  3376                           ;zb_znp.c: 109:     wait_for_status(0x6109, 0, 0x00);
  3377  13F4  3009               	movlw	9
  3378  13F5  00AB               	movwf	wait_for_status@cmd
  3379  13F6  3061               	movlw	97
  3380  13F7  00AC               	movwf	wait_for_status@cmd+1
  3381  13F8  01AD               	clrf	wait_for_status@offset
  3382  13F9  01AE               	clrf	wait_for_status@status_to_wait
  3383  13FA  160A  118A  2085  160A  118A  	fcall	_wait_for_status
  3384                           
  3385                           ;zb_znp.c: 111:     znp_hard_reset();
  3386  13FF  160A  118A  20D6   	fcall	_znp_hard_reset
  3387  1402  0008               	return
  3388  1403                     __end_of_znp_set_startopt:
  3389                           
  3390                           	psect	text6
  3391  10D6                     __ptext6:	
  3392 ;; *************** function _znp_hard_reset *****************
  3393 ;; Defined at:
  3394 ;;		line 165 in file "zb_znp.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 300/800
  3405 ;;		On exit  : 300/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          0       2       0       0       0
  3411 ;;      Totals:         0       2       0       0       0
  3412 ;;Total ram usage:        2 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 6
  3415 ;; This function calls:
  3416 ;;		_wait_for_msg
  3417 ;; This function is called by:
  3418 ;;		_znp_set_startopt
  3419 ;;		_znp_router_start
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423  10D6                     _znp_hard_reset:	
  3424                           ;psect for function _znp_hard_reset
  3425                           
  3426                           
  3427                           ;zb_znp.c: 166:     PORTDbits.RD4 = 0;
  3428                           
  3429                           ;incstack = 0
  3430 ;; hardware stack exceeded
  3431                           ; Regs used in _znp_hard_reset: [wreg+status,2+status,0+pclath+cstack]
  3432  10D6  1208               	bcf	8,4	;volatile
  3433                           
  3434                           ;zb_znp.c: 167:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3435  10D7  301A               	movlw	26
  3436  10D8  1283               	bcf	3,5	;RP0=0, select bank0
  3437  10D9  1303               	bcf	3,6	;RP1=0, select bank0
  3438  10DA  00AC               	movwf	??_znp_hard_reset+1
  3439  10DB  30F7               	movlw	247
  3440  10DC  00AB               	movwf	??_znp_hard_reset
  3441  10DD                     u6617:
  3442  10DD  0BAB               	decfsz	??_znp_hard_reset,f
  3443  10DE  28DD               	goto	u6617
  3444  10DF  0BAC               	decfsz	??_znp_hard_reset+1,f
  3445  10E0  28DD               	goto	u6617
  3446  10E1  28E2               	nop2
  3447                           
  3448                           ;zb_znp.c: 168:     PORTDbits.RD4 = 1;
  3449  10E2  1283               	bcf	3,5	;RP0=0, select bank0
  3450  10E3  1303               	bcf	3,6	;RP1=0, select bank0
  3451  10E4  1608               	bsf	8,4	;volatile
  3452                           
  3453                           ;zb_znp.c: 169:     wait_for_msg(0x4180);
  3454  10E5  3080               	movlw	128
  3455  10E6  00A9               	movwf	wait_for_msg@cmd
  3456  10E7  3041               	movlw	65
  3457  10E8  00AA               	movwf	wait_for_msg@cmd+1
  3458  10E9  160A  158A  2763   	fcall	_wait_for_msg
  3459  10EC  0008               	return
  3460  10ED                     __end_of_znp_hard_reset:
  3461                           
  3462                           	psect	text7
  3463  07B7                     __ptext7:	
  3464 ;; *************** function _znp_set_logical_type *****************
  3465 ;; Defined at:
  3466 ;;		line 114 in file "zb_znp.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  logical_type    1    wreg     unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  logical_type    1   15[BANK0 ] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 300/800
  3477 ;;		On exit  : B00/800
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3480 ;;      Params:         0       0       0       0       0
  3481 ;;      Locals:         0       1       0       0       0
  3482 ;;      Temps:          0       0       0       0       0
  3483 ;;      Totals:         0       1       0       0       0
  3484 ;;Total ram usage:        1 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 7
  3487 ;; This function calls:
  3488 ;;		_usart_send
  3489 ;;		_wait_for_status
  3490 ;; This function is called by:
  3491 ;;		_znp_router_start
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495  07B7                     _znp_set_logical_type:	
  3496                           ;psect for function _znp_set_logical_type
  3497                           
  3498                           
  3499                           ;incstack = 0
  3500 ;; hardware stack exceeded
  3501                           ; Regs used in _znp_set_logical_type: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3502                           ;znp_set_logical_type@logical_type stored from wreg
  3503  07B7  00AF               	movwf	znp_set_logical_type@logical_type
  3504                           
  3505                           ;zb_znp.c: 115:     usart_send(0xFE);
  3506  07B8  30FE               	movlw	254
  3507  07B9  160A  158A  2737  120A  118A  	fcall	_usart_send
  3508                           
  3509                           ;zb_znp.c: 116:     usart_send(0x05);
  3510  07BE  3005               	movlw	5
  3511  07BF  160A  158A  2737  120A  118A  	fcall	_usart_send
  3512                           
  3513                           ;zb_znp.c: 117:     usart_send(0x21);
  3514  07C4  3021               	movlw	33
  3515  07C5  160A  158A  2737  120A  118A  	fcall	_usart_send
  3516                           
  3517                           ;zb_znp.c: 118:     usart_send(0x09);
  3518  07CA  3009               	movlw	9
  3519  07CB  160A  158A  2737  120A  118A  	fcall	_usart_send
  3520                           
  3521                           ;zb_znp.c: 119:     usart_send(0x87);
  3522  07D0  3087               	movlw	135
  3523  07D1  160A  158A  2737  120A  118A  	fcall	_usart_send
  3524                           
  3525                           ;zb_znp.c: 120:     usart_send(0x00);
  3526  07D6  3000               	movlw	0
  3527  07D7  160A  158A  2737  120A  118A  	fcall	_usart_send
  3528                           
  3529                           ;zb_znp.c: 121:     usart_send(0x00);
  3530  07DC  3000               	movlw	0
  3531  07DD  160A  158A  2737  120A  118A  	fcall	_usart_send
  3532                           
  3533                           ;zb_znp.c: 122:     usart_send(0x01);
  3534  07E2  3001               	movlw	1
  3535  07E3  160A  158A  2737  120A  118A  	fcall	_usart_send
  3536                           
  3537                           ;zb_znp.c: 123:     usart_send(logical_type);
  3538  07E8  082F               	movf	znp_set_logical_type@logical_type,w
  3539  07E9  160A  158A  2737  120A  118A  	fcall	_usart_send
  3540                           
  3541                           ;zb_znp.c: 124:     usart_send(0xAB ^ logical_type);
  3542  07EE  082F               	movf	znp_set_logical_type@logical_type,w
  3543  07EF  3AAB               	xorlw	171
  3544  07F0  160A  158A  2737  120A  118A  	fcall	_usart_send
  3545                           
  3546                           ;zb_znp.c: 125:     wait_for_status(0x6109, 0, 0x00);
  3547  07F5  3009               	movlw	9
  3548  07F6  00AB               	movwf	wait_for_status@cmd
  3549  07F7  3061               	movlw	97
  3550  07F8  00AC               	movwf	wait_for_status@cmd+1
  3551  07F9  01AD               	clrf	wait_for_status@offset
  3552  07FA  01AE               	clrf	wait_for_status@status_to_wait
  3553  07FB  160A  118A  2085   	fcall	_wait_for_status
  3554  07FE  0008               	return
  3555  07FF                     __end_of_znp_set_logical_type:
  3556                           
  3557                           	psect	text8
  3558  163D                     __ptext8:	
  3559 ;; *************** function _znp_set_channels *****************
  3560 ;; Defined at:
  3561 ;;		line 128 in file "zb_znp.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : B00/800
  3572 ;;		On exit  : B00/800
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0
  3578 ;;      Totals:         0       0       0       0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 7
  3582 ;; This function calls:
  3583 ;;		_usart_send
  3584 ;;		_wait_for_status
  3585 ;; This function is called by:
  3586 ;;		_znp_router_start
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590  163D                     _znp_set_channels:	
  3591                           ;psect for function _znp_set_channels
  3592                           
  3593                           
  3594                           ;zb_znp.c: 129:     usart_send(0xFE);
  3595                           
  3596                           ;incstack = 0
  3597 ;; hardware stack exceeded
  3598                           ; Regs used in _znp_set_channels: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3599  163D  30FE               	movlw	254
  3600  163E  160A  158A  2737  160A  118A  	fcall	_usart_send
  3601                           
  3602                           ;zb_znp.c: 130:     usart_send(0x05);
  3603  1643  3005               	movlw	5
  3604  1644  160A  158A  2737  160A  118A  	fcall	_usart_send
  3605                           
  3606                           ;zb_znp.c: 131:     usart_send(0x2F);
  3607  1649  302F               	movlw	47
  3608  164A  160A  158A  2737  160A  118A  	fcall	_usart_send
  3609                           
  3610                           ;zb_znp.c: 132:     usart_send(0x08);
  3611  164F  3008               	movlw	8
  3612  1650  160A  158A  2737  160A  118A  	fcall	_usart_send
  3613                           
  3614                           ;zb_znp.c: 133:     usart_send(0x01);
  3615  1655  3001               	movlw	1
  3616  1656  160A  158A  2737  160A  118A  	fcall	_usart_send
  3617                           
  3618                           ;zb_znp.c: 134:     usart_send(0x00);
  3619  165B  3000               	movlw	0
  3620  165C  160A  158A  2737  160A  118A  	fcall	_usart_send
  3621                           
  3622                           ;zb_znp.c: 135:     usart_send(0x20);
  3623  1661  3020               	movlw	32
  3624  1662  160A  158A  2737  160A  118A  	fcall	_usart_send
  3625                           
  3626                           ;zb_znp.c: 136:     usart_send(0x00);
  3627  1667  3000               	movlw	0
  3628  1668  160A  158A  2737  160A  118A  	fcall	_usart_send
  3629                           
  3630                           ;zb_znp.c: 137:     usart_send(0x00);
  3631  166D  3000               	movlw	0
  3632  166E  160A  158A  2737  160A  118A  	fcall	_usart_send
  3633                           
  3634                           ;zb_znp.c: 138:     usart_send(0x03);
  3635  1673  3003               	movlw	3
  3636  1674  160A  158A  2737  160A  118A  	fcall	_usart_send
  3637                           
  3638                           ;zb_znp.c: 139:     wait_for_status(0x6F08, 0, 0x00);
  3639  1679  3008               	movlw	8
  3640  167A  00AB               	movwf	wait_for_status@cmd
  3641  167B  306F               	movlw	111
  3642  167C  00AC               	movwf	wait_for_status@cmd+1
  3643  167D  01AD               	clrf	wait_for_status@offset
  3644  167E  01AE               	clrf	wait_for_status@status_to_wait
  3645  167F  160A  118A  2085  160A  118A  	fcall	_wait_for_status
  3646                           
  3647                           ;zb_znp.c: 141:     usart_send(0xFE);
  3648  1684  30FE               	movlw	254
  3649  1685  160A  158A  2737  160A  118A  	fcall	_usart_send
  3650                           
  3651                           ;zb_znp.c: 142:     usart_send(0x05);
  3652  168A  3005               	movlw	5
  3653  168B  160A  158A  2737  160A  118A  	fcall	_usart_send
  3654                           
  3655                           ;zb_znp.c: 143:     usart_send(0x2F);
  3656  1690  302F               	movlw	47
  3657  1691  160A  158A  2737  160A  118A  	fcall	_usart_send
  3658                           
  3659                           ;zb_znp.c: 144:     usart_send(0x08);
  3660  1696  3008               	movlw	8
  3661  1697  160A  158A  2737  160A  118A  	fcall	_usart_send
  3662                           
  3663                           ;zb_znp.c: 145:     usart_send(0x00);
  3664  169C  3000               	movlw	0
  3665  169D  160A  158A  2737  160A  118A  	fcall	_usart_send
  3666                           
  3667                           ;zb_znp.c: 146:     usart_send(0x00);
  3668  16A2  3000               	movlw	0
  3669  16A3  160A  158A  2737  160A  118A  	fcall	_usart_send
  3670                           
  3671                           ;zb_znp.c: 147:     usart_send(0x00);
  3672  16A8  3000               	movlw	0
  3673  16A9  160A  158A  2737  160A  118A  	fcall	_usart_send
  3674                           
  3675                           ;zb_znp.c: 148:     usart_send(0x00);
  3676  16AE  3000               	movlw	0
  3677  16AF  160A  158A  2737  160A  118A  	fcall	_usart_send
  3678                           
  3679                           ;zb_znp.c: 149:     usart_send(0x00);
  3680  16B4  3000               	movlw	0
  3681  16B5  160A  158A  2737  160A  118A  	fcall	_usart_send
  3682                           
  3683                           ;zb_znp.c: 150:     usart_send(0x22);
  3684  16BA  3022               	movlw	34
  3685  16BB  160A  158A  2737  160A  118A  	fcall	_usart_send
  3686                           
  3687                           ;zb_znp.c: 151:     wait_for_status(0x6F08, 0, 0x00);
  3688  16C0  3008               	movlw	8
  3689  16C1  00AB               	movwf	wait_for_status@cmd
  3690  16C2  306F               	movlw	111
  3691  16C3  00AC               	movwf	wait_for_status@cmd+1
  3692  16C4  01AD               	clrf	wait_for_status@offset
  3693  16C5  01AE               	clrf	wait_for_status@status_to_wait
  3694  16C6  160A  118A  2085   	fcall	_wait_for_status
  3695  16C9  0008               	return
  3696  16CA                     __end_of_znp_set_channels:
  3697                           
  3698                           	psect	text9
  3699  1403                     __ptext9:	
  3700 ;; *************** function _znp_af_register *****************
  3701 ;; Defined at:
  3702 ;;		line 172 in file "zb_znp.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  endpoint        1    wreg     unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  endpoint        1   15[BANK0 ] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 300/800
  3713 ;;		On exit  : B00/800
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         0       0       0       0       0
  3717 ;;      Locals:         0       1       0       0       0
  3718 ;;      Temps:          0       0       0       0       0
  3719 ;;      Totals:         0       1       0       0       0
  3720 ;;Total ram usage:        1 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 7
  3723 ;; This function calls:
  3724 ;;		_usart_send
  3725 ;;		_wait_for_status
  3726 ;; This function is called by:
  3727 ;;		_znp_router_start
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731  1403                     _znp_af_register:	
  3732                           ;psect for function _znp_af_register
  3733                           
  3734                           
  3735                           ;incstack = 0
  3736 ;; hardware stack exceeded
  3737                           ; Regs used in _znp_af_register: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3738                           ;znp_af_register@endpoint stored from wreg
  3739  1403  00AF               	movwf	znp_af_register@endpoint
  3740                           
  3741                           ;zb_znp.c: 173:     usart_send(0xFE);
  3742  1404  30FE               	movlw	254
  3743  1405  160A  158A  2737  160A  118A  	fcall	_usart_send
  3744                           
  3745                           ;zb_znp.c: 174:     usart_send(0x09);
  3746  140A  3009               	movlw	9
  3747  140B  160A  158A  2737  160A  118A  	fcall	_usart_send
  3748                           
  3749                           ;zb_znp.c: 175:     usart_send(0x24);
  3750  1410  3024               	movlw	36
  3751  1411  160A  158A  2737  160A  118A  	fcall	_usart_send
  3752                           
  3753                           ;zb_znp.c: 176:     usart_send(0x00);
  3754  1416  3000               	movlw	0
  3755  1417  160A  158A  2737  160A  118A  	fcall	_usart_send
  3756                           
  3757                           ;zb_znp.c: 177:     usart_send(endpoint);
  3758  141C  082F               	movf	znp_af_register@endpoint,w
  3759  141D  160A  158A  2737  160A  118A  	fcall	_usart_send
  3760                           
  3761                           ;zb_znp.c: 178:     usart_send(0x04);
  3762  1422  3004               	movlw	4
  3763  1423  160A  158A  2737  160A  118A  	fcall	_usart_send
  3764                           
  3765                           ;zb_znp.c: 179:     usart_send(0x01);
  3766  1428  3001               	movlw	1
  3767  1429  160A  158A  2737  160A  118A  	fcall	_usart_send
  3768                           
  3769                           ;zb_znp.c: 180:     usart_send(0x23);
  3770  142E  3023               	movlw	35
  3771  142F  160A  158A  2737  160A  118A  	fcall	_usart_send
  3772                           
  3773                           ;zb_znp.c: 181:     usart_send(0x01);
  3774  1434  3001               	movlw	1
  3775  1435  160A  158A  2737  160A  118A  	fcall	_usart_send
  3776                           
  3777                           ;zb_znp.c: 182:     usart_send(0x89);
  3778  143A  3089               	movlw	137
  3779  143B  160A  158A  2737  160A  118A  	fcall	_usart_send
  3780                           
  3781                           ;zb_znp.c: 183:     usart_send(0x00);
  3782  1440  3000               	movlw	0
  3783  1441  160A  158A  2737  160A  118A  	fcall	_usart_send
  3784                           
  3785                           ;zb_znp.c: 184:     usart_send(0x00);
  3786  1446  3000               	movlw	0
  3787  1447  160A  158A  2737  160A  118A  	fcall	_usart_send
  3788                           
  3789                           ;zb_znp.c: 185:     usart_send(0x00);
  3790  144C  3000               	movlw	0
  3791  144D  160A  158A  2737  160A  118A  	fcall	_usart_send
  3792                           
  3793                           ;zb_znp.c: 186:     usart_send(0x83 ^ endpoint);
  3794  1452  082F               	movf	znp_af_register@endpoint,w
  3795  1453  3A83               	xorlw	131
  3796  1454  160A  158A  2737  160A  118A  	fcall	_usart_send
  3797                           
  3798                           ;zb_znp.c: 187:     wait_for_status(0x6400, 0, 0x00);
  3799  1459  3000               	movlw	0
  3800  145A  00AB               	movwf	wait_for_status@cmd
  3801  145B  3064               	movlw	100
  3802  145C  00AC               	movwf	wait_for_status@cmd+1
  3803  145D  01AD               	clrf	wait_for_status@offset
  3804  145E  01AE               	clrf	wait_for_status@status_to_wait
  3805  145F  160A  118A  2085   	fcall	_wait_for_status
  3806  1462  0008               	return
  3807  1463                     __end_of_znp_af_register:
  3808                           
  3809                           	psect	text10
  3810  1085                     __ptext10:	
  3811 ;; *************** function _wait_for_status *****************
  3812 ;; Defined at:
  3813 ;;		line 33 in file "zb_znp.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  cmd             2   11[BANK0 ] unsigned int 
  3816 ;;  offset          1   13[BANK0 ] unsigned char 
  3817 ;;  status_to_wa    1   14[BANK0 ] unsigned char 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 300/800
  3826 ;;		On exit  : B00/800
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       4       0       0       0
  3830 ;;      Locals:         0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0
  3832 ;;      Totals:         0       4       0       0       0
  3833 ;;Total ram usage:        4 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 6
  3836 ;; This function calls:
  3837 ;;		_wait_for_msg
  3838 ;; This function is called by:
  3839 ;;		_znp_set_startopt
  3840 ;;		_znp_set_logical_type
  3841 ;;		_znp_set_channels
  3842 ;;		_znp_af_register
  3843 ;;		_znp_af_data_request
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847  1085                     _wait_for_status:	
  3848                           ;psect for function _wait_for_status
  3849                           
  3850  1085                     l460:	
  3851                           ;incstack = 0
  3852 ;; hardware stack exceeded
  3853                           ; Regs used in _wait_for_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3854                           ;zb_znp.c: 34:     do {
  3855                           
  3856                           
  3857                           ;zb_znp.c: 35:         wait_for_msg(cmd);
  3858  1085  082C               	movf	wait_for_status@cmd+1,w
  3859  1086  00AA               	movwf	wait_for_msg@cmd+1
  3860  1087  082B               	movf	wait_for_status@cmd,w
  3861  1088  00A9               	movwf	wait_for_msg@cmd
  3862  1089  160A  158A  2763  160A  118A  	fcall	_wait_for_msg
  3863                           
  3864                           ;zb_znp.c: 36:     } while (znp_data_rcv[offset] != status_to_wait);
  3865  108E  082D               	movf	wait_for_status@offset,w
  3866  108F  3E10               	addlw	(low (_znp_data_rcv| (0+256)))& (0+255)
  3867  1090  0084               	movwf	4
  3868  1091  1783               	bsf	3,7	;select IRP bank2
  3869  1092  0800               	movf	0,w
  3870  1093  062E               	xorwf	wait_for_status@status_to_wait,w
  3871  1094  1903               	btfsc	3,2
  3872  1095  0008               	return
  3873  1096  2885               	goto	l460
  3874  1097                     __end_of_wait_for_status:
  3875                           
  3876                           	psect	text11
  3877  1F63                     __ptext11:	
  3878 ;; *************** function _wait_for_msg *****************
  3879 ;; Defined at:
  3880 ;;		line 28 in file "zb_znp.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  cmd             2    9[BANK0 ] unsigned int 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2
  3889 ;; Tracked objects:
  3890 ;;		On entry : 300/800
  3891 ;;		On exit  : 300/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3894 ;;      Params:         0       2       0       0       0
  3895 ;;      Locals:         0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0
  3897 ;;      Totals:         0       2       0       0       0
  3898 ;;Total ram usage:        2 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 5
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_wait_for_status
  3905 ;;		_znp_hard_reset
  3906 ;;		_znp_zdo_startup_from_app
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910  1F63                     _wait_for_msg:	
  3911                           ;psect for function _wait_for_msg
  3912                           
  3913  1F63                     l4260:	
  3914                           ;zb_znp.c: 29:     while (last_cmd_rcv != cmd);
  3915                           
  3916                           ;incstack = 0
  3917 ;; hardware stack exceeded
  3918                           ; Regs used in _wait_for_msg: [wreg+status,2]
  3919                           
  3920  1F63  082A               	movf	wait_for_msg@cmd+1,w
  3921  1F64  065C               	xorwf	_last_cmd_rcv+1,w	;volatile
  3922  1F65  1D03               	skipz
  3923  1F66  2F69               	goto	u4495
  3924  1F67  0829               	movf	wait_for_msg@cmd,w
  3925  1F68  065B               	xorwf	_last_cmd_rcv,w	;volatile
  3926  1F69                     u4495:
  3927  1F69  1D03               	skipz
  3928  1F6A  2F63               	goto	l4260
  3929                           
  3930                           ;zb_znp.c: 30:     last_cmd_rcv = 0x00;
  3931  1F6B  01DB               	clrf	_last_cmd_rcv	;volatile
  3932  1F6C  01DC               	clrf	_last_cmd_rcv+1	;volatile
  3933  1F6D  0008               	return
  3934  1F6E                     __end_of_wait_for_msg:
  3935                           
  3936                           	psect	text12
  3937  1F37                     __ptext12:	
  3938 ;; *************** function _usart_send *****************
  3939 ;; Defined at:
  3940 ;;		line 20 in file "usart.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  c               1    wreg     unsigned char 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  c               1    9[BANK0 ] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg
  3949 ;; Tracked objects:
  3950 ;;		On entry : 300/800
  3951 ;;		On exit  : 300/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         0       0       0       0       0
  3955 ;;      Locals:         0       1       0       0       0
  3956 ;;      Temps:          0       0       0       0       0
  3957 ;;      Totals:         0       1       0       0       0
  3958 ;;Total ram usage:        1 bytes
  3959 ;; Hardware stack levels used: 1
  3960 ;; Hardware stack levels required when called: 5
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_znp_set_startopt
  3965 ;;		_znp_set_logical_type
  3966 ;;		_znp_set_channels
  3967 ;;		_znp_af_register
  3968 ;;		_znp_zdo_startup_from_app
  3969 ;;		_znp_af_data_request
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973  1F37                     _usart_send:	
  3974                           ;psect for function _usart_send
  3975                           
  3976                           
  3977                           ;incstack = 0
  3978                           ; Regs used in _usart_send: [wreg]
  3979                           ;usart_send@c stored from wreg
  3980  1F37  00A9               	movwf	usart_send@c
  3981  1F38                     l416:	
  3982                           ;usart.c: 21:     while (!TXSTAbits.TRMT);
  3983                           
  3984  1F38  1683               	bsf	3,5	;RP0=1, select bank1
  3985  1F39  1C98               	btfss	24,1	;volatile
  3986  1F3A  2F38               	goto	l416
  3987                           
  3988                           ;usart.c: 22:     TXREG = c;
  3989  1F3B  1283               	bcf	3,5	;RP0=0, select bank0
  3990  1F3C  0829               	movf	usart_send@c,w
  3991  1F3D  0099               	movwf	25	;volatile
  3992  1F3E  0008               	return
  3993  1F3F                     __end_of_usart_send:
  3994                           
  3995                           	psect	text13
  3996  10C1                     __ptext13:	
  3997 ;; *************** function _znp_init *****************
  3998 ;; Defined at:
  3999 ;;		line 154 in file "zb_znp.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  callback        1    wreg     PTR FTN(unsigned int ,PT
  4002 ;;		 -> znp_msg_handler(1), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  callback        1   12[BANK0 ] PTR FTN(unsigned int ,PT
  4005 ;;		 -> znp_msg_handler(1), 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 300/800
  4012 ;;		On exit  : 300/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         0       1       0       0       0
  4017 ;;      Temps:          0       1       0       0       0
  4018 ;;      Totals:         0       2       0       0       0
  4019 ;;Total ram usage:        2 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 6
  4022 ;; This function calls:
  4023 ;;		_usart_add_isr_handler
  4024 ;;		_usart_init
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030  10C1                     _znp_init:	
  4031                           ;psect for function _znp_init
  4032                           
  4033                           
  4034                           ;incstack = 0
  4035                           ; Regs used in _znp_init: [wreg+status,2+status,0+pclath+cstack]
  4036                           ;znp_init@callback stored from wreg
  4037  10C1  00AC               	movwf	znp_init@callback
  4038                           
  4039                           ;zb_znp.c: 155:     _zb_znp_cb = callback;
  4040  10C2  082C               	movf	znp_init@callback,w
  4041  10C3  00AB               	movwf	??_znp_init
  4042  10C4  082B               	movf	??_znp_init,w
  4043  10C5  1683               	bsf	3,5	;RP0=1, select bank3
  4044  10C6  1703               	bsf	3,6	;RP1=1, select bank3
  4045  10C7  00BD               	movwf	__zb_znp_cb^(0+384)
  4046                           
  4047                           ;zb_znp.c: 158:     TRISDbits.TRISD4 = 0;
  4048  10C8  1303               	bcf	3,6	;RP1=0, select bank1
  4049  10C9  1208               	bcf	8,4	;volatile
  4050                           
  4051                           ;zb_znp.c: 159:     PORTDbits.RD4 = 0;
  4052  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  4053  10CB  1208               	bcf	8,4	;volatile
  4054                           
  4055                           ;zb_znp.c: 161:     usart_init();
  4056  10CC  160A  118A  2051  160A  118A  	fcall	_usart_init
  4057                           
  4058                           ;zb_znp.c: 162:     usart_add_isr_handler(znp_usart_event_handler);
  4059  10D1  3013               	movlw	(low (fp__znp_usart_event_handler-i1fpbase))& (0+255)
  4060  10D2  160A  158A  27B1   	fcall	_usart_add_isr_handler
  4061  10D5  0008               	return
  4062  10D6                     __end_of_znp_init:
  4063                           
  4064                           	psect	text14
  4065  1051                     __ptext14:	
  4066 ;; *************** function _usart_init *****************
  4067 ;; Defined at:
  4068 ;;		line 3 in file "usart.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg
  4077 ;; Tracked objects:
  4078 ;;		On entry : 300/800
  4079 ;;		On exit  : 300/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4082 ;;      Params:         0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0
  4085 ;;      Totals:         0       0       0       0       0
  4086 ;;Total ram usage:        0 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 5
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_znp_init
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096  1051                     _usart_init:	
  4097                           ;psect for function _usart_init
  4098                           
  4099                           
  4100                           ;usart.c: 4:     TRISCbits.TRISC6 = 0;
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _usart_init: [wreg]
  4104  1051  1683               	bsf	3,5	;RP0=1, select bank1
  4105  1052  1307               	bcf	7,6	;volatile
  4106                           
  4107                           ;usart.c: 5:     TRISCbits.TRISC7 = 1;
  4108  1053  1787               	bsf	7,7	;volatile
  4109                           
  4110                           ;usart.c: 7:     BAUDCTLbits.BRG16 = 0;
  4111  1054  1703               	bsf	3,6	;RP1=1, select bank3
  4112  1055  1187               	bcf	7,3	;volatile
  4113                           
  4114                           ;usart.c: 9:     TXSTAbits.TX9 = 0;
  4115  1056  1303               	bcf	3,6	;RP1=0, select bank1
  4116  1057  1318               	bcf	24,6	;volatile
  4117                           
  4118                           ;usart.c: 10:     TXSTAbits.SYNC = 0;
  4119  1058  1218               	bcf	24,4	;volatile
  4120                           
  4121                           ;usart.c: 11:     TXSTAbits.BRGH = 1;
  4122  1059  1518               	bsf	24,2	;volatile
  4123                           
  4124                           ;usart.c: 12:     TXSTAbits.TXEN = 1;
  4125  105A  1698               	bsf	24,5	;volatile
  4126                           
  4127                           ;usart.c: 13:     SPBRG = 25;
  4128  105B  3019               	movlw	25
  4129  105C  0099               	movwf	25	;volatile
  4130                           
  4131                           ;usart.c: 15:     RCSTAbits.SPEN = 1;
  4132  105D  1283               	bcf	3,5	;RP0=0, select bank0
  4133  105E  1798               	bsf	24,7	;volatile
  4134                           
  4135                           ;usart.c: 16:     RCSTAbits.RX9 = 0;
  4136  105F  1318               	bcf	24,6	;volatile
  4137                           
  4138                           ;usart.c: 17:     RCSTAbits.CREN = 1;
  4139  1060  1618               	bsf	24,4	;volatile
  4140  1061  0008               	return
  4141  1062                     __end_of_usart_init:
  4142                           
  4143                           	psect	text15
  4144  1FB1                     __ptext15:	
  4145 ;; *************** function _usart_add_isr_handler *****************
  4146 ;; Defined at:
  4147 ;;		line 15 in file "it_handle.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  handler         1    wreg     PTR FTN(enum E1502,PTR v
  4150 ;;		 -> znp_usart_event_handler(1), 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  handler         1   10[BANK0 ] PTR FTN(enum E1502,PTR v
  4153 ;;		 -> znp_usart_event_handler(1), 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 300/800
  4160 ;;		On exit  : 300/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         0       0       0       0       0
  4164 ;;      Locals:         0       1       0       0       0
  4165 ;;      Temps:          0       1       0       0       0
  4166 ;;      Totals:         0       2       0       0       0
  4167 ;;Total ram usage:        2 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; Hardware stack levels required when called: 5
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_znp_init
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177  1FB1                     _usart_add_isr_handler:	
  4178                           ;psect for function _usart_add_isr_handler
  4179                           
  4180                           
  4181                           ;incstack = 0
  4182                           ; Regs used in _usart_add_isr_handler: [wreg+status,2+status,0]
  4183                           ;usart_add_isr_handler@handler stored from wreg
  4184  1FB1  00AA               	movwf	usart_add_isr_handler@handler
  4185                           
  4186                           ;it_handle.c: 16:     PIE1bits.RCIE = 1;
  4187  1FB2  1683               	bsf	3,5	;RP0=1, select bank1
  4188  1FB3  168C               	bsf	12,5	;volatile
  4189                           
  4190                           ;it_handle.c: 17:     OPTION_REGbits.T0CS = 0;
  4191  1FB4  1281               	bcf	1,5	;volatile
  4192                           
  4193                           ;it_handle.c: 18:     OPTION_REGbits.PS = 0b011;
  4194  1FB5  0801               	movf	1,w	;volatile
  4195  1FB6  39F8               	andlw	-8
  4196  1FB7  3803               	iorlw	3
  4197  1FB8  0081               	movwf	1	;volatile
  4198                           
  4199                           ;it_handle.c: 19:     OPTION_REGbits.PSA = 0;
  4200  1FB9  1181               	bcf	1,3	;volatile
  4201                           
  4202                           ;it_handle.c: 20:     _usart_rx_isr = handler;
  4203  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  4204  1FBB  082A               	movf	usart_add_isr_handler@handler,w
  4205  1FBC  00A9               	movwf	??_usart_add_isr_handler
  4206  1FBD  0829               	movf	??_usart_add_isr_handler,w
  4207  1FBE  00E5               	movwf	__usart_rx_isr
  4208  1FBF  0008               	return
  4209  1FC0                     __end_of_usart_add_isr_handler:
  4210                           
  4211                           	psect	text16
  4212  080A                     __ptext16:	
  4213 ;; *************** function _xEventGroupWaitBits *****************
  4214 ;; Defined at:
  4215 ;;		line 10 in file "event_groups.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  uxBitsToWait    1    wreg     const unsigned char 
  4218 ;;  ticks_to_wai    4   13[BANK0 ] const unsigned long 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  uxBitsToWait    1   25[BANK0 ] const unsigned char 
  4221 ;;  last_tick       4   21[BANK0 ] unsigned long 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      unsigned char 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 300/800
  4228 ;;		On exit  : A00/800
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         0       4       0       0       0
  4232 ;;      Locals:         0       5       0       0       0
  4233 ;;      Temps:          0       4       0       0       0
  4234 ;;      Totals:         0      13       0       0       0
  4235 ;;Total ram usage:       13 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 6
  4238 ;; This function calls:
  4239 ;;		_sys_tick_get_tick
  4240 ;; This function is called by:
  4241 ;;		_main
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245  080A                     _xEventGroupWaitBits:	
  4246                           ;psect for function _xEventGroupWaitBits
  4247                           
  4248                           
  4249                           ;incstack = 0
  4250                           ; Regs used in _xEventGroupWaitBits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4251                           ;xEventGroupWaitBits@uxBitsToWaitFor stored from wreg
  4252  080A  00B9               	movwf	xEventGroupWaitBits@uxBitsToWaitFor
  4253                           
  4254                           ;event_groups.c: 10: EventBits_t xEventGroupWaitBits(const EventBits_t uxBitsToWaitFor,;
      +                          event_groups.c: 11:                                 const sys_tick_t ticks_to_wait) {;ev
      +                          ent_groups.c: 13:     sys_tick_t last_tick = sys_tick_get_tick();
  4255  080B  160A  118A  2073  120A  158A  	fcall	_sys_tick_get_tick
  4256  0810  082C               	movf	?_sys_tick_get_tick+3,w
  4257  0811  00B8               	movwf	xEventGroupWaitBits@last_tick+3
  4258  0812  082B               	movf	?_sys_tick_get_tick+2,w
  4259  0813  00B7               	movwf	xEventGroupWaitBits@last_tick+2
  4260  0814  082A               	movf	?_sys_tick_get_tick+1,w
  4261  0815  00B6               	movwf	xEventGroupWaitBits@last_tick+1
  4262  0816  0829               	movf	?_sys_tick_get_tick,w
  4263  0817  00B5               	movwf	xEventGroupWaitBits@last_tick
  4264                           
  4265                           ;event_groups.c: 14:     while (sys_tick_get_tick() - last_tick <= ticks_to_wait)
  4266  0818  2824               	goto	l5316
  4267  0819                     l5310:
  4268                           
  4269                           ;event_groups.c: 15:         if (uxBits & uxBitsToWaitFor) return uxBits & uxBitsToWaitF
      +                          or;
  4270  0819  1683               	bsf	3,5	;RP0=1, select bank1
  4271  081A  0867               	movf	_uxBits^(0+128),w
  4272  081B  1283               	bcf	3,5	;RP0=0, select bank0
  4273  081C  0539               	andwf	xEventGroupWaitBits@uxBitsToWaitFor,w
  4274  081D  1903               	btfsc	3,2
  4275  081E  2824               	goto	l5316
  4276  081F  1683               	bsf	3,5	;RP0=1, select bank1
  4277  0820  0867               	movf	_uxBits^(0+128),w
  4278  0821  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0822  0539               	andwf	xEventGroupWaitBits@uxBitsToWaitFor,w
  4280  0823  0008               	return
  4281  0824                     l5316:
  4282                           
  4283                           ;event_groups.c: 14:     while (sys_tick_get_tick() - last_tick <= ticks_to_wait)
  4284  0824  160A  118A  2073  120A  158A  	fcall	_sys_tick_get_tick
  4285  0829  0829               	movf	?_sys_tick_get_tick,w
  4286  082A  00B1               	movwf	??_xEventGroupWaitBits
  4287  082B  082A               	movf	?_sys_tick_get_tick+1,w
  4288  082C  00B2               	movwf	??_xEventGroupWaitBits+1
  4289  082D  082B               	movf	?_sys_tick_get_tick+2,w
  4290  082E  00B3               	movwf	??_xEventGroupWaitBits+2
  4291  082F  082C               	movf	?_sys_tick_get_tick+3,w
  4292  0830  00B4               	movwf	??_xEventGroupWaitBits+3
  4293  0831  0835               	movf	xEventGroupWaitBits@last_tick,w
  4294  0832  02B1               	subwf	??_xEventGroupWaitBits,f
  4295  0833  0836               	movf	xEventGroupWaitBits@last_tick+1,w
  4296  0834  1C03               	skipc
  4297  0835  0F36               	incfsz	xEventGroupWaitBits@last_tick+1,w
  4298  0836  2838               	goto	u6301
  4299  0837  2839               	goto	u6302
  4300  0838                     u6301:
  4301  0838  02B2               	subwf	??_xEventGroupWaitBits+1,f
  4302  0839                     u6302:
  4303  0839  0837               	movf	xEventGroupWaitBits@last_tick+2,w
  4304  083A  1C03               	skipc
  4305  083B  0F37               	incfsz	xEventGroupWaitBits@last_tick+2,w
  4306  083C  283E               	goto	u6303
  4307  083D  283F               	goto	u6304
  4308  083E                     u6303:
  4309  083E  02B3               	subwf	??_xEventGroupWaitBits+2,f
  4310  083F                     u6304:
  4311  083F  0838               	movf	xEventGroupWaitBits@last_tick+3,w
  4312  0840  1C03               	skipc
  4313  0841  0F38               	incfsz	xEventGroupWaitBits@last_tick+3,w
  4314  0842  2844               	goto	u6305
  4315  0843  2845               	goto	u6306
  4316  0844                     u6305:
  4317  0844  02B4               	subwf	??_xEventGroupWaitBits+3,f
  4318  0845                     u6306:
  4319  0845  0834               	movf	??_xEventGroupWaitBits+3,w
  4320  0846  0230               	subwf	xEventGroupWaitBits@ticks_to_wait+3,w
  4321  0847  1D03               	skipz
  4322  0848  2853               	goto	u6315
  4323  0849  0833               	movf	??_xEventGroupWaitBits+2,w
  4324  084A  022F               	subwf	xEventGroupWaitBits@ticks_to_wait+2,w
  4325  084B  1D03               	skipz
  4326  084C  2853               	goto	u6315
  4327  084D  0832               	movf	??_xEventGroupWaitBits+1,w
  4328  084E  022E               	subwf	xEventGroupWaitBits@ticks_to_wait+1,w
  4329  084F  1D03               	skipz
  4330  0850  2853               	goto	u6315
  4331  0851  0831               	movf	??_xEventGroupWaitBits,w
  4332  0852  022D               	subwf	xEventGroupWaitBits@ticks_to_wait,w
  4333  0853                     u6315:
  4334  0853  1803               	skipnc
  4335  0854  2819               	goto	l5310
  4336                           
  4337                           ;event_groups.c: 16:     return uxBits;
  4338  0855  1683               	bsf	3,5	;RP0=1, select bank1
  4339  0856  0867               	movf	_uxBits^(0+128),w
  4340  0857  0008               	return
  4341  0858                     __end_of_xEventGroupWaitBits:
  4342                           
  4343                           	psect	text17
  4344  1073                     __ptext17:	
  4345 ;; *************** function _sys_tick_get_tick *****************
  4346 ;; Defined at:
  4347 ;;		line 62 in file "sys_tick.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  4    9[BANK0 ] unsigned long 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/800
  4358 ;;		On exit  : B00/800
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4361 ;;      Params:         0       4       0       0       0
  4362 ;;      Locals:         0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0
  4364 ;;      Totals:         0       4       0       0       0
  4365 ;;Total ram usage:        4 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 5
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;;		_xEventGroupWaitBits
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376  1073                     _sys_tick_get_tick:	
  4377                           ;psect for function _sys_tick_get_tick
  4378                           
  4379                           
  4380                           ;sys_tick.c: 63:     return _sys_tick.tick;
  4381                           
  4382                           ;incstack = 0
  4383                           ; Regs used in _sys_tick_get_tick: [wreg-fsr0h+status,2+status,0]
  4384  1073  301F               	movlw	31
  4385  1074  3E90               	addlw	(low (__sys_tick| (0+256)))& (0+255)
  4386  1075  0084               	movwf	4
  4387  1076  1783               	bsf	3,7	;select IRP bank3
  4388  1077  0800               	movf	0,w
  4389  1078  1283               	bcf	3,5	;RP0=0, select bank0
  4390  1079  1303               	bcf	3,6	;RP1=0, select bank0
  4391  107A  00A9               	movwf	?_sys_tick_get_tick
  4392  107B  0A84               	incf	4,f
  4393  107C  0800               	movf	0,w
  4394  107D  00AA               	movwf	?_sys_tick_get_tick+1
  4395  107E  0A84               	incf	4,f
  4396  107F  0800               	movf	0,w
  4397  1080  00AB               	movwf	?_sys_tick_get_tick+2
  4398  1081  0A84               	incf	4,f
  4399  1082  0800               	movf	0,w
  4400  1083  00AC               	movwf	?_sys_tick_get_tick+3
  4401  1084  0008               	return
  4402  1085                     __end_of_sys_tick_get_tick:
  4403                           
  4404                           	psect	text18
  4405  1F1C                     __ptext18:	
  4406 ;; *************** function _xEventGroupGetBits *****************
  4407 ;; Defined at:
  4408 ;;		line 33 in file "event_groups.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      unsigned char 
  4415 ;; Registers used:
  4416 ;;		wreg
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/B00
  4419 ;;		On exit  : 300/100
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0
  4425 ;;      Totals:         0       0       0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; Hardware stack levels required when called: 5
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436  1F1C                     _xEventGroupGetBits:	
  4437                           ;psect for function _xEventGroupGetBits
  4438                           
  4439                           
  4440                           ;event_groups.c: 34:     return uxBits;
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in _xEventGroupGetBits: [wreg]
  4444  1F1C  1683               	bsf	3,5	;RP0=1, select bank1
  4445  1F1D  1303               	bcf	3,6	;RP1=0, select bank1
  4446  1F1E  0867               	movf	_uxBits^(0+128),w
  4447  1F1F  0008               	return
  4448  1F20                     __end_of_xEventGroupGetBits:
  4449                           
  4450                           	psect	text19
  4451  1F11                     __ptext19:	
  4452 ;; *************** function _xEventGroupCreate *****************
  4453 ;; Defined at:
  4454 ;;		line 6 in file "event_groups.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		status,2
  4463 ;; Tracked objects:
  4464 ;;		On entry : B00/B00
  4465 ;;		On exit  : B00/900
  4466 ;;		Unchanged: 800/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4468 ;;      Params:         0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 5
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_main
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482  1F11                     _xEventGroupCreate:	
  4483                           ;psect for function _xEventGroupCreate
  4484                           
  4485                           
  4486                           ;event_groups.c: 7:     uxBits = 0;
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in _xEventGroupCreate: [status,2]
  4490  1F11  1303               	bcf	3,6	;RP1=0, select bank1
  4491  1F12  01E7               	clrf	_uxBits^(0+128)
  4492  1F13  0008               	return
  4493  1F14                     __end_of_xEventGroupCreate:
  4494                           
  4495                           	psect	text20
  4496  1000                     __ptext20:	
  4497 ;; *************** function _xEventGroupClearBits *****************
  4498 ;; Defined at:
  4499 ;;		line 26 in file "event_groups.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  uxBitsToClea    1    wreg     const unsigned char 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  uxBitsToClea    1   10[BANK0 ] const unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      unsigned char 
  4506 ;; Registers used:
  4507 ;;		wreg, status,2, status,0
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/B00
  4510 ;;		On exit  : 300/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4513 ;;      Params:         0       0       0       0       0
  4514 ;;      Locals:         0       1       0       0       0
  4515 ;;      Temps:          0       1       0       0       0
  4516 ;;      Totals:         0       2       0       0       0
  4517 ;;Total ram usage:        2 bytes
  4518 ;; Hardware stack levels used: 1
  4519 ;; Hardware stack levels required when called: 5
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527  1000                     _xEventGroupClearBits:	
  4528                           ;psect for function _xEventGroupClearBits
  4529                           
  4530                           
  4531                           ;incstack = 0
  4532                           ; Regs used in _xEventGroupClearBits: [wreg+status,2+status,0]
  4533                           ;xEventGroupClearBits@uxBitsToClear stored from wreg
  4534  1000  1283               	bcf	3,5	;RP0=0, select bank0
  4535  1001  1303               	bcf	3,6	;RP1=0, select bank0
  4536  1002  00AA               	movwf	xEventGroupClearBits@uxBitsToClear
  4537  1003                     l551:	
  4538                           ;event_groups.c: 27:     do {
  4539                           
  4540                           
  4541                           ;event_groups.c: 28:         uxBits &= ~uxBitsToClear;
  4542  1003  092A               	comf	xEventGroupClearBits@uxBitsToClear,w
  4543  1004  00A9               	movwf	??_xEventGroupClearBits
  4544  1005  0829               	movf	??_xEventGroupClearBits,w
  4545  1006  1683               	bsf	3,5	;RP0=1, select bank1
  4546  1007  05E7               	andwf	_uxBits^(0+128),f
  4547                           
  4548                           ;event_groups.c: 29:     } while (uxBits & uxBitsToClear);
  4549  1008  0867               	movf	_uxBits^(0+128),w
  4550  1009  1283               	bcf	3,5	;RP0=0, select bank0
  4551  100A  052A               	andwf	xEventGroupClearBits@uxBitsToClear,w
  4552  100B  1903               	btfsc	3,2
  4553  100C  0008               	return
  4554  100D  2803               	goto	l551
  4555  100E                     __end_of_xEventGroupClearBits:
  4556                           
  4557                           	psect	text21
  4558  1194                     __ptext21:	
  4559 ;; *************** function _sys_tick_init *****************
  4560 ;; Defined at:
  4561 ;;		line 46 in file "sys_tick.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : B00/B00
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4575 ;;      Params:         0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0
  4578 ;;      Totals:         0       0       0       0       0
  4579 ;;Total ram usage:        0 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 6
  4582 ;; This function calls:
  4583 ;;		_timer1_add_isr_handler
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589  1194                     _sys_tick_init:	
  4590                           ;psect for function _sys_tick_init
  4591                           
  4592                           
  4593                           ;sys_tick.c: 49:     T1CONbits.T1CKPS = 0b10;
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _sys_tick_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4597  1194  1283               	bcf	3,5	;RP0=0, select bank0
  4598  1195  1303               	bcf	3,6	;RP1=0, select bank0
  4599  1196  0810               	movf	16,w	;volatile
  4600  1197  39CF               	andlw	-49
  4601  1198  3820               	iorlw	32
  4602  1199  0090               	movwf	16	;volatile
  4603                           
  4604                           ;sys_tick.c: 54:     T1CONbits.TMR1CS = 0;
  4605  119A  1090               	bcf	16,1	;volatile
  4606                           
  4607                           ;sys_tick.c: 55:     TMR1 = (65535U) - 50000U;
  4608  119B  303C               	movlw	60
  4609  119C  008F               	movwf	15	;volatile
  4610  119D  30AF               	movlw	175
  4611  119E  008E               	movwf	14	;volatile
  4612                           
  4613                           ;sys_tick.c: 56:     timer1_add_isr_handler(sys_tick_handler);
  4614  119F  300D               	movlw	(low (fp__sys_tick_handler-i1fpbase))& (0+255)
  4615  11A0  120A  158A  2000   	fcall	_timer1_add_isr_handler
  4616                           
  4617                           ;sys_tick.c: 57:     T1CONbits.TMR1ON = 1;
  4618  11A3  1410               	bsf	16,0	;volatile
  4619                           
  4620                           ;sys_tick.c: 58:     _sys_tick.tick = 0;
  4621  11A4  30AF               	movlw	low ((__sys_tick| (0+256)+31))
  4622  11A5  0084               	movwf	4
  4623  11A6  1783               	bsf	3,7	;select IRP bank2
  4624  11A7  0180               	clrf	0
  4625  11A8  0A84               	incf	4,f
  4626  11A9  0180               	clrf	0
  4627  11AA  0A84               	incf	4,f
  4628  11AB  0180               	clrf	0
  4629  11AC  0A84               	incf	4,f
  4630  11AD  0180               	clrf	0
  4631                           
  4632                           ;sys_tick.c: 59:     _sys_tick._handler_index = 0;
  4633  11AE  30F8               	movlw	-8
  4634  11AF  1683               	bsf	3,5	;RP0=1, select bank3
  4635  11B0  1703               	bsf	3,6	;RP1=1, select bank3
  4636  11B1  0590               	andwf	__sys_tick^(0+384),f
  4637  11B2  0008               	return
  4638  11B3                     __end_of_sys_tick_init:
  4639                           
  4640                           	psect	text22
  4641  0800                     __ptext22:	
  4642 ;; *************** function _timer1_add_isr_handler *****************
  4643 ;; Defined at:
  4644 ;;		line 23 in file "it_handle.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  handler         1    wreg     PTR FTN()void 
  4647 ;;		 -> sys_tick_handler(1), 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  handler         1   10[BANK0 ] PTR FTN()void 
  4650 ;;		 -> sys_tick_handler(1), 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg
  4655 ;; Tracked objects:
  4656 ;;		On entry : 300/0
  4657 ;;		On exit  : 300/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         0       0       0       0       0
  4661 ;;      Locals:         0       1       0       0       0
  4662 ;;      Temps:          0       1       0       0       0
  4663 ;;      Totals:         0       2       0       0       0
  4664 ;;Total ram usage:        2 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 5
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_sys_tick_init
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674  0800                     _timer1_add_isr_handler:	
  4675                           ;psect for function _timer1_add_isr_handler
  4676                           
  4677                           
  4678                           ;incstack = 0
  4679                           ; Regs used in _timer1_add_isr_handler: [wreg]
  4680                           ;timer1_add_isr_handler@handler stored from wreg
  4681  0800  00AA               	movwf	timer1_add_isr_handler@handler
  4682                           
  4683                           ;it_handle.c: 24:     PIR1bits.TMR1IF = 0;
  4684  0801  100C               	bcf	12,0	;volatile
  4685                           
  4686                           ;it_handle.c: 25:     PIE1bits.TMR1IE = 1;
  4687  0802  1683               	bsf	3,5	;RP0=1, select bank1
  4688  0803  140C               	bsf	12,0	;volatile
  4689                           
  4690                           ;it_handle.c: 26:     _tmr1_isr = handler;
  4691  0804  1283               	bcf	3,5	;RP0=0, select bank0
  4692  0805  082A               	movf	timer1_add_isr_handler@handler,w
  4693  0806  00A9               	movwf	??_timer1_add_isr_handler
  4694  0807  0829               	movf	??_timer1_add_isr_handler,w
  4695  0808  00E4               	movwf	__tmr1_isr
  4696  0809  0008               	return
  4697  080A                     __end_of_timer1_add_isr_handler:
  4698                           
  4699                           	psect	text23
  4700  1F2A                     __ptext23:	
  4701 ;; *************** function _relay_init *****************
  4702 ;; Defined at:
  4703 ;;		line 51 in file "main.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		None
  4712 ;; Tracked objects:
  4713 ;;		On entry : 300/800
  4714 ;;		On exit  : 300/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4717 ;;      Params:         0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 5
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_main
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731  1F2A                     _relay_init:	
  4732                           ;psect for function _relay_init
  4733                           
  4734                           
  4735                           ;main.c: 52:     TRISDbits.TRISD2 = 0;
  4736                           
  4737                           ;incstack = 0
  4738                           ; Regs used in _relay_init: []
  4739  1F2A  1683               	bsf	3,5	;RP0=1, select bank1
  4740  1F2B  1108               	bcf	8,2	;volatile
  4741                           
  4742                           ;main.c: 53:     PORTDbits.RD2 = 1;
  4743  1F2C  1283               	bcf	3,5	;RP0=0, select bank0
  4744  1F2D  1508               	bsf	8,2	;volatile
  4745  1F2E  0008               	return
  4746  1F2F                     __end_of_relay_init:
  4747                           
  4748                           	psect	text24
  4749  113B                     __ptext24:	
  4750 ;; *************** function _memset *****************
  4751 ;; Defined at:
  4752 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\memset.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  p1              1    wreg     PTR void 
  4755 ;;		 -> dev_data(13), 
  4756 ;;  c               2    9[BANK0 ] int 
  4757 ;;  n               2   11[BANK0 ] unsigned int 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  p1              1   14[BANK0 ] PTR void 
  4760 ;;		 -> dev_data(13), 
  4761 ;;  p               1   15[BANK0 ] PTR unsigned char 
  4762 ;;		 -> dev_data(13), 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      PTR void 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : B00/0
  4769 ;;		On exit  : 300/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4772 ;;      Params:         0       4       0       0       0
  4773 ;;      Locals:         0       2       0       0       0
  4774 ;;      Temps:          0       1       0       0       0
  4775 ;;      Totals:         0       7       0       0       0
  4776 ;;Total ram usage:        7 bytes
  4777 ;; Hardware stack levels used: 1
  4778 ;; Hardware stack levels required when called: 5
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_main
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786  113B                     _memset:	
  4787                           ;psect for function _memset
  4788                           
  4789                           
  4790                           ;incstack = 0
  4791                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  4792                           ;memset@p1 stored from wreg
  4793  113B  00AE               	movwf	memset@p1
  4794  113C  082E               	movf	memset@p1,w
  4795  113D  00AD               	movwf	??_memset
  4796  113E  082D               	movf	??_memset,w
  4797  113F  00AF               	movwf	memset@p
  4798  1140                     l5240:
  4799  1140  3001               	movlw	1
  4800  1141  02AB               	subwf	memset@n,f
  4801  1142  3000               	movlw	0
  4802  1143  1C03               	skipc
  4803  1144  03AC               	decf	memset@n+1,f
  4804  1145  02AC               	subwf	memset@n+1,f
  4805  1146  0A2B               	incf	memset@n,w
  4806  1147  1903               	btfsc	3,2
  4807  1148  0A2C               	incf	memset@n+1,w
  4808  1149  1903               	btfsc	3,2
  4809  114A  0008               	return
  4810  114B  0829               	movf	memset@c,w
  4811  114C  00AD               	movwf	??_memset
  4812  114D  082F               	movf	memset@p,w
  4813  114E  0084               	movwf	4
  4814  114F  082D               	movf	??_memset,w
  4815  1150  1783               	bsf	3,7	;select IRP bank2
  4816  1151  0080               	movwf	0
  4817  1152  3001               	movlw	1
  4818  1153  00AD               	movwf	??_memset
  4819  1154  082D               	movf	??_memset,w
  4820  1155  07AF               	addwf	memset@p,f
  4821  1156  2940               	goto	l5240
  4822  1157                     __end_of_memset:
  4823                           
  4824                           	psect	text25
  4825  1FF0                     __ptext25:	
  4826 ;; *************** function _led_ind_init *****************
  4827 ;; Defined at:
  4828 ;;		line 13 in file "led_ind.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/900
  4839 ;;		On exit  : 300/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0
  4844 ;;      Temps:          0       1       0       0       0
  4845 ;;      Totals:         0       1       0       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 7
  4849 ;; This function calls:
  4850 ;;		_led_ind_on
  4851 ;;		_sys_tick_register_callback_handler
  4852 ;; This function is called by:
  4853 ;;		_main
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857  1FF0                     _led_ind_init:	
  4858                           ;psect for function _led_ind_init
  4859                           
  4860                           
  4861                           ;led_ind.c: 14:     TRISBbits.TRISB5 = 0;
  4862                           
  4863                           ;incstack = 0
  4864                           ; Regs used in _led_ind_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4865  1FF0  1683               	bsf	3,5	;RP0=1, select bank1
  4866  1FF1  1303               	bcf	3,6	;RP1=0, select bank1
  4867  1FF2  1286               	bcf	6,5	;volatile
  4868                           
  4869                           ;led_ind.c: 15:     led_blink_handle = sys_tick_register_callback_handler(led_ind_blink_
      +                          handler);
  4870  1FF3  300A               	movlw	(low (fp__led_ind_blink_handler-i1fpbase))& (0+255)
  4871  1FF4  160A  118A  2463  160A  158A  	fcall	_sys_tick_register_callback_handler
  4872  1FF9  00B1               	movwf	??_led_ind_init
  4873  1FFA  0831               	movf	??_led_ind_init,w
  4874  1FFB  00DF               	movwf	_led_blink_handle
  4875                           
  4876                           ;led_ind.c: 16:     led_ind_on();
  4877  1FFC  160A  158A  270F   	fcall	_led_ind_on
  4878  1FFF  0008               	return
  4879  2000                     __end_of_led_ind_init:
  4880                           
  4881                           	psect	text26
  4882  1463                     __ptext26:	
  4883 ;; *************** function _sys_tick_register_callback_handler *****************
  4884 ;; Defined at:
  4885 ;;		line 66 in file "sys_tick.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  cb              1    wreg     PTR FTN()void 
  4888 ;;		 -> led_ind_blink_handler(1), 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  cb              1   15[BANK0 ] PTR FTN()void 
  4891 ;;		 -> led_ind_blink_handler(1), 
  4892 ;;  _handler_ind    1   16[BANK0 ] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      unsigned char 
  4895 ;; Registers used:
  4896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 300/900
  4899 ;;		On exit  : 300/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         0       0       0       0       0
  4903 ;;      Locals:         0       2       0       0       0
  4904 ;;      Temps:          0       2       0       0       0
  4905 ;;      Totals:         0       4       0       0       0
  4906 ;;Total ram usage:        4 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 6
  4909 ;; This function calls:
  4910 ;;		___bmul
  4911 ;; This function is called by:
  4912 ;;		_led_ind_init
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916  1463                     _sys_tick_register_callback_handler:	
  4917                           ;psect for function _sys_tick_register_callback_handler
  4918                           
  4919                           
  4920                           ;incstack = 0
  4921                           ; Regs used in _sys_tick_register_callback_handler: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
  4922                           ;sys_tick_register_callback_handler@cb stored from wreg
  4923  1463  1283               	bcf	3,5	;RP0=0, select bank0
  4924  1464  00AF               	movwf	sys_tick_register_callback_handler@cb
  4925                           
  4926                           ;sys_tick.c: 67:     uint8_t _handler_index = _sys_tick._handler_index;
  4927  1465  1683               	bsf	3,5	;RP0=1, select bank3
  4928  1466  1703               	bsf	3,6	;RP1=1, select bank3
  4929  1467  0810               	movf	__sys_tick^(0+384),w
  4930  1468  3907               	andlw	7
  4931  1469  1283               	bcf	3,5	;RP0=0, select bank0
  4932  146A  1303               	bcf	3,6	;RP1=0, select bank0
  4933  146B  00AD               	movwf	??_sys_tick_register_callback_handler
  4934  146C  082D               	movf	??_sys_tick_register_callback_handler,w
  4935  146D  00B0               	movwf	sys_tick_register_callback_handler@_handler_index
  4936                           
  4937                           ;sys_tick.c: 68:     if (_handler_index < 3) {
  4938  146E  3003               	movlw	3
  4939  146F  0230               	subwf	sys_tick_register_callback_handler@_handler_index,w
  4940  1470  1803               	skipnc
  4941  1471  2CCC               	goto	l4424
  4942                           
  4943                           ;sys_tick.c: 69:         _sys_tick._handle[_handler_index].cb = cb;
  4944  1472  082F               	movf	sys_tick_register_callback_handler@cb,w
  4945  1473  00AD               	movwf	??_sys_tick_register_callback_handler
  4946  1474  300A               	movlw	10
  4947  1475  00AE               	movwf	??_sys_tick_register_callback_handler+1
  4948  1476  082E               	movf	??_sys_tick_register_callback_handler+1,w
  4949  1477  00A9               	movwf	___bmul@multiplicand
  4950  1478  0830               	movf	sys_tick_register_callback_handler@_handler_index,w
  4951  1479  160A  118A  202F  160A  118A  	fcall	___bmul
  4952  147E  3E9A               	addlw	(low ((__sys_tick| (0+256)+10)))& (0+255)
  4953  147F  0084               	movwf	4
  4954  1480  082D               	movf	??_sys_tick_register_callback_handler,w
  4955  1481  1783               	bsf	3,7	;select IRP bank3
  4956  1482  0080               	movwf	0
  4957                           
  4958                           ;sys_tick.c: 70:         _sys_tick._handle[_handler_index]._en = 0;
  4959  1483  300A               	movlw	10
  4960  1484  00AD               	movwf	??_sys_tick_register_callback_handler
  4961  1485  082D               	movf	??_sys_tick_register_callback_handler,w
  4962  1486  00A9               	movwf	___bmul@multiplicand
  4963  1487  0830               	movf	sys_tick_register_callback_handler@_handler_index,w
  4964  1488  160A  118A  202F  160A  118A  	fcall	___bmul
  4965  148D  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  4966  148E  0084               	movwf	4
  4967  148F  1783               	bsf	3,7	;select IRP bank3
  4968  1490  1000               	bcf	0,0
  4969                           
  4970                           ;sys_tick.c: 71:         _sys_tick._handle[_handler_index]._handle = _handler_index;
  4971  1491  0830               	movf	sys_tick_register_callback_handler@_handler_index,w
  4972  1492  00AD               	movwf	??_sys_tick_register_callback_handler
  4973  1493  300A               	movlw	10
  4974  1494  00AE               	movwf	??_sys_tick_register_callback_handler+1
  4975  1495  082E               	movf	??_sys_tick_register_callback_handler+1,w
  4976  1496  00A9               	movwf	___bmul@multiplicand
  4977  1497  0830               	movf	sys_tick_register_callback_handler@_handler_index,w
  4978  1498  160A  118A  202F  160A  118A  	fcall	___bmul
  4979  149D  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  4980  149E  0084               	movwf	4
  4981  149F  0DAD               	rlf	??_sys_tick_register_callback_handler,f
  4982  14A0  0DAD               	rlf	??_sys_tick_register_callback_handler,f
  4983  14A1  1783               	bsf	3,7	;select IRP bank3
  4984  14A2  0800               	movf	0,w
  4985  14A3  062D               	xorwf	??_sys_tick_register_callback_handler,w
  4986  14A4  39E3               	andlw	-29
  4987  14A5  062D               	xorwf	??_sys_tick_register_callback_handler,w
  4988  14A6  0080               	movwf	0
  4989                           
  4990                           ;sys_tick.c: 72:         _sys_tick._handler_index++;
  4991  14A7  1683               	bsf	3,5	;RP0=1, select bank3
  4992  14A8  1703               	bsf	3,6	;RP1=1, select bank3
  4993  14A9  0810               	movf	__sys_tick^(0+384),w
  4994  14AA  3907               	andlw	7
  4995  14AB  1283               	bcf	3,5	;RP0=0, select bank0
  4996  14AC  1303               	bcf	3,6	;RP1=0, select bank0
  4997  14AD  00AD               	movwf	??_sys_tick_register_callback_handler
  4998  14AE  0AAD               	incf	??_sys_tick_register_callback_handler,f
  4999  14AF  1683               	bsf	3,5	;RP0=1, select bank3
  5000  14B0  1703               	bsf	3,6	;RP1=1, select bank3
  5001  14B1  0810               	movf	__sys_tick^(0+384),w
  5002  14B2  1283               	bcf	3,5	;RP0=0, select bank0
  5003  14B3  1303               	bcf	3,6	;RP1=0, select bank0
  5004  14B4  062D               	xorwf	??_sys_tick_register_callback_handler,w
  5005  14B5  39F8               	andlw	-8
  5006  14B6  062D               	xorwf	??_sys_tick_register_callback_handler,w
  5007  14B7  1683               	bsf	3,5	;RP0=1, select bank3
  5008  14B8  1703               	bsf	3,6	;RP1=1, select bank3
  5009  14B9  0090               	movwf	__sys_tick^(0+384)
  5010                           
  5011                           ;sys_tick.c: 73:         return _sys_tick._handle[_handler_index]._handle;
  5012  14BA  300A               	movlw	10
  5013  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  5014  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  5015  14BD  00AD               	movwf	??_sys_tick_register_callback_handler
  5016  14BE  082D               	movf	??_sys_tick_register_callback_handler,w
  5017  14BF  00A9               	movwf	___bmul@multiplicand
  5018  14C0  0830               	movf	sys_tick_register_callback_handler@_handler_index,w
  5019  14C1  160A  118A  202F   	fcall	___bmul
  5020  14C4  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  5021  14C5  0084               	movwf	4
  5022  14C6  1783               	bsf	3,7	;select IRP bank3
  5023  14C7  0C00               	rrf	0,w
  5024  14C8  00AE               	movwf	??_sys_tick_register_callback_handler+1
  5025  14C9  0C2E               	rrf	??_sys_tick_register_callback_handler+1,w
  5026  14CA  3907               	andlw	7
  5027  14CB  0008               	return
  5028  14CC                     l4424:
  5029  14CC  30FF               	movlw	255
  5030  14CD  0008               	return
  5031  14CE                     __end_of_sys_tick_register_callback_handler:
  5032                           
  5033                           	psect	text27
  5034  1F0F                     __ptext27:	
  5035 ;; *************** function _led_ind_on *****************
  5036 ;; Defined at:
  5037 ;;		line 28 in file "led_ind.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		None
  5046 ;; Tracked objects:
  5047 ;;		On entry : 300/800
  5048 ;;		On exit  : 300/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5051 ;;      Params:         0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 5
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_led_ind_init
  5062 ;;		_main
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066  1F0F                     _led_ind_on:	
  5067                           ;psect for function _led_ind_on
  5068                           
  5069                           
  5070                           ;led_ind.c: 29:     PORTBbits.RB5 = 1;
  5071                           
  5072                           ;incstack = 0
  5073                           ; Regs used in _led_ind_on: []
  5074  1F0F  1686               	bsf	6,5	;volatile
  5075  1F10  0008               	return
  5076  1F11                     __end_of_led_ind_on:
  5077                           
  5078                           	psect	text28
  5079  1F59                     __ptext28:	
  5080 ;; *************** function _led_ind_blink_stop *****************
  5081 ;; Defined at:
  5082 ;;		line 23 in file "led_ind.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 300/800
  5093 ;;		On exit  : 300/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5096 ;;      Params:         0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0
  5099 ;;      Totals:         0       0       0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 7
  5103 ;; This function calls:
  5104 ;;		_led_ind_off
  5105 ;;		_sys_tick_stop
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111  1F59                     _led_ind_blink_stop:	
  5112                           ;psect for function _led_ind_blink_stop
  5113                           
  5114                           
  5115                           ;led_ind.c: 24:     sys_tick_stop(led_blink_handle);
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _led_ind_blink_stop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5119  1F59  085F               	movf	_led_blink_handle,w
  5120  1F5A  160A  118A  2275  160A  158A  	fcall	_sys_tick_stop
  5121                           
  5122                           ;led_ind.c: 25:     led_ind_off();
  5123  1F5F  160A  158A  2718   	fcall	_led_ind_off
  5124  1F62  0008               	return
  5125  1F63                     __end_of_led_ind_blink_stop:
  5126                           
  5127                           	psect	text29
  5128  1275                     __ptext29:	
  5129 ;; *************** function _sys_tick_stop *****************
  5130 ;; Defined at:
  5131 ;;		line 100 in file "sys_tick.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  handle          1    wreg     unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  handle          1   15[BANK0 ] unsigned char 
  5136 ;;  i               1   16[BANK0 ] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 300/800
  5143 ;;		On exit  : 300/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5146 ;;      Params:         0       0       0       0       0
  5147 ;;      Locals:         0       2       0       0       0
  5148 ;;      Temps:          0       2       0       0       0
  5149 ;;      Totals:         0       4       0       0       0
  5150 ;;Total ram usage:        4 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 6
  5153 ;; This function calls:
  5154 ;;		___bmul
  5155 ;; This function is called by:
  5156 ;;		_led_ind_blink_stop
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160  1275                     _sys_tick_stop:	
  5161                           ;psect for function _sys_tick_stop
  5162                           
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _sys_tick_stop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5166                           ;sys_tick_stop@handle stored from wreg
  5167  1275  00AF               	movwf	sys_tick_stop@handle
  5168                           
  5169                           ;sys_tick.c: 101:     for (uint8_t i = 0; i < _sys_tick._handler_index; i++) {
  5170  1276  01B0               	clrf	sys_tick_stop@i
  5171  1277                     l601:
  5172  1277  1683               	bsf	3,5	;RP0=1, select bank3
  5173  1278  1703               	bsf	3,6	;RP1=1, select bank3
  5174  1279  0810               	movf	__sys_tick^(0+384),w
  5175  127A  3907               	andlw	7
  5176  127B  1283               	bcf	3,5	;RP0=0, select bank0
  5177  127C  1303               	bcf	3,6	;RP1=0, select bank0
  5178  127D  0230               	subwf	sys_tick_stop@i,w
  5179  127E  1803               	btfsc	3,0
  5180  127F  0008               	return
  5181                           
  5182                           ;sys_tick.c: 102:         if (_sys_tick._handle[i]._handle == handle) {
  5183  1280  300A               	movlw	10
  5184  1281  00AD               	movwf	??_sys_tick_stop
  5185  1282  082D               	movf	??_sys_tick_stop,w
  5186  1283  00A9               	movwf	___bmul@multiplicand
  5187  1284  0830               	movf	sys_tick_stop@i,w
  5188  1285  160A  118A  202F  160A  118A  	fcall	___bmul
  5189  128A  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  5190  128B  0084               	movwf	4
  5191  128C  1783               	bsf	3,7	;select IRP bank3
  5192  128D  0C00               	rrf	0,w
  5193  128E  00AE               	movwf	??_sys_tick_stop+1
  5194  128F  0C2E               	rrf	??_sys_tick_stop+1,w
  5195  1290  3907               	andlw	7
  5196  1291  062F               	xorwf	sys_tick_stop@handle,w
  5197  1292  1D03               	skipz
  5198  1293  2AA1               	goto	l4448
  5199                           
  5200                           ;sys_tick.c: 103:             _sys_tick._handle[i]._en = 0;
  5201  1294  300A               	movlw	10
  5202  1295  00AD               	movwf	??_sys_tick_stop
  5203  1296  082D               	movf	??_sys_tick_stop,w
  5204  1297  00A9               	movwf	___bmul@multiplicand
  5205  1298  0830               	movf	sys_tick_stop@i,w
  5206  1299  160A  118A  202F   	fcall	___bmul
  5207  129C  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  5208  129D  0084               	movwf	4
  5209  129E  1783               	bsf	3,7	;select IRP bank3
  5210  129F  1000               	bcf	0,0
  5211  12A0  0008               	return
  5212  12A1                     l4448:
  5213                           
  5214                           ;sys_tick.c: 106:     }
  5215  12A1  3001               	movlw	1
  5216  12A2  00AD               	movwf	??_sys_tick_stop
  5217  12A3  082D               	movf	??_sys_tick_stop,w
  5218  12A4  07B0               	addwf	sys_tick_stop@i,f
  5219  12A5  2A77               	goto	l601
  5220  12A6                     __end_of_sys_tick_stop:
  5221                           
  5222                           	psect	text30
  5223  1F18                     __ptext30:	
  5224 ;; *************** function _led_ind_off *****************
  5225 ;; Defined at:
  5226 ;;		line 32 in file "led_ind.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		None
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/800
  5237 ;;		On exit  : 300/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5240 ;;      Params:         0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0
  5243 ;;      Totals:         0       0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; Hardware stack levels required when called: 5
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_led_ind_blink_stop
  5251 ;;		_main
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255  1F18                     _led_ind_off:	
  5256                           ;psect for function _led_ind_off
  5257                           
  5258                           
  5259                           ;led_ind.c: 33:     PORTBbits.RB5 = 0;
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _led_ind_off: []
  5263  1F18  1283               	bcf	3,5	;RP0=0, select bank0
  5264  1F19  1303               	bcf	3,6	;RP1=0, select bank0
  5265  1F1A  1286               	bcf	6,5	;volatile
  5266  1F1B  0008               	return
  5267  1F1C                     __end_of_led_ind_off:
  5268                           
  5269                           	psect	text31
  5270  1F87                     __ptext31:	
  5271 ;; *************** function _led_ind_blink_start *****************
  5272 ;; Defined at:
  5273 ;;		line 19 in file "led_ind.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 300/800
  5284 ;;		On exit  : 300/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5287 ;;      Params:         0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 7
  5294 ;; This function calls:
  5295 ;;		_sys_tick_start_periodic
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301  1F87                     _led_ind_blink_start:	
  5302                           ;psect for function _led_ind_blink_start
  5303                           
  5304                           
  5305                           ;led_ind.c: 20:     sys_tick_start_periodic(led_blink_handle, 3);
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in _led_ind_blink_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5309  1F87  3000               	movlw	0
  5310  1F88  00B0               	movwf	sys_tick_start_periodic@tick+3
  5311  1F89  3000               	movlw	0
  5312  1F8A  00AF               	movwf	sys_tick_start_periodic@tick+2
  5313  1F8B  3000               	movlw	0
  5314  1F8C  00AE               	movwf	sys_tick_start_periodic@tick+1
  5315  1F8D  3003               	movlw	3
  5316  1F8E  00AD               	movwf	sys_tick_start_periodic@tick
  5317  1F8F  085F               	movf	_led_blink_handle,w
  5318  1F90  160A  118A  24CE   	fcall	_sys_tick_start_periodic
  5319  1F93  0008               	return
  5320  1F94                     __end_of_led_ind_blink_start:
  5321                           
  5322                           	psect	text32
  5323  14CE                     __ptext32:	
  5324 ;; *************** function _sys_tick_start_periodic *****************
  5325 ;; Defined at:
  5326 ;;		line 88 in file "sys_tick.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  handle          1    wreg     unsigned char 
  5329 ;;  tick            4   13[BANK0 ] unsigned long 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  handle          1   19[BANK0 ] unsigned char 
  5332 ;;  i               1   20[BANK0 ] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 300/800
  5339 ;;		On exit  : 300/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5342 ;;      Params:         0       4       0       0       0
  5343 ;;      Locals:         0       2       0       0       0
  5344 ;;      Temps:          0       2       0       0       0
  5345 ;;      Totals:         0       8       0       0       0
  5346 ;;Total ram usage:        8 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 6
  5349 ;; This function calls:
  5350 ;;		___bmul
  5351 ;; This function is called by:
  5352 ;;		_led_ind_blink_start
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356  14CE                     _sys_tick_start_periodic:	
  5357                           ;psect for function _sys_tick_start_periodic
  5358                           
  5359                           
  5360                           ;incstack = 0
  5361                           ; Regs used in _sys_tick_start_periodic: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5362                           ;sys_tick_start_periodic@handle stored from wreg
  5363  14CE  00B3               	movwf	sys_tick_start_periodic@handle
  5364                           
  5365                           ;sys_tick.c: 89:     for (uint8_t i = 0; i < _sys_tick._handler_index; i++) {
  5366  14CF  01B4               	clrf	sys_tick_start_periodic@i
  5367  14D0                     l594:
  5368  14D0  1683               	bsf	3,5	;RP0=1, select bank3
  5369  14D1  1703               	bsf	3,6	;RP1=1, select bank3
  5370  14D2  0810               	movf	__sys_tick^(0+384),w
  5371  14D3  3907               	andlw	7
  5372  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5373  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5374  14D6  0234               	subwf	sys_tick_start_periodic@i,w
  5375  14D7  1803               	btfsc	3,0
  5376  14D8  0008               	return
  5377                           
  5378                           ;sys_tick.c: 90:         if (_sys_tick._handle[i]._handle == handle) {
  5379  14D9  300A               	movlw	10
  5380  14DA  00B1               	movwf	??_sys_tick_start_periodic
  5381  14DB  0831               	movf	??_sys_tick_start_periodic,w
  5382  14DC  00A9               	movwf	___bmul@multiplicand
  5383  14DD  0834               	movf	sys_tick_start_periodic@i,w
  5384  14DE  160A  118A  202F  160A  118A  	fcall	___bmul
  5385  14E3  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  5386  14E4  0084               	movwf	4
  5387  14E5  1783               	bsf	3,7	;select IRP bank3
  5388  14E6  0C00               	rrf	0,w
  5389  14E7  00B2               	movwf	??_sys_tick_start_periodic+1
  5390  14E8  0C32               	rrf	??_sys_tick_start_periodic+1,w
  5391  14E9  3907               	andlw	7
  5392  14EA  0633               	xorwf	sys_tick_start_periodic@handle,w
  5393  14EB  1D03               	skipz
  5394  14EC  2D38               	goto	l4438
  5395                           
  5396                           ;sys_tick.c: 91:             _sys_tick._handle[i].trigger_tick = tick;
  5397  14ED  300A               	movlw	10
  5398  14EE  00B1               	movwf	??_sys_tick_start_periodic
  5399  14EF  0831               	movf	??_sys_tick_start_periodic,w
  5400  14F0  00A9               	movwf	___bmul@multiplicand
  5401  14F1  0834               	movf	sys_tick_start_periodic@i,w
  5402  14F2  160A  118A  202F  160A  118A  	fcall	___bmul
  5403  14F7  3E92               	addlw	(low ((__sys_tick| (0+256)+2)))& (0+255)
  5404  14F8  0084               	movwf	4
  5405  14F9  082D               	movf	sys_tick_start_periodic@tick,w
  5406  14FA  1783               	bsf	3,7	;select IRP bank3
  5407  14FB  0080               	movwf	0
  5408  14FC  0A84               	incf	4,f
  5409  14FD  082E               	movf	sys_tick_start_periodic@tick+1,w
  5410  14FE  0080               	movwf	0
  5411  14FF  0A84               	incf	4,f
  5412  1500  082F               	movf	sys_tick_start_periodic@tick+2,w
  5413  1501  0080               	movwf	0
  5414  1502  0A84               	incf	4,f
  5415  1503  0830               	movf	sys_tick_start_periodic@tick+3,w
  5416  1504  0080               	movwf	0
  5417                           
  5418                           ;sys_tick.c: 92:             _sys_tick._handle[i].counter_tick = 0;
  5419  1505  300A               	movlw	10
  5420  1506  00B1               	movwf	??_sys_tick_start_periodic
  5421  1507  0831               	movf	??_sys_tick_start_periodic,w
  5422  1508  00A9               	movwf	___bmul@multiplicand
  5423  1509  0834               	movf	sys_tick_start_periodic@i,w
  5424  150A  160A  118A  202F  160A  118A  	fcall	___bmul
  5425  150F  3E96               	addlw	(low ((__sys_tick| (0+256)+6)))& (0+255)
  5426  1510  0084               	movwf	4
  5427  1511  3000               	movlw	0
  5428  1512  1783               	bsf	3,7	;select IRP bank3
  5429  1513  0080               	movwf	0
  5430  1514  0A84               	incf	4,f
  5431  1515  3000               	movlw	0
  5432  1516  0080               	movwf	0
  5433  1517  0A84               	incf	4,f
  5434  1518  3000               	movlw	0
  5435  1519  0080               	movwf	0
  5436  151A  0A84               	incf	4,f
  5437  151B  3000               	movlw	0
  5438  151C  0080               	movwf	0
  5439                           
  5440                           ;sys_tick.c: 93:             _sys_tick._handle[i]._periodic = 1;
  5441  151D  300A               	movlw	10
  5442  151E  00B1               	movwf	??_sys_tick_start_periodic
  5443  151F  0831               	movf	??_sys_tick_start_periodic,w
  5444  1520  00A9               	movwf	___bmul@multiplicand
  5445  1521  0834               	movf	sys_tick_start_periodic@i,w
  5446  1522  160A  118A  202F  160A  118A  	fcall	___bmul
  5447  1527  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  5448  1528  0084               	movwf	4
  5449  1529  1783               	bsf	3,7	;select IRP bank3
  5450  152A  1480               	bsf	0,1
  5451                           
  5452                           ;sys_tick.c: 94:             _sys_tick._handle[i]._en = 1;
  5453  152B  300A               	movlw	10
  5454  152C  00B1               	movwf	??_sys_tick_start_periodic
  5455  152D  0831               	movf	??_sys_tick_start_periodic,w
  5456  152E  00A9               	movwf	___bmul@multiplicand
  5457  152F  0834               	movf	sys_tick_start_periodic@i,w
  5458  1530  160A  118A  202F   	fcall	___bmul
  5459  1533  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
  5460  1534  0084               	movwf	4
  5461  1535  1783               	bsf	3,7	;select IRP bank3
  5462  1536  1400               	bsf	0,0
  5463  1537  0008               	return
  5464  1538                     l4438:
  5465                           
  5466                           ;sys_tick.c: 97:     }
  5467  1538  3001               	movlw	1
  5468  1539  00B1               	movwf	??_sys_tick_start_periodic
  5469  153A  0831               	movf	??_sys_tick_start_periodic,w
  5470  153B  07B4               	addwf	sys_tick_start_periodic@i,f
  5471  153C  2CD0               	goto	l594
  5472  153D                     __end_of_sys_tick_start_periodic:
  5473                           
  5474                           	psect	text33
  5475  11F7                     __ptext33:	
  5476 ;; *************** function _eeprom_write *****************
  5477 ;; Defined at:
  5478 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eewrite.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  addr            1    wreg     unsigned char 
  5481 ;;  value           1    9[BANK0 ] unsigned char 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  addr            1   11[BANK0 ] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 300/0
  5490 ;;		On exit  : 300/300
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5493 ;;      Params:         0       1       0       0       0
  5494 ;;      Locals:         0       1       0       0       0
  5495 ;;      Temps:          0       1       0       0       0
  5496 ;;      Totals:         0       3       0       0       0
  5497 ;;Total ram usage:        3 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; Hardware stack levels required when called: 5
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_main
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507  11F7                     _eeprom_write:	
  5508                           ;psect for function _eeprom_write
  5509                           
  5510                           
  5511                           ;incstack = 0
  5512                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5513                           ;eeprom_write@addr stored from wreg
  5514  11F7  00AB               	movwf	eeprom_write@addr
  5515  11F8                     l718:	
  5516                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.35\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  5517                           
  5518  11F8  1683               	bsf	3,5	;RP0=1, select bank3
  5519  11F9  1703               	bsf	3,6	;RP1=1, select bank3
  5520  11FA  188C               	btfsc	12,1	;volsfr
  5521  11FB  29F8               	goto	l718
  5522  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  5523  11FD  1303               	bcf	3,6	;RP1=0, select bank0
  5524  11FE  082B               	movf	eeprom_write@addr,w
  5525  11FF  1703               	bsf	3,6	;RP1=1, select bank2
  5526  1200  008D               	movwf	13	;volatile
  5527  1201  1303               	bcf	3,6	;RP1=0, select bank0
  5528  1202  0829               	movf	eeprom_write@value,w
  5529  1203  1703               	bsf	3,6	;RP1=1, select bank2
  5530  1204  008C               	movwf	12	;volatile
  5531  1205  303F               	movlw	63
  5532  1206  1303               	bcf	3,6	;RP1=0, select bank0
  5533  1207  00AA               	movwf	??_eeprom_write
  5534  1208  082A               	movf	??_eeprom_write,w
  5535  1209  1683               	bsf	3,5	;RP0=1, select bank3
  5536  120A  1703               	bsf	3,6	;RP1=1, select bank3
  5537  120B  058C               	andwf	12,f	;volsfr
  5538  120C  1003               	bcf	3,0	;volatile
  5539  120D  1B8B               	btfsc	11,7	;volatile
  5540  120E  1403               	bsf	3,0	;volatile
  5541  120F  138B               	bcf	11,7	;volatile
  5542  1210  150C               	bsf	12,2	;volsfr
  5543  1211  3055               	movlw	85
  5544  1212  008D               	movwf	13	;volsfr
  5545  1213  30AA               	movlw	170
  5546  1214  008D               	movwf	13	;volsfr
  5547  1215  148C               	bsf	12,1	;volsfr
  5548  1216  110C               	bcf	12,2	;volsfr
  5549  1217  1C03               	btfss	3,0	;volatile
  5550  1218  0008               	return
  5551  1219  178B               	bsf	11,7	;volatile
  5552  121A  0008               	return
  5553  121B                     __end_of_eeprom_write:
  5554                           
  5555                           	psect	text34
  5556  1106                     __ptext34:	
  5557 ;; *************** function _eeprom_read *****************
  5558 ;; Defined at:
  5559 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  addr            1    wreg     unsigned char 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  addr            1   10[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 200/800
  5570 ;;		On exit  : 300/200
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         0       0       0       0       0
  5574 ;;      Locals:         0       1       0       0       0
  5575 ;;      Temps:          0       1       0       0       0
  5576 ;;      Totals:         0       2       0       0       0
  5577 ;;Total ram usage:        2 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 5
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_main
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587  1106                     _eeprom_read:	
  5588                           ;psect for function _eeprom_read
  5589                           
  5590                           
  5591                           ;incstack = 0
  5592                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5593                           ;eeprom_read@addr stored from wreg
  5594  1106  1283               	bcf	3,5	;RP0=0, select bank0
  5595  1107  00AA               	movwf	eeprom_read@addr
  5596  1108  290B               	goto	l698
  5597  1109                     u6281:
  5598  1109  1283               	bcf	3,5	;RP0=0, select bank0
  5599  110A  1303               	bcf	3,6	;RP1=0, select bank0
  5600  110B                     l698:	
  5601                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 8:  do
  5602                           
  5603  110B  0064               	clrwdt	;# 
  5604  110C  1683               	bsf	3,5	;RP0=1, select bank3
  5605  110D  1703               	bsf	3,6	;RP1=1, select bank3
  5606  110E  188C               	btfsc	12,1	;volsfr
  5607  110F  2909               	goto	u6281
  5608                           
  5609                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  5610  1110  1283               	bcf	3,5	;RP0=0, select bank0
  5611  1111  1303               	bcf	3,6	;RP1=0, select bank0
  5612  1112  082A               	movf	eeprom_read@addr,w
  5613  1113  1703               	bsf	3,6	;RP1=1, select bank2
  5614  1114  008D               	movwf	13	;volatile
  5615  1115  303F               	movlw	63
  5616  1116  1303               	bcf	3,6	;RP1=0, select bank0
  5617  1117  00A9               	movwf	??_eeprom_read
  5618  1118  0829               	movf	??_eeprom_read,w
  5619  1119  1683               	bsf	3,5	;RP0=1, select bank3
  5620  111A  1703               	bsf	3,6	;RP1=1, select bank3
  5621  111B  058C               	andwf	12,f	;volsfr
  5622  111C  140C               	bsf	12,0	;volsfr
  5623  111D  1283               	bcf	3,5	;RP0=0, select bank2
  5624  111E  080C               	movf	12,w	;volatile
  5625  111F  0008               	return
  5626  1120                     __end_of_eeprom_read:
  5627                           
  5628                           	psect	text35
  5629  1F25                     __ptext35:	
  5630 ;; *************** function _button_init *****************
  5631 ;; Defined at:
  5632 ;;		line 63 in file "main.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;		None
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0, pclath, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 300/800
  5643 ;;		On exit  : 300/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5646 ;;      Params:         0       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0
  5649 ;;      Totals:         0       0       0       0       0
  5650 ;;Total ram usage:        0 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 6
  5653 ;; This function calls:
  5654 ;;		_ioc_rb1_add_isr_handler
  5655 ;; This function is called by:
  5656 ;;		_main
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660  1F25                     _button_init:	
  5661                           ;psect for function _button_init
  5662                           
  5663                           
  5664                           ;main.c: 64:     ioc_rb1_add_isr_handler(button_handler);
  5665                           
  5666                           ;incstack = 0
  5667                           ; Regs used in _button_init: [wreg+status,2+status,0+pclath+cstack]
  5668  1F25  3007               	movlw	(low (fp__button_handler-i1fpbase))& (0+255)
  5669  1F26  160A  158A  276E   	fcall	_ioc_rb1_add_isr_handler
  5670  1F29  0008               	return
  5671  1F2A                     __end_of_button_init:
  5672                           
  5673                           	psect	text36
  5674  1F6E                     __ptext36:	
  5675 ;; *************** function _ioc_rb1_add_isr_handler *****************
  5676 ;; Defined at:
  5677 ;;		line 41 in file "it_handle.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  handler         1    wreg     PTR FTN()void 
  5680 ;;		 -> button_handler(1), 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  handler         1   10[BANK0 ] PTR FTN()void 
  5683 ;;		 -> button_handler(1), 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg
  5688 ;; Tracked objects:
  5689 ;;		On entry : 300/800
  5690 ;;		On exit  : 300/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5693 ;;      Params:         0       0       0       0       0
  5694 ;;      Locals:         0       1       0       0       0
  5695 ;;      Temps:          0       1       0       0       0
  5696 ;;      Totals:         0       2       0       0       0
  5697 ;;Total ram usage:        2 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 5
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_button_init
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707  1F6E                     _ioc_rb1_add_isr_handler:	
  5708                           ;psect for function _ioc_rb1_add_isr_handler
  5709                           
  5710                           
  5711                           ;incstack = 0
  5712                           ; Regs used in _ioc_rb1_add_isr_handler: [wreg]
  5713                           ;ioc_rb1_add_isr_handler@handler stored from wreg
  5714  1F6E  00AA               	movwf	ioc_rb1_add_isr_handler@handler
  5715                           
  5716                           ;it_handle.c: 42:     INTCONbits.RBIF = 0;
  5717  1F6F  100B               	bcf	11,0	;volatile
  5718                           
  5719                           ;it_handle.c: 43:     INTCONbits.RBIE = 1;
  5720  1F70  158B               	bsf	11,3	;volatile
  5721                           
  5722                           ;it_handle.c: 44:     IOCBbits.IOCB1 = 1;
  5723  1F71  1683               	bsf	3,5	;RP0=1, select bank1
  5724  1F72  1496               	bsf	22,1	;volatile
  5725                           
  5726                           ;it_handle.c: 45:     TRISBbits.TRISB1 = 1;
  5727  1F73  1486               	bsf	6,1	;volatile
  5728                           
  5729                           ;it_handle.c: 46:     _ioc_rb1_isr = handler;
  5730  1F74  1283               	bcf	3,5	;RP0=0, select bank0
  5731  1F75  082A               	movf	ioc_rb1_add_isr_handler@handler,w
  5732  1F76  00A9               	movwf	??_ioc_rb1_add_isr_handler
  5733  1F77  0829               	movf	??_ioc_rb1_add_isr_handler,w
  5734  1F78  00E1               	movwf	__ioc_rb1_isr
  5735  1F79  0008               	return
  5736  1F7A                     __end_of_ioc_rb1_add_isr_handler:
  5737                           
  5738                           	psect	text37
  5739  1040                     __ptext37:	
  5740 ;; *************** function _ade_init *****************
  5741 ;; Defined at:
  5742 ;;		line 29 in file "ade7753.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;		None
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;		None
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, pclath, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 300/800
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5756 ;;      Params:         0       0       0       0       0
  5757 ;;      Locals:         0       0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0
  5759 ;;      Totals:         0       0       0       0       0
  5760 ;;Total ram usage:        0 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; Hardware stack levels required when called: 6
  5763 ;; This function calls:
  5764 ;;		_ade_reset
  5765 ;;		_spi_master_init
  5766 ;; This function is called by:
  5767 ;;		_main
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771  1040                     _ade_init:	
  5772                           ;psect for function _ade_init
  5773                           
  5774                           
  5775                           ;ade7753.c: 30:     TRISDbits.TRISD3 = 0;
  5776                           
  5777                           ;incstack = 0
  5778                           ; Regs used in _ade_init: [wreg+status,2+status,0+pclath+cstack]
  5779  1040  1683               	bsf	3,5	;RP0=1, select bank1
  5780  1041  1188               	bcf	8,3	;volatile
  5781                           
  5782                           ;ade7753.c: 31:     PORTDbits.RD3 = 1;
  5783  1042  1283               	bcf	3,5	;RP0=0, select bank0
  5784  1043  1588               	bsf	8,3	;volatile
  5785                           
  5786                           ;ade7753.c: 32:     TRISDbits.TRISD0 = 0;
  5787  1044  1683               	bsf	3,5	;RP0=1, select bank1
  5788  1045  1008               	bcf	8,0	;volatile
  5789                           
  5790                           ;ade7753.c: 33:     PORTDbits.RD0 = 0;
  5791  1046  1283               	bcf	3,5	;RP0=0, select bank0
  5792  1047  1008               	bcf	8,0	;volatile
  5793                           
  5794                           ;ade7753.c: 34:     spi_master_init();
  5795  1048  160A  158A  27E0  160A  118A  	fcall	_spi_master_init
  5796                           
  5797                           ;ade7753.c: 35:     ade_reset();
  5798  104D  160A  118A  20ED   	fcall	_ade_reset
  5799  1050  0008               	return
  5800  1051                     __end_of_ade_init:
  5801                           
  5802                           	psect	text38
  5803  1FE0                     __ptext38:	
  5804 ;; *************** function _spi_master_init *****************
  5805 ;; Defined at:
  5806 ;;		line 3 in file "spi.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 300/800
  5817 ;;		On exit  : 300/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5820 ;;      Params:         0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0
  5823 ;;      Totals:         0       0       0       0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 5
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_ade_init
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834  1FE0                     _spi_master_init:	
  5835                           ;psect for function _spi_master_init
  5836                           
  5837                           
  5838                           ;spi.c: 6:     TRISCbits.TRISC3 = 0;
  5839                           
  5840                           ;incstack = 0
  5841                           ; Regs used in _spi_master_init: [wreg+status,2+status,0]
  5842  1FE0  1683               	bsf	3,5	;RP0=1, select bank1
  5843  1FE1  1187               	bcf	7,3	;volatile
  5844                           
  5845                           ;spi.c: 7:     TRISCbits.TRISC4 = 1;
  5846  1FE2  1607               	bsf	7,4	;volatile
  5847                           
  5848                           ;spi.c: 8:     TRISCbits.TRISC5 = 0;
  5849  1FE3  1287               	bcf	7,5	;volatile
  5850                           
  5851                           ;spi.c: 9:     TRISDbits.TRISD3 = 0;
  5852  1FE4  1188               	bcf	8,3	;volatile
  5853                           
  5854                           ;spi.c: 10:     PORTDbits.RD3 = 1;
  5855  1FE5  1283               	bcf	3,5	;RP0=0, select bank0
  5856  1FE6  1588               	bsf	8,3	;volatile
  5857                           
  5858                           ;spi.c: 12:     SSPSTATbits.SMP = 0;
  5859  1FE7  1683               	bsf	3,5	;RP0=1, select bank1
  5860  1FE8  1394               	bcf	20,7	;volatile
  5861                           
  5862                           ;spi.c: 13:     SSPSTATbits.CKE = 0;
  5863  1FE9  1314               	bcf	20,6	;volatile
  5864                           
  5865                           ;spi.c: 15:     SSPCONbits.SSPEN = 1;
  5866  1FEA  1283               	bcf	3,5	;RP0=0, select bank0
  5867  1FEB  1694               	bsf	20,5	;volatile
  5868                           
  5869                           ;spi.c: 16:     SSPCONbits.CKP = 0;
  5870  1FEC  1214               	bcf	20,4	;volatile
  5871                           
  5872                           ;spi.c: 17:     SSPCONbits.SSPM = 0b0000;
  5873  1FED  30F0               	movlw	-16
  5874  1FEE  0594               	andwf	20,f	;volatile
  5875  1FEF  0008               	return
  5876  1FF0                     __end_of_spi_master_init:
  5877                           
  5878                           	psect	text39
  5879  10ED                     __ptext39:	
  5880 ;; *************** function _ade_reset *****************
  5881 ;; Defined at:
  5882 ;;		line 60 in file "ade7753.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;		None
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      void 
  5889 ;; Registers used:
  5890 ;;		wreg
  5891 ;; Tracked objects:
  5892 ;;		On entry : 300/800
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0
  5898 ;;      Temps:          0       2       0       0       0
  5899 ;;      Totals:         0       2       0       0       0
  5900 ;;Total ram usage:        2 bytes
  5901 ;; Hardware stack levels used: 1
  5902 ;; Hardware stack levels required when called: 5
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_ade_init
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910  10ED                     _ade_reset:	
  5911                           ;psect for function _ade_reset
  5912                           
  5913                           
  5914                           ;ade7753.c: 61:     PORTDbits.RD0 = 0;
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in _ade_reset: [wreg]
  5918  10ED  1008               	bcf	8,0	;volatile
  5919                           
  5920                           ;ade7753.c: 62:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5921  10EE  3003               	movlw	3
  5922  10EF  1283               	bcf	3,5	;RP0=0, select bank0
  5923  10F0  1303               	bcf	3,6	;RP1=0, select bank0
  5924  10F1  00AA               	movwf	??_ade_reset+1
  5925  10F2  3097               	movlw	151
  5926  10F3  00A9               	movwf	??_ade_reset
  5927  10F4                     u6627:
  5928  10F4  0BA9               	decfsz	??_ade_reset,f
  5929  10F5  28F4               	goto	u6627
  5930  10F6  0BAA               	decfsz	??_ade_reset+1,f
  5931  10F7  28F4               	goto	u6627
  5932                           
  5933                           ;ade7753.c: 63:     PORTDbits.RD0 = 1;
  5934  10F8  1283               	bcf	3,5	;RP0=0, select bank0
  5935  10F9  1303               	bcf	3,6	;RP1=0, select bank0
  5936  10FA  1408               	bsf	8,0	;volatile
  5937                           
  5938                           ;ade7753.c: 64:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5939  10FB  3003               	movlw	3
  5940  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  5941  10FD  1303               	bcf	3,6	;RP1=0, select bank0
  5942  10FE  00AA               	movwf	??_ade_reset+1
  5943  10FF  3097               	movlw	151
  5944  1100  00A9               	movwf	??_ade_reset
  5945  1101                     u6637:
  5946  1101  0BA9               	decfsz	??_ade_reset,f
  5947  1102  2901               	goto	u6637
  5948  1103  0BAA               	decfsz	??_ade_reset+1,f
  5949  1104  2901               	goto	u6637
  5950  1105  0008               	return
  5951  1106                     __end_of_ade_reset:
  5952                           
  5953                           	psect	text40
  5954  0356                     __ptext40:	
  5955 ;; *************** function _ade_get_power_meter_data *****************
  5956 ;; Defined at:
  5957 ;;		line 116 in file "ade7753.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  pData           1    wreg     PTR struct .
  5960 ;;		 -> dev_data(13), 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  pData           1   70[BANK1 ] PTR struct .
  5963 ;;		 -> dev_data(13), 
  5964 ;;  accumulation    4   46[BANK1 ] float 
  5965 ;;  line_periods    4   42[BANK1 ] float 
  5966 ;;  vrms            3   65[BANK1 ] unsigned um
  5967 ;;  irms            3   60[BANK1 ] unsigned um
  5968 ;;  laenergy        2   68[BANK1 ] int 
  5969 ;;  period          2   50[BANK1 ] unsigned int 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 300/800
  5976 ;;		On exit  : 300/100
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5979 ;;      Params:         0       0       0       0       0
  5980 ;;      Locals:         0       0      29       0       0
  5981 ;;      Temps:          0       0       0       0       0
  5982 ;;      Totals:         0       0      29       0       0
  5983 ;;Total ram usage:       29 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; Hardware stack levels required when called: 8
  5986 ;; This function calls:
  5987 ;;		___fladd
  5988 ;;		___fldiv
  5989 ;;		___flge
  5990 ;;		___flmul
  5991 ;;		___wmul
  5992 ;;		___xxtofl
  5993 ;;		_ade_get_IRMS
  5994 ;;		_ade_get_LAENERGY
  5995 ;;		_ade_get_PERIOD
  5996 ;;		_ade_get_VRMS
  5997 ;; This function is called by:
  5998 ;;		_main
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002  0356                     _ade_get_power_meter_data:	
  6003                           ;psect for function _ade_get_power_meter_data
  6004                           
  6005                           
  6006                           ;incstack = 0
  6007 ;; hardware stack exceeded
  6008                           ; Regs used in _ade_get_power_meter_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  6009                           ;ade_get_power_meter_data@pData stored from wreg
  6010  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6011  0357  00E6               	movwf	ade_get_power_meter_data@pData^(0+128)
  6012                           
  6013                           ;ade7753.c: 117:     if (pData == (0)) return;
  6014  0358  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6015  0359  1903               	btfsc	3,2
  6016  035A  0008               	return
  6017                           
  6018                           ;ade7753.c: 118:     uint24_t irms = ade_get_IRMS();
  6019  035B  160A  158A  27C0  120A  118A  	fcall	_ade_get_IRMS
  6020  0360  0838               	movf	?_ade_get_IRMS,w
  6021  0361  1683               	bsf	3,5	;RP0=1, select bank1
  6022  0362  00DC               	movwf	ade_get_power_meter_data@irms^(0+128)
  6023  0363  1283               	bcf	3,5	;RP0=0, select bank0
  6024  0364  0839               	movf	?_ade_get_IRMS+1,w
  6025  0365  1683               	bsf	3,5	;RP0=1, select bank1
  6026  0366  00DD               	movwf	(ade_get_power_meter_data@irms+1)^(0+128)
  6027  0367  1283               	bcf	3,5	;RP0=0, select bank0
  6028  0368  083A               	movf	?_ade_get_IRMS+2,w
  6029  0369  1683               	bsf	3,5	;RP0=1, select bank1
  6030  036A  00DE               	movwf	(ade_get_power_meter_data@irms+2)^(0+128)
  6031                           
  6032                           ;ade7753.c: 119:     uint24_t vrms = ade_get_VRMS();
  6033  036B  160A  158A  27D0  120A  118A  	fcall	_ade_get_VRMS
  6034  0370  0838               	movf	?_ade_get_VRMS,w
  6035  0371  1683               	bsf	3,5	;RP0=1, select bank1
  6036  0372  00E1               	movwf	ade_get_power_meter_data@vrms^(0+128)
  6037  0373  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0374  0839               	movf	?_ade_get_VRMS+1,w
  6039  0375  1683               	bsf	3,5	;RP0=1, select bank1
  6040  0376  00E2               	movwf	(ade_get_power_meter_data@vrms+1)^(0+128)
  6041  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6042  0378  083A               	movf	?_ade_get_VRMS+2,w
  6043  0379  1683               	bsf	3,5	;RP0=1, select bank1
  6044  037A  00E3               	movwf	(ade_get_power_meter_data@vrms+2)^(0+128)
  6045                           
  6046                           ;ade7753.c: 120:     uint16_t period = ade_get_PERIOD();
  6047  037B  160A  158A  2794  120A  118A  	fcall	_ade_get_PERIOD
  6048  0380  0839               	movf	?_ade_get_PERIOD+1,w
  6049  0381  1683               	bsf	3,5	;RP0=1, select bank1
  6050  0382  00D3               	movwf	(ade_get_power_meter_data@period+1)^(0+128)
  6051  0383  1283               	bcf	3,5	;RP0=0, select bank0
  6052  0384  0838               	movf	?_ade_get_PERIOD,w
  6053  0385  1683               	bsf	3,5	;RP0=1, select bank1
  6054  0386  00D2               	movwf	ade_get_power_meter_data@period^(0+128)
  6055                           
  6056                           ;ade7753.c: 121:     int laenergy = ade_get_LAENERGY();
  6057  0387  160A  118A  2175  120A  118A  	fcall	_ade_get_LAENERGY
  6058  038C  084A               	movf	?_ade_get_LAENERGY+1,w
  6059  038D  1683               	bsf	3,5	;RP0=1, select bank1
  6060  038E  00E5               	movwf	(ade_get_power_meter_data@laenergy+1)^(0+128)
  6061  038F  1283               	bcf	3,5	;RP0=0, select bank0
  6062  0390  0849               	movf	?_ade_get_LAENERGY,w
  6063  0391  1683               	bsf	3,5	;RP0=1, select bank1
  6064  0392  00E4               	movwf	ade_get_power_meter_data@laenergy^(0+128)
  6065                           
  6066                           ;ade7753.c: 123:     if (laenergy == 0) irms = 0;
  6067  0393  0864               	movf	ade_get_power_meter_data@laenergy^(0+128),w
  6068  0394  0465               	iorwf	(ade_get_power_meter_data@laenergy+1)^(0+128),w
  6069  0395  1D03               	btfss	3,2
  6070  0396  2B9D               	goto	l5166
  6071  0397  3000               	movlw	0
  6072  0398  00DC               	movwf	ade_get_power_meter_data@irms^(0+128)
  6073  0399  3000               	movlw	0
  6074  039A  00DD               	movwf	(ade_get_power_meter_data@irms+1)^(0+128)
  6075  039B  3000               	movlw	0
  6076  039C  00DE               	movwf	(ade_get_power_meter_data@irms+2)^(0+128)
  6077  039D                     l5166:
  6078                           
  6079                           ;ade7753.c: 125:     pData->irms =
  6080  039D  0864               	movf	ade_get_power_meter_data@laenergy^(0+128),w
  6081  039E  0465               	iorwf	(ade_get_power_meter_data@laenergy+1)^(0+128),w
  6082  039F  1903               	btfsc	3,2
  6083  03A0  2BA9               	goto	l5170
  6084  03A1  30BB               	movlw	187
  6085  03A2  00D7               	movwf	(_ade_get_power_meter_data$354+3)^(0+128)
  6086  03A3  30DA               	movlw	218
  6087  03A4  00D6               	movwf	(_ade_get_power_meter_data$354+2)^(0+128)
  6088  03A5  30CF               	movlw	207
  6089  03A6  00D5               	movwf	(_ade_get_power_meter_data$354+1)^(0+128)
  6090  03A7  30B1               	movlw	177
  6091  03A8  2BB0               	goto	L2
  6092  03A9                     l5170:
  6093  03A9  3000               	movlw	0
  6094  03AA  00D7               	movwf	(_ade_get_power_meter_data$354+3)^(0+128)
  6095  03AB  3000               	movlw	0
  6096  03AC  00D6               	movwf	(_ade_get_power_meter_data$354+2)^(0+128)
  6097  03AD  3000               	movlw	0
  6098  03AE  00D5               	movwf	(_ade_get_power_meter_data$354+1)^(0+128)
  6099  03AF  3000               	movlw	0
  6100  03B0                     L2:
  6101  03B0  00D4               	movwf	_ade_get_power_meter_data$354^(0+128)
  6102  03B1  0857               	movf	(_ade_get_power_meter_data$354+3)^(0+128),w
  6103  03B2  00BD               	movwf	(___fladd@b+3)^(0+128)
  6104  03B3  0856               	movf	(_ade_get_power_meter_data$354+2)^(0+128),w
  6105  03B4  00BC               	movwf	(___fladd@b+2)^(0+128)
  6106  03B5  0855               	movf	(_ade_get_power_meter_data$354+1)^(0+128),w
  6107  03B6  00BB               	movwf	(___fladd@b+1)^(0+128)
  6108  03B7  0854               	movf	_ade_get_power_meter_data$354^(0+128),w
  6109  03B8  00BA               	movwf	___fladd@b^(0+128)
  6110  03B9  3037               	movlw	55
  6111  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  6112  03BB  00C0               	movwf	___flmul@b+3
  6113  03BC  30A0               	movlw	160
  6114  03BD  00BF               	movwf	___flmul@b+2
  6115  03BE  3011               	movlw	17
  6116  03BF  00BE               	movwf	___flmul@b+1
  6117  03C0  30D9               	movlw	217
  6118  03C1  00BD               	movwf	___flmul@b
  6119  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  6120  03C3  085C               	movf	ade_get_power_meter_data@irms^(0+128),w
  6121  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  6122  03C5  00AF               	movwf	___xxtofl@val
  6123  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6124  03C7  085D               	movf	(ade_get_power_meter_data@irms+1)^(0+128),w
  6125  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  6126  03C9  00B0               	movwf	___xxtofl@val+1
  6127  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  6128  03CB  085E               	movf	(ade_get_power_meter_data@irms+2)^(0+128),w
  6129  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  6130  03CD  00B1               	movwf	___xxtofl@val+2
  6131  03CE  01B2               	clrf	___xxtofl@val+3
  6132  03CF  3000               	movlw	0
  6133  03D0  160A  118A  275D  120A  118A  	fcall	___xxtofl
  6134  03D5  0832               	movf	?___xxtofl+3,w
  6135  03D6  00C4               	movwf	___flmul@a+3
  6136  03D7  0831               	movf	?___xxtofl+2,w
  6137  03D8  00C3               	movwf	___flmul@a+2
  6138  03D9  0830               	movf	?___xxtofl+1,w
  6139  03DA  00C2               	movwf	___flmul@a+1
  6140  03DB  082F               	movf	?___xxtofl,w
  6141  03DC  00C1               	movwf	___flmul@a
  6142  03DD  120A  118A  2061  120A  118A  	fcall	___flmul
  6143  03E2  0840               	movf	?___flmul+3,w
  6144  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  6145  03E4  00C1               	movwf	(___fladd@a+3)^(0+128)
  6146  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  6147  03E6  083F               	movf	?___flmul+2,w
  6148  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  6149  03E8  00C0               	movwf	(___fladd@a+2)^(0+128)
  6150  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  6151  03EA  083E               	movf	?___flmul+1,w
  6152  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  6153  03EC  00BF               	movwf	(___fladd@a+1)^(0+128)
  6154  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  6155  03EE  083D               	movf	?___flmul,w
  6156  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  6157  03F0  00BE               	movwf	___fladd@a^(0+128)
  6158  03F1  120A  158A  256F  120A  118A  	fcall	___fladd
  6159  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  6160  03F7  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6161  03F8  0084               	movwf	4
  6162  03F9  083A               	movf	?___fladd^(0+128),w
  6163  03FA  1783               	bsf	3,7	;select IRP bank2
  6164  03FB  0080               	movwf	0
  6165  03FC  0A84               	incf	4,f
  6166  03FD  083B               	movf	(?___fladd+1)^(0+128),w
  6167  03FE  0080               	movwf	0
  6168  03FF  0A84               	incf	4,f
  6169  0400  083C               	movf	(?___fladd+2)^(0+128),w
  6170  0401  0080               	movwf	0
  6171  0402  0A84               	incf	4,f
  6172  0403  083D               	movf	(?___fladd+3)^(0+128),w
  6173  0404  0080               	movwf	0
  6174                           
  6175                           ;ade7753.c: 128:     if (vrms < 564590)
  6176  0405  3008               	movlw	8
  6177  0406  0263               	subwf	(ade_get_power_meter_data@vrms+2)^(0+128),w
  6178  0407  1D03               	skipz
  6179  0408  2C0F               	goto	u6175
  6180  0409  309D               	movlw	157
  6181  040A  0262               	subwf	(ade_get_power_meter_data@vrms+1)^(0+128),w
  6182  040B  1D03               	skipz
  6183  040C  2C0F               	goto	u6175
  6184  040D  306E               	movlw	110
  6185  040E  0261               	subwf	ade_get_power_meter_data@vrms^(0+128),w
  6186  040F                     u6175:
  6187  040F  1803               	skipnc
  6188  0410  2C22               	goto	l5178
  6189                           
  6190                           ;ade7753.c: 129:         pData->vrms = vrms * (float) (1 / 2911.207692) + (float) (-0.73
      +                          3192211);
  6191  0411  30BF               	movlw	191
  6192  0412  00BD               	movwf	(___fladd@b+3)^(0+128)
  6193  0413  303B               	movlw	59
  6194  0414  00BC               	movwf	(___fladd@b+2)^(0+128)
  6195  0415  30B2               	movlw	178
  6196  0416  00BB               	movwf	(___fladd@b+1)^(0+128)
  6197  0417  307C               	movlw	124
  6198  0418  00BA               	movwf	___fladd@b^(0+128)
  6199  0419  3039               	movlw	57
  6200  041A  1283               	bcf	3,5	;RP0=0, select bank0
  6201  041B  00C0               	movwf	___flmul@b+3
  6202  041C  30B4               	movlw	180
  6203  041D  00BF               	movwf	___flmul@b+2
  6204  041E  3017               	movlw	23
  6205  041F  00BE               	movwf	___flmul@b+1
  6206  0420  30CC               	movlw	204
  6207  0421  2C32               	goto	L3
  6208  0422                     l5178:
  6209                           
  6210                           ;ade7753.c: 131:         pData->vrms = vrms * (float) (1 / 2645.024689) + (float) (-20.2
      +                          5007624);
  6211  0422  30C1               	movlw	193
  6212  0423  00BD               	movwf	(___fladd@b+3)^(0+128)
  6213  0424  30A2               	movlw	162
  6214  0425  00BC               	movwf	(___fladd@b+2)^(0+128)
  6215  0426  3000               	movlw	0
  6216  0427  00BB               	movwf	(___fladd@b+1)^(0+128)
  6217  0428  3028               	movlw	40
  6218  0429  00BA               	movwf	___fladd@b^(0+128)
  6219  042A  3039               	movlw	57
  6220  042B  1283               	bcf	3,5	;RP0=0, select bank0
  6221  042C  00C0               	movwf	___flmul@b+3
  6222  042D  30C6               	movlw	198
  6223  042E  00BF               	movwf	___flmul@b+2
  6224  042F  3037               	movlw	55
  6225  0430  00BE               	movwf	___flmul@b+1
  6226  0431  3078               	movlw	120
  6227  0432                     L3:
  6228  0432  00BD               	movwf	___flmul@b
  6229  0433  1683               	bsf	3,5	;RP0=1, select bank1
  6230  0434  0861               	movf	ade_get_power_meter_data@vrms^(0+128),w
  6231  0435  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0436  00AF               	movwf	___xxtofl@val
  6233  0437  1683               	bsf	3,5	;RP0=1, select bank1
  6234  0438  0862               	movf	(ade_get_power_meter_data@vrms+1)^(0+128),w
  6235  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6236  043A  00B0               	movwf	___xxtofl@val+1
  6237  043B  1683               	bsf	3,5	;RP0=1, select bank1
  6238  043C  0863               	movf	(ade_get_power_meter_data@vrms+2)^(0+128),w
  6239  043D  1283               	bcf	3,5	;RP0=0, select bank0
  6240  043E  00B1               	movwf	___xxtofl@val+2
  6241  043F  01B2               	clrf	___xxtofl@val+3
  6242  0440  3000               	movlw	0
  6243  0441  160A  118A  275D  120A  118A  	fcall	___xxtofl
  6244  0446  0832               	movf	?___xxtofl+3,w
  6245  0447  00C4               	movwf	___flmul@a+3
  6246  0448  0831               	movf	?___xxtofl+2,w
  6247  0449  00C3               	movwf	___flmul@a+2
  6248  044A  0830               	movf	?___xxtofl+1,w
  6249  044B  00C2               	movwf	___flmul@a+1
  6250  044C  082F               	movf	?___xxtofl,w
  6251  044D  00C1               	movwf	___flmul@a
  6252  044E  120A  118A  2061  120A  118A  	fcall	___flmul
  6253  0453  0840               	movf	?___flmul+3,w
  6254  0454  1683               	bsf	3,5	;RP0=1, select bank1
  6255  0455  00C1               	movwf	(___fladd@a+3)^(0+128)
  6256  0456  1283               	bcf	3,5	;RP0=0, select bank0
  6257  0457  083F               	movf	?___flmul+2,w
  6258  0458  1683               	bsf	3,5	;RP0=1, select bank1
  6259  0459  00C0               	movwf	(___fladd@a+2)^(0+128)
  6260  045A  1283               	bcf	3,5	;RP0=0, select bank0
  6261  045B  083E               	movf	?___flmul+1,w
  6262  045C  1683               	bsf	3,5	;RP0=1, select bank1
  6263  045D  00BF               	movwf	(___fladd@a+1)^(0+128)
  6264  045E  1283               	bcf	3,5	;RP0=0, select bank0
  6265  045F  083D               	movf	?___flmul,w
  6266  0460  1683               	bsf	3,5	;RP0=1, select bank1
  6267  0461  00BE               	movwf	___fladd@a^(0+128)
  6268  0462  120A  158A  256F  120A  118A  	fcall	___fladd
  6269  0467  1683               	bsf	3,5	;RP0=1, select bank1
  6270  0468  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6271  0469  3E04               	addlw	4
  6272  046A  0084               	movwf	4
  6273  046B  083A               	movf	?___fladd^(0+128),w
  6274  046C  1783               	bsf	3,7	;select IRP bank2
  6275  046D  0080               	movwf	0
  6276  046E  0A84               	incf	4,f
  6277  046F  083B               	movf	(?___fladd+1)^(0+128),w
  6278  0470  0080               	movwf	0
  6279  0471  0A84               	incf	4,f
  6280  0472  083C               	movf	(?___fladd+2)^(0+128),w
  6281  0473  0080               	movwf	0
  6282  0474  0A84               	incf	4,f
  6283  0475  083D               	movf	(?___fladd+3)^(0+128),w
  6284  0476  0080               	movwf	0
  6285                           
  6286                           ;ade7753.c: 133:     if (pData->irms < 0) pData->irms = 0;
  6287  0477  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6288  0478  0084               	movwf	4
  6289  0479  0800               	movf	0,w
  6290  047A  1283               	bcf	3,5	;RP0=0, select bank0
  6291  047B  00A9               	movwf	___flge@ff1
  6292  047C  0A84               	incf	4,f
  6293  047D  0800               	movf	0,w
  6294  047E  00AA               	movwf	___flge@ff1+1
  6295  047F  0A84               	incf	4,f
  6296  0480  0800               	movf	0,w
  6297  0481  00AB               	movwf	___flge@ff1+2
  6298  0482  0A84               	incf	4,f
  6299  0483  0800               	movf	0,w
  6300  0484  00AC               	movwf	___flge@ff1+3
  6301  0485  3000               	movlw	0
  6302  0486  00B0               	movwf	___flge@ff2+3
  6303  0487  3000               	movlw	0
  6304  0488  00AF               	movwf	___flge@ff2+2
  6305  0489  3000               	movlw	0
  6306  048A  00AE               	movwf	___flge@ff2+1
  6307  048B  3000               	movlw	0
  6308  048C  00AD               	movwf	___flge@ff2
  6309  048D  160A  118A  26CA  120A  118A  	fcall	___flge
  6310  0492  1803               	btfsc	3,0
  6311  0493  2CA2               	goto	l5184
  6312  0494  1683               	bsf	3,5	;RP0=1, select bank1
  6313  0495  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6314  0496  0084               	movwf	4
  6315  0497  3000               	movlw	0
  6316  0498  0080               	movwf	0
  6317  0499  0A84               	incf	4,f
  6318  049A  3000               	movlw	0
  6319  049B  0080               	movwf	0
  6320  049C  0A84               	incf	4,f
  6321  049D  3000               	movlw	0
  6322  049E  0080               	movwf	0
  6323  049F  0A84               	incf	4,f
  6324  04A0  3000               	movlw	0
  6325  04A1  0080               	movwf	0
  6326  04A2                     l5184:
  6327                           
  6328                           ;ade7753.c: 134:     if (pData->vrms < 0) pData->vrms = 0;
  6329  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  6330  04A3  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6331  04A4  3E04               	addlw	4
  6332  04A5  0084               	movwf	4
  6333  04A6  0800               	movf	0,w
  6334  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  6335  04A8  00A9               	movwf	___flge@ff1
  6336  04A9  0A84               	incf	4,f
  6337  04AA  0800               	movf	0,w
  6338  04AB  00AA               	movwf	___flge@ff1+1
  6339  04AC  0A84               	incf	4,f
  6340  04AD  0800               	movf	0,w
  6341  04AE  00AB               	movwf	___flge@ff1+2
  6342  04AF  0A84               	incf	4,f
  6343  04B0  0800               	movf	0,w
  6344  04B1  00AC               	movwf	___flge@ff1+3
  6345  04B2  3000               	movlw	0
  6346  04B3  00B0               	movwf	___flge@ff2+3
  6347  04B4  3000               	movlw	0
  6348  04B5  00AF               	movwf	___flge@ff2+2
  6349  04B6  3000               	movlw	0
  6350  04B7  00AE               	movwf	___flge@ff2+1
  6351  04B8  3000               	movlw	0
  6352  04B9  00AD               	movwf	___flge@ff2
  6353  04BA  160A  118A  26CA  120A  118A  	fcall	___flge
  6354  04BF  1803               	btfsc	3,0
  6355  04C0  2CD0               	goto	l5188
  6356  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  6357  04C2  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6358  04C3  3E04               	addlw	4
  6359  04C4  0084               	movwf	4
  6360  04C5  3000               	movlw	0
  6361  04C6  0080               	movwf	0
  6362  04C7  0A84               	incf	4,f
  6363  04C8  3000               	movlw	0
  6364  04C9  0080               	movwf	0
  6365  04CA  0A84               	incf	4,f
  6366  04CB  3000               	movlw	0
  6367  04CC  0080               	movwf	0
  6368  04CD  0A84               	incf	4,f
  6369  04CE  3000               	movlw	0
  6370  04CF  0080               	movwf	0
  6371  04D0                     l5188:
  6372                           
  6373                           ;ade7753.c: 136:     float line_periods = ((float) period) * 8 / 3579545;
  6374  04D0  304A               	movlw	74
  6375  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  6376  04D2  00A3               	movwf	(___fldiv@a+3)^(0+128)
  6377  04D3  305A               	movlw	90
  6378  04D4  00A2               	movwf	(___fldiv@a+2)^(0+128)
  6379  04D5  307A               	movlw	122
  6380  04D6  00A1               	movwf	(___fldiv@a+1)^(0+128)
  6381  04D7  3064               	movlw	100
  6382  04D8  00A0               	movwf	___fldiv@a^(0+128)
  6383  04D9  3041               	movlw	65
  6384  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  6385  04DB  00C0               	movwf	___flmul@b+3
  6386  04DC  3000               	movlw	0
  6387  04DD  00BF               	movwf	___flmul@b+2
  6388  04DE  3000               	movlw	0
  6389  04DF  00BE               	movwf	___flmul@b+1
  6390  04E0  3000               	movlw	0
  6391  04E1  00BD               	movwf	___flmul@b
  6392  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  6393  04E3  0852               	movf	ade_get_power_meter_data@period^(0+128),w
  6394  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  6395  04E5  00AF               	movwf	___xxtofl@val
  6396  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  6397  04E7  0853               	movf	(ade_get_power_meter_data@period+1)^(0+128),w
  6398  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  6399  04E9  00B0               	movwf	___xxtofl@val+1
  6400  04EA  01B1               	clrf	___xxtofl@val+2
  6401  04EB  01B2               	clrf	___xxtofl@val+3
  6402  04EC  3000               	movlw	0
  6403  04ED  160A  118A  275D  120A  118A  	fcall	___xxtofl
  6404  04F2  0832               	movf	?___xxtofl+3,w
  6405  04F3  00C4               	movwf	___flmul@a+3
  6406  04F4  0831               	movf	?___xxtofl+2,w
  6407  04F5  00C3               	movwf	___flmul@a+2
  6408  04F6  0830               	movf	?___xxtofl+1,w
  6409  04F7  00C2               	movwf	___flmul@a+1
  6410  04F8  082F               	movf	?___xxtofl,w
  6411  04F9  00C1               	movwf	___flmul@a
  6412  04FA  120A  118A  2061  120A  118A  	fcall	___flmul
  6413  04FF  0840               	movf	?___flmul+3,w
  6414  0500  1683               	bsf	3,5	;RP0=1, select bank1
  6415  0501  00A7               	movwf	(___fldiv@b+3)^(0+128)
  6416  0502  1283               	bcf	3,5	;RP0=0, select bank0
  6417  0503  083F               	movf	?___flmul+2,w
  6418  0504  1683               	bsf	3,5	;RP0=1, select bank1
  6419  0505  00A6               	movwf	(___fldiv@b+2)^(0+128)
  6420  0506  1283               	bcf	3,5	;RP0=0, select bank0
  6421  0507  083E               	movf	?___flmul+1,w
  6422  0508  1683               	bsf	3,5	;RP0=1, select bank1
  6423  0509  00A5               	movwf	(___fldiv@b+1)^(0+128)
  6424  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6425  050B  083D               	movf	?___flmul,w
  6426  050C  1683               	bsf	3,5	;RP0=1, select bank1
  6427  050D  00A4               	movwf	___fldiv@b^(0+128)
  6428  050E  120A  118A  2616  120A  118A  	fcall	___fldiv
  6429  0513  0823               	movf	(?___fldiv+3)^(0+128),w
  6430  0514  00CD               	movwf	(ade_get_power_meter_data@line_periods+3)^(0+128)
  6431  0515  0822               	movf	(?___fldiv+2)^(0+128),w
  6432  0516  00CC               	movwf	(ade_get_power_meter_data@line_periods+2)^(0+128)
  6433  0517  0821               	movf	(?___fldiv+1)^(0+128),w
  6434  0518  00CB               	movwf	(ade_get_power_meter_data@line_periods+1)^(0+128)
  6435  0519  0820               	movf	?___fldiv^(0+128),w
  6436  051A  00CA               	movwf	ade_get_power_meter_data@line_periods^(0+128)
  6437                           
  6438                           ;ade7753.c: 137:     float accumulation_times = line_periods * _linecyc / 2;
  6439  051B  3040               	movlw	64
  6440  051C  00A3               	movwf	(___fldiv@a+3)^(0+128)
  6441  051D  3000               	movlw	0
  6442  051E  00A2               	movwf	(___fldiv@a+2)^(0+128)
  6443  051F  3000               	movlw	0
  6444  0520  00A1               	movwf	(___fldiv@a+1)^(0+128)
  6445  0521  3000               	movlw	0
  6446  0522  00A0               	movwf	___fldiv@a^(0+128)
  6447  0523  084D               	movf	(ade_get_power_meter_data@line_periods+3)^(0+128),w
  6448  0524  1283               	bcf	3,5	;RP0=0, select bank0
  6449  0525  00C0               	movwf	___flmul@b+3
  6450  0526  1683               	bsf	3,5	;RP0=1, select bank1
  6451  0527  084C               	movf	(ade_get_power_meter_data@line_periods+2)^(0+128),w
  6452  0528  1283               	bcf	3,5	;RP0=0, select bank0
  6453  0529  00BF               	movwf	___flmul@b+2
  6454  052A  1683               	bsf	3,5	;RP0=1, select bank1
  6455  052B  084B               	movf	(ade_get_power_meter_data@line_periods+1)^(0+128),w
  6456  052C  1283               	bcf	3,5	;RP0=0, select bank0
  6457  052D  00BE               	movwf	___flmul@b+1
  6458  052E  1683               	bsf	3,5	;RP0=1, select bank1
  6459  052F  084A               	movf	ade_get_power_meter_data@line_periods^(0+128),w
  6460  0530  1283               	bcf	3,5	;RP0=0, select bank0
  6461  0531  00BD               	movwf	___flmul@b
  6462  0532  1683               	bsf	3,5	;RP0=1, select bank3
  6463  0533  1703               	bsf	3,6	;RP1=1, select bank3
  6464  0534  0837               	movf	__linecyc^(0+384),w
  6465  0535  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0536  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0537  00AF               	movwf	___xxtofl@val
  6468  0538  1683               	bsf	3,5	;RP0=1, select bank3
  6469  0539  1703               	bsf	3,6	;RP1=1, select bank3
  6470  053A  0838               	movf	(__linecyc+1)^(0+384),w
  6471  053B  1283               	bcf	3,5	;RP0=0, select bank0
  6472  053C  1303               	bcf	3,6	;RP1=0, select bank0
  6473  053D  00B0               	movwf	___xxtofl@val+1
  6474  053E  01B1               	clrf	___xxtofl@val+2
  6475  053F  01B2               	clrf	___xxtofl@val+3
  6476  0540  3000               	movlw	0
  6477  0541  160A  118A  275D  120A  118A  	fcall	___xxtofl
  6478  0546  0832               	movf	?___xxtofl+3,w
  6479  0547  00C4               	movwf	___flmul@a+3
  6480  0548  0831               	movf	?___xxtofl+2,w
  6481  0549  00C3               	movwf	___flmul@a+2
  6482  054A  0830               	movf	?___xxtofl+1,w
  6483  054B  00C2               	movwf	___flmul@a+1
  6484  054C  082F               	movf	?___xxtofl,w
  6485  054D  00C1               	movwf	___flmul@a
  6486  054E  120A  118A  2061  120A  118A  	fcall	___flmul
  6487  0553  0840               	movf	?___flmul+3,w
  6488  0554  1683               	bsf	3,5	;RP0=1, select bank1
  6489  0555  00A7               	movwf	(___fldiv@b+3)^(0+128)
  6490  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6491  0557  083F               	movf	?___flmul+2,w
  6492  0558  1683               	bsf	3,5	;RP0=1, select bank1
  6493  0559  00A6               	movwf	(___fldiv@b+2)^(0+128)
  6494  055A  1283               	bcf	3,5	;RP0=0, select bank0
  6495  055B  083E               	movf	?___flmul+1,w
  6496  055C  1683               	bsf	3,5	;RP0=1, select bank1
  6497  055D  00A5               	movwf	(___fldiv@b+1)^(0+128)
  6498  055E  1283               	bcf	3,5	;RP0=0, select bank0
  6499  055F  083D               	movf	?___flmul,w
  6500  0560  1683               	bsf	3,5	;RP0=1, select bank1
  6501  0561  00A4               	movwf	___fldiv@b^(0+128)
  6502  0562  120A  118A  2616  120A  118A  	fcall	___fldiv
  6503  0567  0823               	movf	(?___fldiv+3)^(0+128),w
  6504  0568  00D1               	movwf	(ade_get_power_meter_data@accumulation_times+3)^(0+128)
  6505  0569  0822               	movf	(?___fldiv+2)^(0+128),w
  6506  056A  00D0               	movwf	(ade_get_power_meter_data@accumulation_times+2)^(0+128)
  6507  056B  0821               	movf	(?___fldiv+1)^(0+128),w
  6508  056C  00CF               	movwf	(ade_get_power_meter_data@accumulation_times+1)^(0+128)
  6509  056D  0820               	movf	?___fldiv^(0+128),w
  6510  056E  00CE               	movwf	ade_get_power_meter_data@accumulation_times^(0+128)
  6511                           
  6512                           ;ade7753.c: 138:     pData->active_power =
  6513  056F  0864               	movf	ade_get_power_meter_data@laenergy^(0+128),w
  6514  0570  0465               	iorwf	(ade_get_power_meter_data@laenergy+1)^(0+128),w
  6515  0571  1903               	btfsc	3,2
  6516  0572  2D7B               	goto	l5196
  6517  0573  303E               	movlw	62
  6518  0574  00DB               	movwf	(_ade_get_power_meter_data$357+3)^(0+128)
  6519  0575  3083               	movlw	131
  6520  0576  00DA               	movwf	(_ade_get_power_meter_data$357+2)^(0+128)
  6521  0577  30F2               	movlw	242
  6522  0578  00D9               	movwf	(_ade_get_power_meter_data$357+1)^(0+128)
  6523  0579  3039               	movlw	57
  6524  057A  2D82               	goto	L4
  6525  057B                     l5196:
  6526  057B  3000               	movlw	0
  6527  057C  00DB               	movwf	(_ade_get_power_meter_data$357+3)^(0+128)
  6528  057D  3000               	movlw	0
  6529  057E  00DA               	movwf	(_ade_get_power_meter_data$357+2)^(0+128)
  6530  057F  3000               	movlw	0
  6531  0580  00D9               	movwf	(_ade_get_power_meter_data$357+1)^(0+128)
  6532  0581  3000               	movlw	0
  6533  0582                     L4:
  6534  0582  00D8               	movwf	_ade_get_power_meter_data$357^(0+128)
  6535  0583  086C               	movf	__is_reversed^(0+128),w
  6536  0584  1D03               	btfss	3,2
  6537  0585  2D8A               	goto	l5202
  6538  0586  3001               	movlw	1
  6539  0587  00DF               	movwf	_ade_get_power_meter_data$358^(0+128)
  6540  0588  3000               	movlw	0
  6541  0589  2D8D               	goto	L5
  6542  058A                     l5202:
  6543  058A  30FF               	movlw	255
  6544  058B  00DF               	movwf	_ade_get_power_meter_data$358^(0+128)
  6545  058C  30FF               	movlw	255
  6546  058D                     L5:
  6547  058D  00E0               	movwf	(_ade_get_power_meter_data$358^(0+128)+1)
  6548  058E  085B               	movf	(_ade_get_power_meter_data$357+3)^(0+128),w
  6549  058F  00BD               	movwf	(___fladd@b+3)^(0+128)
  6550  0590  085A               	movf	(_ade_get_power_meter_data$357+2)^(0+128),w
  6551  0591  00BC               	movwf	(___fladd@b+2)^(0+128)
  6552  0592  0859               	movf	(_ade_get_power_meter_data$357+1)^(0+128),w
  6553  0593  00BB               	movwf	(___fladd@b+1)^(0+128)
  6554  0594  0858               	movf	_ade_get_power_meter_data$357^(0+128),w
  6555  0595  00BA               	movwf	___fladd@b^(0+128)
  6556  0596  303F               	movlw	63
  6557  0597  1283               	bcf	3,5	;RP0=0, select bank0
  6558  0598  00C0               	movwf	___flmul@b+3
  6559  0599  305C               	movlw	92
  6560  059A  00BF               	movwf	___flmul@b+2
  6561  059B  301D               	movlw	29
  6562  059C  00BE               	movwf	___flmul@b+1
  6563  059D  30D9               	movlw	217
  6564  059E  00BD               	movwf	___flmul@b
  6565  059F  1683               	bsf	3,5	;RP0=1, select bank1
  6566  05A0  0851               	movf	(ade_get_power_meter_data@accumulation_times+3)^(0+128),w
  6567  05A1  00A3               	movwf	(___fldiv@a+3)^(0+128)
  6568  05A2  0850               	movf	(ade_get_power_meter_data@accumulation_times+2)^(0+128),w
  6569  05A3  00A2               	movwf	(___fldiv@a+2)^(0+128)
  6570  05A4  084F               	movf	(ade_get_power_meter_data@accumulation_times+1)^(0+128),w
  6571  05A5  00A1               	movwf	(___fldiv@a+1)^(0+128)
  6572  05A6  084E               	movf	ade_get_power_meter_data@accumulation_times^(0+128),w
  6573  05A7  00A0               	movwf	___fldiv@a^(0+128)
  6574  05A8  0865               	movf	(ade_get_power_meter_data@laenergy+1)^(0+128),w
  6575  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  6576  05AA  00AC               	movwf	___wmul@multiplicand+1
  6577  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  6578  05AC  0864               	movf	ade_get_power_meter_data@laenergy^(0+128),w
  6579  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  6580  05AE  00AB               	movwf	___wmul@multiplicand
  6581  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  6582  05B0  0860               	movf	(_ade_get_power_meter_data$358+1)^(0+128),w
  6583  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  6584  05B2  00AA               	movwf	___wmul@multiplier+1
  6585  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  6586  05B4  085F               	movf	_ade_get_power_meter_data$358^(0+128),w
  6587  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  6588  05B6  00A9               	movwf	___wmul@multiplier
  6589  05B7  160A  118A  21B3  120A  118A  	fcall	___wmul
  6590  05BC  0829               	movf	?___wmul,w
  6591  05BD  00AF               	movwf	___xxtofl@val
  6592  05BE  082A               	movf	?___wmul+1,w
  6593  05BF  00B0               	movwf	___xxtofl@val+1
  6594  05C0  3000               	movlw	0
  6595  05C1  1BB0               	btfsc	___xxtofl@val+1,7
  6596  05C2  30FF               	movlw	255
  6597  05C3  00B1               	movwf	___xxtofl@val+2
  6598  05C4  00B2               	movwf	___xxtofl@val+3
  6599  05C5  3001               	movlw	1
  6600  05C6  160A  118A  275D  120A  118A  	fcall	___xxtofl
  6601  05CB  0832               	movf	?___xxtofl+3,w
  6602  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  6603  05CD  00A7               	movwf	(___fldiv@b+3)^(0+128)
  6604  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  6605  05CF  0831               	movf	?___xxtofl+2,w
  6606  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  6607  05D1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  6608  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  6609  05D3  0830               	movf	?___xxtofl+1,w
  6610  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  6611  05D5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  6612  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  6613  05D7  082F               	movf	?___xxtofl,w
  6614  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  6615  05D9  00A4               	movwf	___fldiv@b^(0+128)
  6616  05DA  120A  118A  2616  120A  118A  	fcall	___fldiv
  6617  05DF  0823               	movf	(?___fldiv+3)^(0+128),w
  6618  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  6619  05E1  00C4               	movwf	___flmul@a+3
  6620  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  6621  05E3  0822               	movf	(?___fldiv+2)^(0+128),w
  6622  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  6623  05E5  00C3               	movwf	___flmul@a+2
  6624  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  6625  05E7  0821               	movf	(?___fldiv+1)^(0+128),w
  6626  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  6627  05E9  00C2               	movwf	___flmul@a+1
  6628  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  6629  05EB  0820               	movf	?___fldiv^(0+128),w
  6630  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  6631  05ED  00C1               	movwf	___flmul@a
  6632  05EE  120A  118A  2061  120A  118A  	fcall	___flmul
  6633  05F3  0840               	movf	?___flmul+3,w
  6634  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  6635  05F5  00C1               	movwf	(___fladd@a+3)^(0+128)
  6636  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  6637  05F7  083F               	movf	?___flmul+2,w
  6638  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  6639  05F9  00C0               	movwf	(___fladd@a+2)^(0+128)
  6640  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  6641  05FB  083E               	movf	?___flmul+1,w
  6642  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  6643  05FD  00BF               	movwf	(___fladd@a+1)^(0+128)
  6644  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  6645  05FF  083D               	movf	?___flmul,w
  6646  0600  1683               	bsf	3,5	;RP0=1, select bank1
  6647  0601  00BE               	movwf	___fladd@a^(0+128)
  6648  0602  120A  158A  256F   	fcall	___fladd
  6649  0605  1683               	bsf	3,5	;RP0=1, select bank1
  6650  0606  0866               	movf	ade_get_power_meter_data@pData^(0+128),w
  6651  0607  3E08               	addlw	8
  6652  0608  0084               	movwf	4
  6653  0609  083A               	movf	?___fladd^(0+128),w
  6654  060A  1783               	bsf	3,7	;select IRP bank2
  6655  060B  0080               	movwf	0
  6656  060C  0A84               	incf	4,f
  6657  060D  083B               	movf	(?___fladd+1)^(0+128),w
  6658  060E  0080               	movwf	0
  6659  060F  0A84               	incf	4,f
  6660  0610  083C               	movf	(?___fladd+2)^(0+128),w
  6661  0611  0080               	movwf	0
  6662  0612  0A84               	incf	4,f
  6663  0613  083D               	movf	(?___fladd+3)^(0+128),w
  6664  0614  0080               	movwf	0
  6665  0615  0008               	return
  6666  0616                     __end_of_ade_get_power_meter_data:
  6667                           
  6668                           	psect	text41
  6669  1FD0                     __ptext41:	
  6670 ;; *************** function _ade_get_VRMS *****************
  6671 ;; Defined at:
  6672 ;;		line 104 in file "ade7753.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  3   24[BANK0 ] unsigned um
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0, pclath, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 300/900
  6683 ;;		On exit  : 300/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         0       3       0       0       0
  6687 ;;      Locals:         0       0       0       0       0
  6688 ;;      Temps:          0       1       0       0       0
  6689 ;;      Totals:         0       4       0       0       0
  6690 ;;Total ram usage:        4 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 7
  6693 ;; This function calls:
  6694 ;;		_ade_read
  6695 ;; This function is called by:
  6696 ;;		_ade_get_power_meter_data
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700  1FD0                     _ade_get_VRMS:	
  6701                           ;psect for function _ade_get_VRMS
  6702                           
  6703                           
  6704                           ;ade7753.c: 105:     return (uint24_t) ade_read(0x17, 3);
  6705                           
  6706                           ;incstack = 0
  6707 ;; hardware stack exceeded
  6708                           ; Regs used in _ade_get_VRMS: [wreg+status,2+status,0+pclath+cstack]
  6709  1FD0  3003               	movlw	3
  6710  1FD1  1283               	bcf	3,5	;RP0=0, select bank0
  6711  1FD2  00BB               	movwf	??_ade_get_VRMS
  6712  1FD3  083B               	movf	??_ade_get_VRMS,w
  6713  1FD4  00AA               	movwf	ade_read@bytes_to_read
  6714  1FD5  3017               	movlw	23
  6715  1FD6  160A  118A  22A6   	fcall	_ade_read
  6716  1FD9  082C               	movf	?_ade_read+2,w
  6717  1FDA  00BA               	movwf	?_ade_get_VRMS+2
  6718  1FDB  082B               	movf	?_ade_read+1,w
  6719  1FDC  00B9               	movwf	?_ade_get_VRMS+1
  6720  1FDD  082A               	movf	?_ade_read,w
  6721  1FDE  00B8               	movwf	?_ade_get_VRMS
  6722  1FDF  0008               	return
  6723  1FE0                     __end_of_ade_get_VRMS:
  6724                           
  6725                           	psect	text42
  6726  1F94                     __ptext42:	
  6727 ;; *************** function _ade_get_PERIOD *****************
  6728 ;; Defined at:
  6729 ;;		line 112 in file "ade7753.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  2   24[BANK0 ] unsigned int 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0, pclath, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 300/900
  6740 ;;		On exit  : 300/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6743 ;;      Params:         0       2       0       0       0
  6744 ;;      Locals:         0       0       0       0       0
  6745 ;;      Temps:          0       1       0       0       0
  6746 ;;      Totals:         0       3       0       0       0
  6747 ;;Total ram usage:        3 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 7
  6750 ;; This function calls:
  6751 ;;		_ade_read
  6752 ;; This function is called by:
  6753 ;;		_ade_get_power_meter_data
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757  1F94                     _ade_get_PERIOD:	
  6758                           ;psect for function _ade_get_PERIOD
  6759                           
  6760                           
  6761                           ;ade7753.c: 113:     return (uint16_t) ade_read(0x27, 2);
  6762                           
  6763                           ;incstack = 0
  6764 ;; hardware stack exceeded
  6765                           ; Regs used in _ade_get_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  6766  1F94  3002               	movlw	2
  6767  1F95  1283               	bcf	3,5	;RP0=0, select bank0
  6768  1F96  00BA               	movwf	??_ade_get_PERIOD
  6769  1F97  083A               	movf	??_ade_get_PERIOD,w
  6770  1F98  00AA               	movwf	ade_read@bytes_to_read
  6771  1F99  3027               	movlw	39
  6772  1F9A  160A  118A  22A6   	fcall	_ade_read
  6773  1F9D  082B               	movf	?_ade_read+1,w
  6774  1F9E  00B9               	movwf	?_ade_get_PERIOD+1
  6775  1F9F  082A               	movf	?_ade_read,w
  6776  1FA0  00B8               	movwf	?_ade_get_PERIOD
  6777  1FA1  0008               	return
  6778  1FA2                     __end_of_ade_get_PERIOD:
  6779                           
  6780                           	psect	text43
  6781  1175                     __ptext43:	
  6782 ;; *************** function _ade_get_LAENERGY *****************
  6783 ;; Defined at:
  6784 ;;		line 108 in file "ade7753.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  2   41[BANK0 ] int 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 300/900
  6795 ;;		On exit  : 300/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6798 ;;      Params:         0       2       0       0       0
  6799 ;;      Locals:         0       0       0       0       0
  6800 ;;      Temps:          0       2       0       0       0
  6801 ;;      Totals:         0       4       0       0       0
  6802 ;;Total ram usage:        4 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 7
  6805 ;; This function calls:
  6806 ;;		_ade_read
  6807 ;;		_ade_signed_value
  6808 ;; This function is called by:
  6809 ;;		_ade_get_power_meter_data
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813  1175                     _ade_get_LAENERGY:	
  6814                           ;psect for function _ade_get_LAENERGY
  6815                           
  6816                           
  6817                           ;ade7753.c: 109:     return ade_signed_value(ade_read(0x04, 3), 24);
  6818                           
  6819                           ;incstack = 0
  6820 ;; hardware stack exceeded
  6821                           ; Regs used in _ade_get_LAENERGY: [wreg+status,2+status,0+pclath+cstack]
  6822  1175  3003               	movlw	3
  6823  1176  1283               	bcf	3,5	;RP0=0, select bank0
  6824  1177  00CB               	movwf	??_ade_get_LAENERGY
  6825  1178  084B               	movf	??_ade_get_LAENERGY,w
  6826  1179  00AA               	movwf	ade_read@bytes_to_read
  6827  117A  3004               	movlw	4
  6828  117B  160A  118A  22A6  160A  118A  	fcall	_ade_read
  6829  1180  082D               	movf	?_ade_read+3,w
  6830  1181  00BB               	movwf	ade_signed_value@value+3
  6831  1182  082C               	movf	?_ade_read+2,w
  6832  1183  00BA               	movwf	ade_signed_value@value+2
  6833  1184  082B               	movf	?_ade_read+1,w
  6834  1185  00B9               	movwf	ade_signed_value@value+1
  6835  1186  082A               	movf	?_ade_read,w
  6836  1187  00B8               	movwf	ade_signed_value@value
  6837  1188  3018               	movlw	24
  6838  1189  00CC               	movwf	??_ade_get_LAENERGY+1
  6839  118A  084C               	movf	??_ade_get_LAENERGY+1,w
  6840  118B  00BC               	movwf	ade_signed_value@bits
  6841  118C  160A  118A  253D   	fcall	_ade_signed_value
  6842  118F  0839               	movf	?_ade_signed_value+1,w
  6843  1190  00CA               	movwf	?_ade_get_LAENERGY+1
  6844  1191  0838               	movf	?_ade_signed_value,w
  6845  1192  00C9               	movwf	?_ade_get_LAENERGY
  6846  1193  0008               	return
  6847  1194                     __end_of_ade_get_LAENERGY:
  6848                           
  6849                           	psect	text44
  6850  153D                     __ptext44:	
  6851 ;; *************** function _ade_signed_value *****************
  6852 ;; Defined at:
  6853 ;;		line 15 in file "ade7753.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  value           4   24[BANK0 ] unsigned long 
  6856 ;;  bits            1   28[BANK0 ] unsigned char 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  i               1   40[BANK0 ] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  2   24[BANK0 ] int 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 300/800
  6865 ;;		On exit  : 300/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6868 ;;      Params:         0       5       0       0       0
  6869 ;;      Locals:         0       1       0       0       0
  6870 ;;      Temps:          0      11       0       0       0
  6871 ;;      Totals:         0      17       0       0       0
  6872 ;;Total ram usage:       17 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 5
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_ade_get_LAENERGY
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882  153D                     _ade_signed_value:	
  6883                           ;psect for function _ade_signed_value
  6884                           
  6885                           
  6886                           ;ade7753.c: 16:     if (value & (1 << (bits - 1))) {
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _ade_signed_value: [wreg+status,2+status,0]
  6890  153D  0838               	movf	ade_signed_value@value,w
  6891  153E  00BD               	movwf	??_ade_signed_value
  6892  153F  0839               	movf	ade_signed_value@value+1,w
  6893  1540  00BE               	movwf	??_ade_signed_value+1
  6894  1541  083A               	movf	ade_signed_value@value+2,w
  6895  1542  00BF               	movwf	??_ade_signed_value+2
  6896  1543  083B               	movf	ade_signed_value@value+3,w
  6897  1544  00C0               	movwf	??_ade_signed_value+3
  6898  1545  083C               	movf	ade_signed_value@bits,w
  6899  1546  3EFF               	addlw	-1
  6900  1547  00C1               	movwf	??_ade_signed_value+4
  6901  1548  0AC1               	incf	??_ade_signed_value+4,f
  6902  1549  3001               	movlw	1
  6903  154A  00C2               	movwf	??_ade_signed_value+5
  6904  154B  3000               	movlw	0
  6905  154C  00C3               	movwf	??_ade_signed_value+6
  6906  154D  2D51               	goto	u4524
  6907  154E                     u4525:
  6908  154E  1003               	clrc
  6909  154F  0DC2               	rlf	??_ade_signed_value+5,f
  6910  1550  0DC3               	rlf	??_ade_signed_value+6,f
  6911  1551                     u4524:
  6912  1551  0BC1               	decfsz	??_ade_signed_value+4,f
  6913  1552  2D4E               	goto	u4525
  6914  1553  0842               	movf	??_ade_signed_value+5,w
  6915  1554  00C4               	movwf	??_ade_signed_value+7
  6916  1555  0843               	movf	??_ade_signed_value+6,w
  6917  1556  00C5               	movwf	??_ade_signed_value+8
  6918  1557  3000               	movlw	0
  6919  1558  1BC5               	btfsc	??_ade_signed_value+8,7
  6920  1559  30FF               	movlw	255
  6921  155A  00C6               	movwf	??_ade_signed_value+9
  6922  155B  00C7               	movwf	??_ade_signed_value+10
  6923  155C  0844               	movf	??_ade_signed_value+7,w
  6924  155D  05BD               	andwf	??_ade_signed_value,f
  6925  155E  0845               	movf	??_ade_signed_value+8,w
  6926  155F  05BE               	andwf	??_ade_signed_value+1,f
  6927  1560  0846               	movf	??_ade_signed_value+9,w
  6928  1561  05BF               	andwf	??_ade_signed_value+2,f
  6929  1562  0847               	movf	??_ade_signed_value+10,w
  6930  1563  05C0               	andwf	??_ade_signed_value+3,f
  6931  1564  0840               	movf	??_ade_signed_value+3,w
  6932  1565  043F               	iorwf	??_ade_signed_value+2,w
  6933  1566  043E               	iorwf	??_ade_signed_value+1,w
  6934  1567  043D               	iorwf	??_ade_signed_value,w
  6935  1568  1903               	skipnz
  6936  1569  0008               	return
  6937                           
  6938                           ;ade7753.c: 17:         for (uint8_t i = 0; i < bits - 2; i++)
  6939  156A  01C8               	clrf	ade_signed_value@i
  6940  156B                     l4284:
  6941  156B  083C               	movf	ade_signed_value@bits,w
  6942  156C  3EFE               	addlw	254
  6943  156D  00BD               	movwf	??_ade_signed_value
  6944  156E  30FF               	movlw	255
  6945  156F  1803               	skipnc
  6946  1570  3000               	movlw	0
  6947  1571  00BE               	movwf	??_ade_signed_value+1
  6948  1572  083E               	movf	??_ade_signed_value+1,w
  6949  1573  3A80               	xorlw	128
  6950  1574  3C80               	sublw	128
  6951  1575  1D03               	skipz
  6952  1576  2D79               	goto	u4555
  6953  1577  083D               	movf	??_ade_signed_value,w
  6954  1578  0248               	subwf	ade_signed_value@i,w
  6955  1579                     u4555:
  6956  1579  1803               	btfsc	3,0
  6957  157A  2D9F               	goto	l4286
  6958                           
  6959                           ;ade7753.c: 18:             value ^= (1 << i);
  6960  157B  1283               	bcf	3,5	;RP0=0, select bank0
  6961  157C  1303               	bcf	3,6	;RP1=0, select bank0
  6962  157D  0A48               	incf	ade_signed_value@i,w
  6963  157E  00BD               	movwf	??_ade_signed_value
  6964  157F  3001               	movlw	1
  6965  1580  00BE               	movwf	??_ade_signed_value+1
  6966  1581  3000               	movlw	0
  6967  1582  00BF               	movwf	??_ade_signed_value+2
  6968  1583  2D87               	goto	u4544
  6969  1584                     u4545:
  6970  1584  1003               	clrc
  6971  1585  0DBE               	rlf	??_ade_signed_value+1,f
  6972  1586  0DBF               	rlf	??_ade_signed_value+2,f
  6973  1587                     u4544:
  6974  1587  0BBD               	decfsz	??_ade_signed_value,f
  6975  1588  2D84               	goto	u4545
  6976  1589  083E               	movf	??_ade_signed_value+1,w
  6977  158A  00C0               	movwf	??_ade_signed_value+3
  6978  158B  083F               	movf	??_ade_signed_value+2,w
  6979  158C  00C1               	movwf	??_ade_signed_value+4
  6980  158D  3000               	movlw	0
  6981  158E  1BC1               	btfsc	??_ade_signed_value+4,7
  6982  158F  30FF               	movlw	255
  6983  1590  00C2               	movwf	??_ade_signed_value+5
  6984  1591  00C3               	movwf	??_ade_signed_value+6
  6985  1592  0840               	movf	??_ade_signed_value+3,w
  6986  1593  06B8               	xorwf	ade_signed_value@value,f
  6987  1594  0841               	movf	??_ade_signed_value+4,w
  6988  1595  06B9               	xorwf	ade_signed_value@value+1,f
  6989  1596  0842               	movf	??_ade_signed_value+5,w
  6990  1597  06BA               	xorwf	ade_signed_value@value+2,f
  6991  1598  0843               	movf	??_ade_signed_value+6,w
  6992  1599  06BB               	xorwf	ade_signed_value@value+3,f
  6993  159A  3001               	movlw	1
  6994  159B  00BD               	movwf	??_ade_signed_value
  6995  159C  083D               	movf	??_ade_signed_value,w
  6996  159D  07C8               	addwf	ade_signed_value@i,f
  6997  159E  2D6B               	goto	l4284
  6998  159F                     l4286:
  6999                           
  7000                           ;ade7753.c: 19:         value++;
  7001  159F  3001               	movlw	1
  7002  15A0  1283               	bcf	3,5	;RP0=0, select bank0
  7003  15A1  1303               	bcf	3,6	;RP1=0, select bank0
  7004  15A2  07B8               	addwf	ade_signed_value@value,f
  7005  15A3  3000               	movlw	0
  7006  15A4  1803               	skipnc
  7007  15A5  3001               	movlw	1
  7008  15A6  07B9               	addwf	ade_signed_value@value+1,f
  7009  15A7  3000               	movlw	0
  7010  15A8  1803               	skipnc
  7011  15A9  3001               	movlw	1
  7012  15AA  07BA               	addwf	ade_signed_value@value+2,f
  7013  15AB  3000               	movlw	0
  7014  15AC  1803               	skipnc
  7015  15AD  3001               	movlw	1
  7016  15AE  07BB               	addwf	ade_signed_value@value+3,f
  7017                           
  7018                           ;ade7753.c: 20:         return -((int) value);
  7019  15AF  0938               	comf	ade_signed_value@value,w
  7020  15B0  00BD               	movwf	??_ade_signed_value
  7021  15B1  0939               	comf	ade_signed_value@value+1,w
  7022  15B2  00BE               	movwf	??_ade_signed_value+1
  7023  15B3  0ABD               	incf	??_ade_signed_value,f
  7024  15B4  1903               	skipnz
  7025  15B5  0ABE               	incf	??_ade_signed_value+1,f
  7026  15B6  083D               	movf	??_ade_signed_value,w
  7027  15B7  00B8               	movwf	?_ade_signed_value
  7028  15B8  083E               	movf	??_ade_signed_value+1,w
  7029  15B9  00B9               	movwf	?_ade_signed_value+1
  7030  15BA  0008               	return
  7031  15BB                     __end_of_ade_signed_value:	
  7032                           ;ade7753.c: 22:     return (int) value;
  7033                           
  7034                           ;ade7753.c: 21:     }
  7035                           
  7036                           
  7037                           	psect	text45
  7038  1FC0                     __ptext45:	
  7039 ;; *************** function _ade_get_IRMS *****************
  7040 ;; Defined at:
  7041 ;;		line 100 in file "ade7753.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  3   24[BANK0 ] unsigned um
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0, pclath, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 300/900
  7052 ;;		On exit  : 300/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       3       0       0       0
  7056 ;;      Locals:         0       0       0       0       0
  7057 ;;      Temps:          0       1       0       0       0
  7058 ;;      Totals:         0       4       0       0       0
  7059 ;;Total ram usage:        4 bytes
  7060 ;; Hardware stack levels used: 1
  7061 ;; Hardware stack levels required when called: 7
  7062 ;; This function calls:
  7063 ;;		_ade_read
  7064 ;; This function is called by:
  7065 ;;		_ade_get_power_meter_data
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069  1FC0                     _ade_get_IRMS:	
  7070                           ;psect for function _ade_get_IRMS
  7071                           
  7072                           
  7073                           ;ade7753.c: 101:     return (uint24_t) ade_read(0x16, 3);
  7074                           
  7075                           ;incstack = 0
  7076 ;; hardware stack exceeded
  7077                           ; Regs used in _ade_get_IRMS: [wreg+status,2+status,0+pclath+cstack]
  7078  1FC0  3003               	movlw	3
  7079  1FC1  1283               	bcf	3,5	;RP0=0, select bank0
  7080  1FC2  00BB               	movwf	??_ade_get_IRMS
  7081  1FC3  083B               	movf	??_ade_get_IRMS,w
  7082  1FC4  00AA               	movwf	ade_read@bytes_to_read
  7083  1FC5  3016               	movlw	22
  7084  1FC6  160A  118A  22A6   	fcall	_ade_read
  7085  1FC9  082C               	movf	?_ade_read+2,w
  7086  1FCA  00BA               	movwf	?_ade_get_IRMS+2
  7087  1FCB  082B               	movf	?_ade_read+1,w
  7088  1FCC  00B9               	movwf	?_ade_get_IRMS+1
  7089  1FCD  082A               	movf	?_ade_read,w
  7090  1FCE  00B8               	movwf	?_ade_get_IRMS
  7091  1FCF  0008               	return
  7092  1FD0                     __end_of_ade_get_IRMS:
  7093                           
  7094                           	psect	text46
  7095  175D                     __ptext46:	
  7096 ;; *************** function ___xxtofl *****************
  7097 ;; Defined at:
  7098 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  sign            1    wreg     unsigned char 
  7101 ;;  val             4   15[BANK0 ] long 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  sign            1   23[BANK0 ] unsigned char 
  7104 ;;  arg             4   25[BANK0 ] unsigned long 
  7105 ;;  exp             1   24[BANK0 ] unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  4   15[BANK0 ] unsigned char 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0
  7110 ;; Tracked objects:
  7111 ;;		On entry : 300/800
  7112 ;;		On exit  : 300/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7115 ;;      Params:         0       4       0       0       0
  7116 ;;      Locals:         0       6       0       0       0
  7117 ;;      Temps:          0       4       0       0       0
  7118 ;;      Totals:         0      14       0       0       0
  7119 ;;Total ram usage:       14 bytes
  7120 ;; Hardware stack levels used: 1
  7121 ;; Hardware stack levels required when called: 5
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_ade_get_power_meter_data
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129  175D                     ___xxtofl:	
  7130                           ;psect for function ___xxtofl
  7131                           
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7135                           ;___xxtofl@sign stored from wreg
  7136  175D  00B7               	movwf	___xxtofl@sign
  7137  175E  0837               	movf	___xxtofl@sign,w
  7138  175F  1D03               	btfss	3,2
  7139  1760  1FB2               	btfss	___xxtofl@val+3,7
  7140  1761  2F72               	goto	l5080
  7141  1762  092F               	comf	___xxtofl@val,w
  7142  1763  00B9               	movwf	___xxtofl@arg
  7143  1764  0930               	comf	___xxtofl@val+1,w
  7144  1765  00BA               	movwf	___xxtofl@arg+1
  7145  1766  0931               	comf	___xxtofl@val+2,w
  7146  1767  00BB               	movwf	___xxtofl@arg+2
  7147  1768  0932               	comf	___xxtofl@val+3,w
  7148  1769  00BC               	movwf	___xxtofl@arg+3
  7149  176A  0AB9               	incf	___xxtofl@arg,f
  7150  176B  1903               	skipnz
  7151  176C  0ABA               	incf	___xxtofl@arg+1,f
  7152  176D  1903               	skipnz
  7153  176E  0ABB               	incf	___xxtofl@arg+2,f
  7154  176F  1903               	skipnz
  7155  1770  0ABC               	incf	___xxtofl@arg+3,f
  7156  1771  2F7A               	goto	l1161
  7157  1772                     l5080:
  7158  1772  0832               	movf	___xxtofl@val+3,w
  7159  1773  00BC               	movwf	___xxtofl@arg+3
  7160  1774  0831               	movf	___xxtofl@val+2,w
  7161  1775  00BB               	movwf	___xxtofl@arg+2
  7162  1776  0830               	movf	___xxtofl@val+1,w
  7163  1777  00BA               	movwf	___xxtofl@arg+1
  7164  1778  082F               	movf	___xxtofl@val,w
  7165  1779  00B9               	movwf	___xxtofl@arg
  7166  177A                     l1161:
  7167  177A  0832               	movf	___xxtofl@val+3,w
  7168  177B  0431               	iorwf	___xxtofl@val+2,w
  7169  177C  0430               	iorwf	___xxtofl@val+1,w
  7170  177D  042F               	iorwf	___xxtofl@val,w
  7171  177E  1D03               	skipz
  7172  177F  2F89               	goto	l5086
  7173  1780  3000               	movlw	0
  7174  1781  00B2               	movwf	?___xxtofl+3
  7175  1782  3000               	movlw	0
  7176  1783  00B1               	movwf	?___xxtofl+2
  7177  1784  3000               	movlw	0
  7178  1785  00B0               	movwf	?___xxtofl+1
  7179  1786  3000               	movlw	0
  7180  1787  00AF               	movwf	?___xxtofl
  7181  1788  0008               	return
  7182  1789                     l5086:
  7183  1789  3096               	movlw	150
  7184  178A  00B3               	movwf	??___xxtofl
  7185  178B  0833               	movf	??___xxtofl,w
  7186  178C  00B8               	movwf	___xxtofl@exp
  7187  178D                     l5090:
  7188  178D  30FE               	movlw	254
  7189  178E  053C               	andwf	___xxtofl@arg+3,w
  7190  178F  1903               	btfsc	3,2
  7191  1790  2FBA               	goto	l1167
  7192  1791  3001               	movlw	1
  7193  1792  00B3               	movwf	??___xxtofl
  7194  1793  0833               	movf	??___xxtofl,w
  7195  1794  07B8               	addwf	___xxtofl@exp,f
  7196  1795  3001               	movlw	1
  7197  1796                     u6005:
  7198  1796  1003               	clrc
  7199  1797  0CBC               	rrf	___xxtofl@arg+3,f
  7200  1798  0CBB               	rrf	___xxtofl@arg+2,f
  7201  1799  0CBA               	rrf	___xxtofl@arg+1,f
  7202  179A  0CB9               	rrf	___xxtofl@arg,f
  7203  179B  3EFF               	addlw	-1
  7204  179C  1D03               	skipz
  7205  179D  2F96               	goto	u6005
  7206  179E  2F8D               	goto	l5090
  7207  179F                     l5092:
  7208  179F  3001               	movlw	1
  7209  17A0  00B3               	movwf	??___xxtofl
  7210  17A1  0833               	movf	??___xxtofl,w
  7211  17A2  07B8               	addwf	___xxtofl@exp,f
  7212  17A3  3001               	movlw	1
  7213  17A4  07B9               	addwf	___xxtofl@arg,f
  7214  17A5  3000               	movlw	0
  7215  17A6  1803               	skipnc
  7216  17A7  3001               	movlw	1
  7217  17A8  07BA               	addwf	___xxtofl@arg+1,f
  7218  17A9  3000               	movlw	0
  7219  17AA  1803               	skipnc
  7220  17AB  3001               	movlw	1
  7221  17AC  07BB               	addwf	___xxtofl@arg+2,f
  7222  17AD  3000               	movlw	0
  7223  17AE  1803               	skipnc
  7224  17AF  3001               	movlw	1
  7225  17B0  07BC               	addwf	___xxtofl@arg+3,f
  7226  17B1  3001               	movlw	1
  7227  17B2                     u6025:
  7228  17B2  1003               	clrc
  7229  17B3  0CBC               	rrf	___xxtofl@arg+3,f
  7230  17B4  0CBB               	rrf	___xxtofl@arg+2,f
  7231  17B5  0CBA               	rrf	___xxtofl@arg+1,f
  7232  17B6  0CB9               	rrf	___xxtofl@arg,f
  7233  17B7  3EFF               	addlw	-1
  7234  17B8  1D03               	skipz
  7235  17B9  2FB2               	goto	u6025
  7236  17BA                     l1167:
  7237  17BA  30FF               	movlw	255
  7238  17BB  053C               	andwf	___xxtofl@arg+3,w
  7239  17BC  1903               	btfsc	3,2
  7240  17BD  2FCE               	goto	l5100
  7241  17BE  2F9F               	goto	l5092
  7242  17BF                     l5102:
  7243  17BF  3002               	movlw	2
  7244  17C0  0238               	subwf	___xxtofl@exp,w
  7245  17C1  1C03               	btfss	3,0
  7246  17C2  2FD0               	goto	l1174
  7247  17C3  3001               	movlw	1
  7248  17C4  02B8               	subwf	___xxtofl@exp,f
  7249  17C5  3001               	movlw	1
  7250  17C6  00B3               	movwf	??___xxtofl
  7251  17C7                     u6045:
  7252  17C7  1003               	clrc
  7253  17C8  0DB9               	rlf	___xxtofl@arg,f
  7254  17C9  0DBA               	rlf	___xxtofl@arg+1,f
  7255  17CA  0DBB               	rlf	___xxtofl@arg+2,f
  7256  17CB  0DBC               	rlf	___xxtofl@arg+3,f
  7257  17CC  0BB3               	decfsz	??___xxtofl,f
  7258  17CD  2FC7               	goto	u6045
  7259  17CE                     l5100:
  7260  17CE  1FBB               	btfss	___xxtofl@arg+2,7
  7261  17CF  2FBF               	goto	l5102
  7262  17D0                     l1174:
  7263  17D0  1838               	btfsc	___xxtofl@exp,0
  7264  17D1  2FDA               	goto	l1175
  7265  17D2  30FF               	movlw	255
  7266  17D3  05B9               	andwf	___xxtofl@arg,f
  7267  17D4  30FF               	movlw	255
  7268  17D5  05BA               	andwf	___xxtofl@arg+1,f
  7269  17D6  307F               	movlw	127
  7270  17D7  05BB               	andwf	___xxtofl@arg+2,f
  7271  17D8  30FF               	movlw	255
  7272  17D9  05BC               	andwf	___xxtofl@arg+3,f
  7273  17DA                     l1175:
  7274  17DA  1003               	clrc
  7275  17DB  0CB8               	rrf	___xxtofl@exp,f
  7276  17DC  0838               	movf	___xxtofl@exp,w
  7277  17DD  00B3               	movwf	??___xxtofl
  7278  17DE  01B4               	clrf	??___xxtofl+1
  7279  17DF  01B5               	clrf	??___xxtofl+2
  7280  17E0  01B6               	clrf	??___xxtofl+3
  7281  17E1  3018               	movlw	24
  7282  17E2                     u6085:
  7283  17E2  1003               	clrc
  7284  17E3  0DB3               	rlf	??___xxtofl,f
  7285  17E4  0DB4               	rlf	??___xxtofl+1,f
  7286  17E5  0DB5               	rlf	??___xxtofl+2,f
  7287  17E6  0DB6               	rlf	??___xxtofl+3,f
  7288  17E7  3EFF               	addlw	-1
  7289  17E8  1D03               	skipz
  7290  17E9  2FE2               	goto	u6085
  7291  17EA  0833               	movf	??___xxtofl,w
  7292  17EB  04B9               	iorwf	___xxtofl@arg,f
  7293  17EC  0834               	movf	??___xxtofl+1,w
  7294  17ED  04BA               	iorwf	___xxtofl@arg+1,f
  7295  17EE  0835               	movf	??___xxtofl+2,w
  7296  17EF  04BB               	iorwf	___xxtofl@arg+2,f
  7297  17F0  0836               	movf	??___xxtofl+3,w
  7298  17F1  04BC               	iorwf	___xxtofl@arg+3,f
  7299  17F2  0837               	movf	___xxtofl@sign,w
  7300  17F3  1D03               	btfss	3,2
  7301  17F4  1FB2               	btfss	___xxtofl@val+3,7
  7302  17F5  2FF7               	goto	l5114
  7303  17F6  17BC               	bsf	___xxtofl@arg+3,7
  7304  17F7                     l5114:
  7305  17F7  083C               	movf	___xxtofl@arg+3,w
  7306  17F8  00B2               	movwf	?___xxtofl+3
  7307  17F9  083B               	movf	___xxtofl@arg+2,w
  7308  17FA  00B1               	movwf	?___xxtofl+2
  7309  17FB  083A               	movf	___xxtofl@arg+1,w
  7310  17FC  00B0               	movwf	?___xxtofl+1
  7311  17FD  0839               	movf	___xxtofl@arg,w
  7312  17FE  00AF               	movwf	?___xxtofl
  7313  17FF  0008               	return
  7314  1800                     __end_of___xxtofl:
  7315                           
  7316                           	psect	text47
  7317  11B3                     __ptext47:	
  7318 ;; *************** function ___wmul *****************
  7319 ;; Defined at:
  7320 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  multiplier      2    9[BANK0 ] unsigned int 
  7323 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  product         2   13[BANK0 ] unsigned int 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  2    9[BANK0 ] unsigned int 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 300/800
  7332 ;;		On exit  : 300/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7335 ;;      Params:         0       4       0       0       0
  7336 ;;      Locals:         0       2       0       0       0
  7337 ;;      Temps:          0       0       0       0       0
  7338 ;;      Totals:         0       6       0       0       0
  7339 ;;Total ram usage:        6 bytes
  7340 ;; Hardware stack levels used: 1
  7341 ;; Hardware stack levels required when called: 5
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_ade_get_power_meter_data
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349  11B3                     ___wmul:	
  7350                           ;psect for function ___wmul
  7351                           
  7352                           
  7353                           ;incstack = 0
  7354                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7355  11B3  01AD               	clrf	___wmul@product
  7356  11B4  01AE               	clrf	___wmul@product+1
  7357  11B5                     l4566:
  7358  11B5  1C29               	btfss	___wmul@multiplier,0
  7359  11B6  29BD               	goto	l728
  7360  11B7  082B               	movf	___wmul@multiplicand,w
  7361  11B8  07AD               	addwf	___wmul@product,f
  7362  11B9  1803               	skipnc
  7363  11BA  0AAE               	incf	___wmul@product+1,f
  7364  11BB  082C               	movf	___wmul@multiplicand+1,w
  7365  11BC  07AE               	addwf	___wmul@product+1,f
  7366  11BD                     l728:
  7367  11BD  3001               	movlw	1
  7368  11BE                     u4765:
  7369  11BE  1003               	clrc
  7370  11BF  0DAB               	rlf	___wmul@multiplicand,f
  7371  11C0  0DAC               	rlf	___wmul@multiplicand+1,f
  7372  11C1  3EFF               	addlw	-1
  7373  11C2  1D03               	skipz
  7374  11C3  29BE               	goto	u4765
  7375  11C4  3001               	movlw	1
  7376  11C5                     u4775:
  7377  11C5  1003               	clrc
  7378  11C6  0CAA               	rrf	___wmul@multiplier+1,f
  7379  11C7  0CA9               	rrf	___wmul@multiplier,f
  7380  11C8  3EFF               	addlw	-1
  7381  11C9  1D03               	skipz
  7382  11CA  29C5               	goto	u4775
  7383  11CB  0829               	movf	___wmul@multiplier,w
  7384  11CC  042A               	iorwf	___wmul@multiplier+1,w
  7385  11CD  1D03               	btfss	3,2
  7386  11CE  29B5               	goto	l4566
  7387  11CF  082E               	movf	___wmul@product+1,w
  7388  11D0  00AA               	movwf	?___wmul+1
  7389  11D1  082D               	movf	___wmul@product,w
  7390  11D2  00A9               	movwf	?___wmul
  7391  11D3  0008               	return
  7392  11D4                     __end_of___wmul:
  7393                           
  7394                           	psect	text48
  7395  0061                     __ptext48:	
  7396 ;; *************** function ___flmul *****************
  7397 ;; Defined at:
  7398 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  b               4   29[BANK0 ] unsigned int 
  7401 ;;  a               4   33[BANK0 ] unsigned int 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  prod            4   49[BANK0 ] struct .
  7404 ;;  grs             4   45[BANK0 ] unsigned long 
  7405 ;;  temp            2   53[BANK0 ] struct .
  7406 ;;  bexp            1   44[BANK0 ] unsigned char 
  7407 ;;  aexp            1   43[BANK0 ] unsigned char 
  7408 ;;  sign            1   42[BANK0 ] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  4   29[BANK0 ] unsigned char 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 300/800
  7415 ;;		On exit  : 300/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7418 ;;      Params:         0       8       0       0       0
  7419 ;;      Locals:         0      13       0       0       0
  7420 ;;      Temps:          0       5       0       0       0
  7421 ;;      Totals:         0      26       0       0       0
  7422 ;;Total ram usage:       26 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; Hardware stack levels required when called: 6
  7425 ;; This function calls:
  7426 ;;		__Umul8_16
  7427 ;; This function is called by:
  7428 ;;		_ade_get_power_meter_data
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432  0061                     ___flmul:	
  7433                           ;psect for function ___flmul
  7434                           
  7435                           
  7436                           ;incstack = 0
  7437                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7438  0061  0840               	movf	___flmul@b+3,w
  7439  0062  3980               	andlw	128
  7440  0063  00C5               	movwf	??___flmul
  7441  0064  0845               	movf	??___flmul,w
  7442  0065  00CA               	movwf	___flmul@sign
  7443  0066  0840               	movf	___flmul@b+3,w
  7444  0067  00C5               	movwf	??___flmul
  7445  0068  0745               	addwf	??___flmul,w
  7446  0069  00C6               	movwf	??___flmul+1
  7447  006A  0846               	movf	??___flmul+1,w
  7448  006B  00CC               	movwf	___flmul@bexp
  7449  006C  1BBF               	btfsc	___flmul@b+2,7
  7450  006D  144C               	bsf	___flmul@bexp,0
  7451  006E  084C               	movf	___flmul@bexp,w
  7452  006F  1903               	btfsc	3,2
  7453  0070  287E               	goto	l4950
  7454  0071  0A4C               	incf	___flmul@bexp,w
  7455  0072  1D03               	btfss	3,2
  7456  0073  287C               	goto	l4948
  7457  0074  3000               	movlw	0
  7458  0075  00C0               	movwf	___flmul@b+3
  7459  0076  3000               	movlw	0
  7460  0077  00BF               	movwf	___flmul@b+2
  7461  0078  3000               	movlw	0
  7462  0079  00BE               	movwf	___flmul@b+1
  7463  007A  3000               	movlw	0
  7464  007B  00BD               	movwf	___flmul@b
  7465  007C                     l4948:
  7466  007C  17BF               	bsf	___flmul@b+2,7
  7467  007D  2886               	goto	l4952
  7468  007E                     l4950:
  7469  007E  3000               	movlw	0
  7470  007F  00C0               	movwf	___flmul@b+3
  7471  0080  3000               	movlw	0
  7472  0081  00BF               	movwf	___flmul@b+2
  7473  0082  3000               	movlw	0
  7474  0083  00BE               	movwf	___flmul@b+1
  7475  0084  3000               	movlw	0
  7476  0085  00BD               	movwf	___flmul@b
  7477  0086                     l4952:
  7478  0086  0844               	movf	___flmul@a+3,w
  7479  0087  3980               	andlw	128
  7480  0088  00C5               	movwf	??___flmul
  7481  0089  0845               	movf	??___flmul,w
  7482  008A  06CA               	xorwf	___flmul@sign,f
  7483  008B  0844               	movf	___flmul@a+3,w
  7484  008C  00C5               	movwf	??___flmul
  7485  008D  0745               	addwf	??___flmul,w
  7486  008E  00C6               	movwf	??___flmul+1
  7487  008F  0846               	movf	??___flmul+1,w
  7488  0090  00CB               	movwf	___flmul@aexp
  7489  0091  1BC3               	btfsc	___flmul@a+2,7
  7490  0092  144B               	bsf	___flmul@aexp,0
  7491  0093  084B               	movf	___flmul@aexp,w
  7492  0094  1903               	btfsc	3,2
  7493  0095  28A3               	goto	l4968
  7494  0096  0A4B               	incf	___flmul@aexp,w
  7495  0097  1D03               	btfss	3,2
  7496  0098  28A1               	goto	l4966
  7497  0099  3000               	movlw	0
  7498  009A  00C4               	movwf	___flmul@a+3
  7499  009B  3000               	movlw	0
  7500  009C  00C3               	movwf	___flmul@a+2
  7501  009D  3000               	movlw	0
  7502  009E  00C2               	movwf	___flmul@a+1
  7503  009F  3000               	movlw	0
  7504  00A0  00C1               	movwf	___flmul@a
  7505  00A1                     l4966:
  7506  00A1  17C3               	bsf	___flmul@a+2,7
  7507  00A2  28AB               	goto	l4970
  7508  00A3                     l4968:
  7509  00A3  3000               	movlw	0
  7510  00A4  00C4               	movwf	___flmul@a+3
  7511  00A5  3000               	movlw	0
  7512  00A6  00C3               	movwf	___flmul@a+2
  7513  00A7  3000               	movlw	0
  7514  00A8  00C2               	movwf	___flmul@a+1
  7515  00A9  3000               	movlw	0
  7516  00AA  00C1               	movwf	___flmul@a
  7517  00AB                     l4970:
  7518  00AB  084B               	movf	___flmul@aexp,w
  7519  00AC  1D03               	btfss	3,2
  7520  00AD  084C               	movf	___flmul@bexp,w
  7521  00AE  1D03               	btfss	3,2
  7522  00AF  28B9               	goto	l4978
  7523  00B0  3000               	movlw	0
  7524  00B1  00C0               	movwf	?___flmul+3
  7525  00B2  3000               	movlw	0
  7526  00B3  00BF               	movwf	?___flmul+2
  7527  00B4  3000               	movlw	0
  7528  00B5  00BE               	movwf	?___flmul+1
  7529  00B6  3000               	movlw	0
  7530  00B7  00BD               	movwf	?___flmul
  7531  00B8  0008               	return
  7532  00B9                     l4978:
  7533  00B9  083D               	movf	___flmul@b,w
  7534  00BA  00C5               	movwf	??___flmul
  7535  00BB  0845               	movf	??___flmul,w
  7536  00BC  00A9               	movwf	__Umul8_16@multiplicand
  7537  00BD  0843               	movf	___flmul@a+2,w
  7538  00BE  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7539  00C3  082A               	movf	?__Umul8_16+1,w
  7540  00C4  00D6               	movwf	___flmul@temp+1
  7541  00C5  0829               	movf	?__Umul8_16,w
  7542  00C6  00D5               	movwf	___flmul@temp
  7543  00C7  0855               	movf	___flmul@temp,w
  7544  00C8  00C5               	movwf	??___flmul
  7545  00C9  01C6               	clrf	??___flmul+1
  7546  00CA  01C7               	clrf	??___flmul+2
  7547  00CB  01C8               	clrf	??___flmul+3
  7548  00CC  0848               	movf	??___flmul+3,w
  7549  00CD  00D0               	movwf	___flmul@grs+3
  7550  00CE  0847               	movf	??___flmul+2,w
  7551  00CF  00CF               	movwf	___flmul@grs+2
  7552  00D0  0846               	movf	??___flmul+1,w
  7553  00D1  00CE               	movwf	___flmul@grs+1
  7554  00D2  0845               	movf	??___flmul,w
  7555  00D3  00CD               	movwf	___flmul@grs
  7556  00D4  0856               	movf	___flmul@temp+1,w
  7557  00D5  00C5               	movwf	??___flmul
  7558  00D6  01C6               	clrf	??___flmul+1
  7559  00D7  01C7               	clrf	??___flmul+2
  7560  00D8  01C8               	clrf	??___flmul+3
  7561  00D9  0848               	movf	??___flmul+3,w
  7562  00DA  00D4               	movwf	___flmul@prod+3
  7563  00DB  0847               	movf	??___flmul+2,w
  7564  00DC  00D3               	movwf	___flmul@prod+2
  7565  00DD  0846               	movf	??___flmul+1,w
  7566  00DE  00D2               	movwf	___flmul@prod+1
  7567  00DF  0845               	movf	??___flmul,w
  7568  00E0  00D1               	movwf	___flmul@prod
  7569  00E1  083E               	movf	___flmul@b+1,w
  7570  00E2  00C5               	movwf	??___flmul
  7571  00E3  0845               	movf	??___flmul,w
  7572  00E4  00A9               	movwf	__Umul8_16@multiplicand
  7573  00E5  0842               	movf	___flmul@a+1,w
  7574  00E6  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7575  00EB  082A               	movf	?__Umul8_16+1,w
  7576  00EC  00D6               	movwf	___flmul@temp+1
  7577  00ED  0829               	movf	?__Umul8_16,w
  7578  00EE  00D5               	movwf	___flmul@temp
  7579  00EF  0855               	movf	___flmul@temp,w
  7580  00F0  00C5               	movwf	??___flmul
  7581  00F1  01C6               	clrf	??___flmul+1
  7582  00F2  01C7               	clrf	??___flmul+2
  7583  00F3  01C8               	clrf	??___flmul+3
  7584  00F4  0845               	movf	??___flmul,w
  7585  00F5  07CD               	addwf	___flmul@grs,f
  7586  00F6  0846               	movf	??___flmul+1,w
  7587  00F7  1103               	clrz
  7588  00F8  1803               	skipnc
  7589  00F9  3E01               	addlw	1
  7590  00FA  1D03               	btfss	3,2
  7591  00FB  07CE               	addwf	___flmul@grs+1,f
  7592  00FC  0847               	movf	??___flmul+2,w
  7593  00FD  1103               	clrz
  7594  00FE  1803               	skipnc
  7595  00FF  3E01               	addlw	1
  7596  0100  1D03               	btfss	3,2
  7597  0101  07CF               	addwf	___flmul@grs+2,f
  7598  0102  0848               	movf	??___flmul+3,w
  7599  0103  1103               	clrz
  7600  0104  1803               	skipnc
  7601  0105  3E01               	addlw	1
  7602  0106  1D03               	btfss	3,2
  7603  0107  07D0               	addwf	___flmul@grs+3,f
  7604  0108  0856               	movf	___flmul@temp+1,w
  7605  0109  00C5               	movwf	??___flmul
  7606  010A  01C6               	clrf	??___flmul+1
  7607  010B  01C7               	clrf	??___flmul+2
  7608  010C  01C8               	clrf	??___flmul+3
  7609  010D  0845               	movf	??___flmul,w
  7610  010E  07D1               	addwf	___flmul@prod,f
  7611  010F  0846               	movf	??___flmul+1,w
  7612  0110  1103               	clrz
  7613  0111  1803               	skipnc
  7614  0112  3E01               	addlw	1
  7615  0113  1D03               	btfss	3,2
  7616  0114  07D2               	addwf	___flmul@prod+1,f
  7617  0115  0847               	movf	??___flmul+2,w
  7618  0116  1103               	clrz
  7619  0117  1803               	skipnc
  7620  0118  3E01               	addlw	1
  7621  0119  1D03               	btfss	3,2
  7622  011A  07D3               	addwf	___flmul@prod+2,f
  7623  011B  0848               	movf	??___flmul+3,w
  7624  011C  1103               	clrz
  7625  011D  1803               	skipnc
  7626  011E  3E01               	addlw	1
  7627  011F  1D03               	btfss	3,2
  7628  0120  07D4               	addwf	___flmul@prod+3,f
  7629  0121  083F               	movf	___flmul@b+2,w
  7630  0122  00C5               	movwf	??___flmul
  7631  0123  0845               	movf	??___flmul,w
  7632  0124  00A9               	movwf	__Umul8_16@multiplicand
  7633  0125  0841               	movf	___flmul@a,w
  7634  0126  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7635  012B  082A               	movf	?__Umul8_16+1,w
  7636  012C  00D6               	movwf	___flmul@temp+1
  7637  012D  0829               	movf	?__Umul8_16,w
  7638  012E  00D5               	movwf	___flmul@temp
  7639  012F  0855               	movf	___flmul@temp,w
  7640  0130  00C5               	movwf	??___flmul
  7641  0131  01C6               	clrf	??___flmul+1
  7642  0132  01C7               	clrf	??___flmul+2
  7643  0133  01C8               	clrf	??___flmul+3
  7644  0134  0845               	movf	??___flmul,w
  7645  0135  07CD               	addwf	___flmul@grs,f
  7646  0136  0846               	movf	??___flmul+1,w
  7647  0137  1103               	clrz
  7648  0138  1803               	skipnc
  7649  0139  3E01               	addlw	1
  7650  013A  1D03               	btfss	3,2
  7651  013B  07CE               	addwf	___flmul@grs+1,f
  7652  013C  0847               	movf	??___flmul+2,w
  7653  013D  1103               	clrz
  7654  013E  1803               	skipnc
  7655  013F  3E01               	addlw	1
  7656  0140  1D03               	btfss	3,2
  7657  0141  07CF               	addwf	___flmul@grs+2,f
  7658  0142  0848               	movf	??___flmul+3,w
  7659  0143  1103               	clrz
  7660  0144  1803               	skipnc
  7661  0145  3E01               	addlw	1
  7662  0146  1D03               	btfss	3,2
  7663  0147  07D0               	addwf	___flmul@grs+3,f
  7664  0148  0856               	movf	___flmul@temp+1,w
  7665  0149  00C5               	movwf	??___flmul
  7666  014A  01C6               	clrf	??___flmul+1
  7667  014B  01C7               	clrf	??___flmul+2
  7668  014C  01C8               	clrf	??___flmul+3
  7669  014D  0845               	movf	??___flmul,w
  7670  014E  07D1               	addwf	___flmul@prod,f
  7671  014F  0846               	movf	??___flmul+1,w
  7672  0150  1103               	clrz
  7673  0151  1803               	skipnc
  7674  0152  3E01               	addlw	1
  7675  0153  1D03               	btfss	3,2
  7676  0154  07D2               	addwf	___flmul@prod+1,f
  7677  0155  0847               	movf	??___flmul+2,w
  7678  0156  1103               	clrz
  7679  0157  1803               	skipnc
  7680  0158  3E01               	addlw	1
  7681  0159  1D03               	btfss	3,2
  7682  015A  07D3               	addwf	___flmul@prod+2,f
  7683  015B  0848               	movf	??___flmul+3,w
  7684  015C  1103               	clrz
  7685  015D  1803               	skipnc
  7686  015E  3E01               	addlw	1
  7687  015F  1D03               	btfss	3,2
  7688  0160  07D4               	addwf	___flmul@prod+3,f
  7689  0161  3008               	movlw	8
  7690  0162  00C5               	movwf	??___flmul
  7691  0163                     u5735:
  7692  0163  1003               	clrc
  7693  0164  0DCD               	rlf	___flmul@grs,f
  7694  0165  0DCE               	rlf	___flmul@grs+1,f
  7695  0166  0DCF               	rlf	___flmul@grs+2,f
  7696  0167  0DD0               	rlf	___flmul@grs+3,f
  7697  0168  0BC5               	decfsz	??___flmul,f
  7698  0169  2963               	goto	u5735
  7699  016A  083E               	movf	___flmul@b+1,w
  7700  016B  00C5               	movwf	??___flmul
  7701  016C  0845               	movf	??___flmul,w
  7702  016D  00A9               	movwf	__Umul8_16@multiplicand
  7703  016E  0841               	movf	___flmul@a,w
  7704  016F  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7705  0174  082A               	movf	?__Umul8_16+1,w
  7706  0175  00D6               	movwf	___flmul@temp+1
  7707  0176  0829               	movf	?__Umul8_16,w
  7708  0177  00D5               	movwf	___flmul@temp
  7709  0178  0855               	movf	___flmul@temp,w
  7710  0179  00C5               	movwf	??___flmul
  7711  017A  0856               	movf	___flmul@temp+1,w
  7712  017B  00C6               	movwf	??___flmul+1
  7713  017C  01C7               	clrf	??___flmul+2
  7714  017D  01C8               	clrf	??___flmul+3
  7715  017E  0845               	movf	??___flmul,w
  7716  017F  07CD               	addwf	___flmul@grs,f
  7717  0180  0846               	movf	??___flmul+1,w
  7718  0181  1103               	clrz
  7719  0182  1803               	skipnc
  7720  0183  3E01               	addlw	1
  7721  0184  1D03               	btfss	3,2
  7722  0185  07CE               	addwf	___flmul@grs+1,f
  7723  0186  0847               	movf	??___flmul+2,w
  7724  0187  1103               	clrz
  7725  0188  1803               	skipnc
  7726  0189  3E01               	addlw	1
  7727  018A  1D03               	btfss	3,2
  7728  018B  07CF               	addwf	___flmul@grs+2,f
  7729  018C  0848               	movf	??___flmul+3,w
  7730  018D  1103               	clrz
  7731  018E  1803               	skipnc
  7732  018F  3E01               	addlw	1
  7733  0190  1D03               	btfss	3,2
  7734  0191  07D0               	addwf	___flmul@grs+3,f
  7735  0192  083D               	movf	___flmul@b,w
  7736  0193  00C5               	movwf	??___flmul
  7737  0194  0845               	movf	??___flmul,w
  7738  0195  00A9               	movwf	__Umul8_16@multiplicand
  7739  0196  0842               	movf	___flmul@a+1,w
  7740  0197  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7741  019C  082A               	movf	?__Umul8_16+1,w
  7742  019D  00D6               	movwf	___flmul@temp+1
  7743  019E  0829               	movf	?__Umul8_16,w
  7744  019F  00D5               	movwf	___flmul@temp
  7745  01A0  0855               	movf	___flmul@temp,w
  7746  01A1  00C5               	movwf	??___flmul
  7747  01A2  0856               	movf	___flmul@temp+1,w
  7748  01A3  00C6               	movwf	??___flmul+1
  7749  01A4  01C7               	clrf	??___flmul+2
  7750  01A5  01C8               	clrf	??___flmul+3
  7751  01A6  0845               	movf	??___flmul,w
  7752  01A7  07CD               	addwf	___flmul@grs,f
  7753  01A8  0846               	movf	??___flmul+1,w
  7754  01A9  1103               	clrz
  7755  01AA  1803               	skipnc
  7756  01AB  3E01               	addlw	1
  7757  01AC  1D03               	btfss	3,2
  7758  01AD  07CE               	addwf	___flmul@grs+1,f
  7759  01AE  0847               	movf	??___flmul+2,w
  7760  01AF  1103               	clrz
  7761  01B0  1803               	skipnc
  7762  01B1  3E01               	addlw	1
  7763  01B2  1D03               	btfss	3,2
  7764  01B3  07CF               	addwf	___flmul@grs+2,f
  7765  01B4  0848               	movf	??___flmul+3,w
  7766  01B5  1103               	clrz
  7767  01B6  1803               	skipnc
  7768  01B7  3E01               	addlw	1
  7769  01B8  1D03               	btfss	3,2
  7770  01B9  07D0               	addwf	___flmul@grs+3,f
  7771  01BA  3008               	movlw	8
  7772  01BB  00C5               	movwf	??___flmul
  7773  01BC                     u5765:
  7774  01BC  1003               	clrc
  7775  01BD  0DCD               	rlf	___flmul@grs,f
  7776  01BE  0DCE               	rlf	___flmul@grs+1,f
  7777  01BF  0DCF               	rlf	___flmul@grs+2,f
  7778  01C0  0DD0               	rlf	___flmul@grs+3,f
  7779  01C1  0BC5               	decfsz	??___flmul,f
  7780  01C2  29BC               	goto	u5765
  7781  01C3  083D               	movf	___flmul@b,w
  7782  01C4  00C5               	movwf	??___flmul
  7783  01C5  0845               	movf	??___flmul,w
  7784  01C6  00A9               	movwf	__Umul8_16@multiplicand
  7785  01C7  0841               	movf	___flmul@a,w
  7786  01C8  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7787  01CD  082A               	movf	?__Umul8_16+1,w
  7788  01CE  00D6               	movwf	___flmul@temp+1
  7789  01CF  0829               	movf	?__Umul8_16,w
  7790  01D0  00D5               	movwf	___flmul@temp
  7791  01D1  0855               	movf	___flmul@temp,w
  7792  01D2  00C5               	movwf	??___flmul
  7793  01D3  0856               	movf	___flmul@temp+1,w
  7794  01D4  00C6               	movwf	??___flmul+1
  7795  01D5  01C7               	clrf	??___flmul+2
  7796  01D6  01C8               	clrf	??___flmul+3
  7797  01D7  0845               	movf	??___flmul,w
  7798  01D8  07CD               	addwf	___flmul@grs,f
  7799  01D9  0846               	movf	??___flmul+1,w
  7800  01DA  1103               	clrz
  7801  01DB  1803               	skipnc
  7802  01DC  3E01               	addlw	1
  7803  01DD  1D03               	btfss	3,2
  7804  01DE  07CE               	addwf	___flmul@grs+1,f
  7805  01DF  0847               	movf	??___flmul+2,w
  7806  01E0  1103               	clrz
  7807  01E1  1803               	skipnc
  7808  01E2  3E01               	addlw	1
  7809  01E3  1D03               	btfss	3,2
  7810  01E4  07CF               	addwf	___flmul@grs+2,f
  7811  01E5  0848               	movf	??___flmul+3,w
  7812  01E6  1103               	clrz
  7813  01E7  1803               	skipnc
  7814  01E8  3E01               	addlw	1
  7815  01E9  1D03               	btfss	3,2
  7816  01EA  07D0               	addwf	___flmul@grs+3,f
  7817  01EB  083E               	movf	___flmul@b+1,w
  7818  01EC  00C5               	movwf	??___flmul
  7819  01ED  0845               	movf	??___flmul,w
  7820  01EE  00A9               	movwf	__Umul8_16@multiplicand
  7821  01EF  0843               	movf	___flmul@a+2,w
  7822  01F0  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7823  01F5  082A               	movf	?__Umul8_16+1,w
  7824  01F6  00D6               	movwf	___flmul@temp+1
  7825  01F7  0829               	movf	?__Umul8_16,w
  7826  01F8  00D5               	movwf	___flmul@temp
  7827  01F9  0855               	movf	___flmul@temp,w
  7828  01FA  00C5               	movwf	??___flmul
  7829  01FB  0856               	movf	___flmul@temp+1,w
  7830  01FC  00C6               	movwf	??___flmul+1
  7831  01FD  01C7               	clrf	??___flmul+2
  7832  01FE  01C8               	clrf	??___flmul+3
  7833  01FF  0845               	movf	??___flmul,w
  7834  0200  07D1               	addwf	___flmul@prod,f
  7835  0201  0846               	movf	??___flmul+1,w
  7836  0202  1103               	clrz
  7837  0203  1803               	skipnc
  7838  0204  3E01               	addlw	1
  7839  0205  1D03               	btfss	3,2
  7840  0206  07D2               	addwf	___flmul@prod+1,f
  7841  0207  0847               	movf	??___flmul+2,w
  7842  0208  1103               	clrz
  7843  0209  1803               	skipnc
  7844  020A  3E01               	addlw	1
  7845  020B  1D03               	btfss	3,2
  7846  020C  07D3               	addwf	___flmul@prod+2,f
  7847  020D  0848               	movf	??___flmul+3,w
  7848  020E  1103               	clrz
  7849  020F  1803               	skipnc
  7850  0210  3E01               	addlw	1
  7851  0211  1D03               	btfss	3,2
  7852  0212  07D4               	addwf	___flmul@prod+3,f
  7853  0213  083F               	movf	___flmul@b+2,w
  7854  0214  00C5               	movwf	??___flmul
  7855  0215  0845               	movf	??___flmul,w
  7856  0216  00A9               	movwf	__Umul8_16@multiplicand
  7857  0217  0842               	movf	___flmul@a+1,w
  7858  0218  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7859  021D  082A               	movf	?__Umul8_16+1,w
  7860  021E  00D6               	movwf	___flmul@temp+1
  7861  021F  0829               	movf	?__Umul8_16,w
  7862  0220  00D5               	movwf	___flmul@temp
  7863  0221  0855               	movf	___flmul@temp,w
  7864  0222  00C5               	movwf	??___flmul
  7865  0223  0856               	movf	___flmul@temp+1,w
  7866  0224  00C6               	movwf	??___flmul+1
  7867  0225  01C7               	clrf	??___flmul+2
  7868  0226  01C8               	clrf	??___flmul+3
  7869  0227  0845               	movf	??___flmul,w
  7870  0228  07D1               	addwf	___flmul@prod,f
  7871  0229  0846               	movf	??___flmul+1,w
  7872  022A  1103               	clrz
  7873  022B  1803               	skipnc
  7874  022C  3E01               	addlw	1
  7875  022D  1D03               	btfss	3,2
  7876  022E  07D2               	addwf	___flmul@prod+1,f
  7877  022F  0847               	movf	??___flmul+2,w
  7878  0230  1103               	clrz
  7879  0231  1803               	skipnc
  7880  0232  3E01               	addlw	1
  7881  0233  1D03               	btfss	3,2
  7882  0234  07D3               	addwf	___flmul@prod+2,f
  7883  0235  0848               	movf	??___flmul+3,w
  7884  0236  1103               	clrz
  7885  0237  1803               	skipnc
  7886  0238  3E01               	addlw	1
  7887  0239  1D03               	btfss	3,2
  7888  023A  07D4               	addwf	___flmul@prod+3,f
  7889  023B  083F               	movf	___flmul@b+2,w
  7890  023C  00C5               	movwf	??___flmul
  7891  023D  0845               	movf	??___flmul,w
  7892  023E  00A9               	movwf	__Umul8_16@multiplicand
  7893  023F  0843               	movf	___flmul@a+2,w
  7894  0240  160A  118A  21D4  120A  118A  	fcall	__Umul8_16
  7895  0245  082A               	movf	?__Umul8_16+1,w
  7896  0246  00D6               	movwf	___flmul@temp+1
  7897  0247  0829               	movf	?__Umul8_16,w
  7898  0248  00D5               	movwf	___flmul@temp
  7899  0249  0855               	movf	___flmul@temp,w
  7900  024A  00C5               	movwf	??___flmul
  7901  024B  0856               	movf	___flmul@temp+1,w
  7902  024C  00C6               	movwf	??___flmul+1
  7903  024D  01C7               	clrf	??___flmul+2
  7904  024E  01C8               	clrf	??___flmul+3
  7905  024F  3008               	movlw	8
  7906  0250                     u5805:
  7907  0250  1003               	clrc
  7908  0251  0DC5               	rlf	??___flmul,f
  7909  0252  0DC6               	rlf	??___flmul+1,f
  7910  0253  0DC7               	rlf	??___flmul+2,f
  7911  0254  0DC8               	rlf	??___flmul+3,f
  7912  0255  3EFF               	addlw	-1
  7913  0256  1D03               	skipz
  7914  0257  2A50               	goto	u5805
  7915  0258  0845               	movf	??___flmul,w
  7916  0259  07D1               	addwf	___flmul@prod,f
  7917  025A  0846               	movf	??___flmul+1,w
  7918  025B  1103               	clrz
  7919  025C  1803               	skipnc
  7920  025D  3E01               	addlw	1
  7921  025E  1D03               	btfss	3,2
  7922  025F  07D2               	addwf	___flmul@prod+1,f
  7923  0260  0847               	movf	??___flmul+2,w
  7924  0261  1103               	clrz
  7925  0262  1803               	skipnc
  7926  0263  3E01               	addlw	1
  7927  0264  1D03               	btfss	3,2
  7928  0265  07D3               	addwf	___flmul@prod+2,f
  7929  0266  0848               	movf	??___flmul+3,w
  7930  0267  1103               	clrz
  7931  0268  1803               	skipnc
  7932  0269  3E01               	addlw	1
  7933  026A  1D03               	btfss	3,2
  7934  026B  07D4               	addwf	___flmul@prod+3,f
  7935  026C  0850               	movf	___flmul@grs+3,w
  7936  026D  00C5               	movwf	??___flmul
  7937  026E  01C6               	clrf	??___flmul+1
  7938  026F  01C7               	clrf	??___flmul+2
  7939  0270  01C8               	clrf	??___flmul+3
  7940  0271  0845               	movf	??___flmul,w
  7941  0272  07D1               	addwf	___flmul@prod,f
  7942  0273  0846               	movf	??___flmul+1,w
  7943  0274  1103               	clrz
  7944  0275  1803               	skipnc
  7945  0276  3E01               	addlw	1
  7946  0277  1D03               	btfss	3,2
  7947  0278  07D2               	addwf	___flmul@prod+1,f
  7948  0279  0847               	movf	??___flmul+2,w
  7949  027A  1103               	clrz
  7950  027B  1803               	skipnc
  7951  027C  3E01               	addlw	1
  7952  027D  1D03               	btfss	3,2
  7953  027E  07D3               	addwf	___flmul@prod+2,f
  7954  027F  0848               	movf	??___flmul+3,w
  7955  0280  1103               	clrz
  7956  0281  1803               	skipnc
  7957  0282  3E01               	addlw	1
  7958  0283  1D03               	btfss	3,2
  7959  0284  07D4               	addwf	___flmul@prod+3,f
  7960  0285  3008               	movlw	8
  7961  0286  00C5               	movwf	??___flmul
  7962  0287                     u5835:
  7963  0287  1003               	clrc
  7964  0288  0DCD               	rlf	___flmul@grs,f
  7965  0289  0DCE               	rlf	___flmul@grs+1,f
  7966  028A  0DCF               	rlf	___flmul@grs+2,f
  7967  028B  0DD0               	rlf	___flmul@grs+3,f
  7968  028C  0BC5               	decfsz	??___flmul,f
  7969  028D  2A87               	goto	u5835
  7970  028E  084C               	movf	___flmul@bexp,w
  7971  028F  074B               	addwf	___flmul@aexp,w
  7972  0290  00C5               	movwf	??___flmul
  7973  0291  01C6               	clrf	??___flmul+1
  7974  0292  0DC6               	rlf	??___flmul+1,f
  7975  0293  0845               	movf	??___flmul,w
  7976  0294  3E82               	addlw	130
  7977  0295  00D5               	movwf	___flmul@temp
  7978  0296  0846               	movf	??___flmul+1,w
  7979  0297  1803               	skipnc
  7980  0298  3E01               	addlw	1
  7981  0299  3EFF               	addlw	255
  7982  029A  00D6               	movwf	___flmul@temp+1
  7983  029B                     l5030:
  7984  029B  1BD3               	btfsc	___flmul@prod+2,7
  7985  029C  2AB8               	goto	l5032
  7986  029D  3001               	movlw	1
  7987  029E  00C5               	movwf	??___flmul
  7988  029F                     u5845:
  7989  029F  1003               	clrc
  7990  02A0  0DD1               	rlf	___flmul@prod,f
  7991  02A1  0DD2               	rlf	___flmul@prod+1,f
  7992  02A2  0DD3               	rlf	___flmul@prod+2,f
  7993  02A3  0DD4               	rlf	___flmul@prod+3,f
  7994  02A4  0BC5               	decfsz	??___flmul,f
  7995  02A5  2A9F               	goto	u5845
  7996  02A6  1BD0               	btfsc	___flmul@grs+3,7
  7997  02A7  1451               	bsf	___flmul@prod,0
  7998  02A8  3001               	movlw	1
  7999  02A9  00C5               	movwf	??___flmul
  8000  02AA                     u5865:
  8001  02AA  1003               	clrc
  8002  02AB  0DCD               	rlf	___flmul@grs,f
  8003  02AC  0DCE               	rlf	___flmul@grs+1,f
  8004  02AD  0DCF               	rlf	___flmul@grs+2,f
  8005  02AE  0DD0               	rlf	___flmul@grs+3,f
  8006  02AF  0BC5               	decfsz	??___flmul,f
  8007  02B0  2AAA               	goto	u5865
  8008  02B1  30FF               	movlw	255
  8009  02B2  07D5               	addwf	___flmul@temp,f
  8010  02B3  1803               	skipnc
  8011  02B4  0AD6               	incf	___flmul@temp+1,f
  8012  02B5  30FF               	movlw	255
  8013  02B6  07D6               	addwf	___flmul@temp+1,f
  8014  02B7  2A9B               	goto	l5030
  8015  02B8                     l5032:
  8016  02B8  01CB               	clrf	___flmul@aexp
  8017  02B9  1FD0               	btfss	___flmul@grs+3,7
  8018  02BA  2AD1               	goto	l5042
  8019  02BB  30FF               	movlw	255
  8020  02BC  054D               	andwf	___flmul@grs,w
  8021  02BD  00C5               	movwf	??___flmul
  8022  02BE  30FF               	movlw	255
  8023  02BF  054E               	andwf	___flmul@grs+1,w
  8024  02C0  00C6               	movwf	??___flmul+1
  8025  02C1  30FF               	movlw	255
  8026  02C2  054F               	andwf	___flmul@grs+2,w
  8027  02C3  00C7               	movwf	??___flmul+2
  8028  02C4  307F               	movlw	127
  8029  02C5  0550               	andwf	___flmul@grs+3,w
  8030  02C6  00C8               	movwf	??___flmul+3
  8031  02C7  0848               	movf	??___flmul+3,w
  8032  02C8  0447               	iorwf	??___flmul+2,w
  8033  02C9  0446               	iorwf	??___flmul+1,w
  8034  02CA  0445               	iorwf	??___flmul,w
  8035  02CB  1903               	skipnz
  8036  02CC  1851               	btfsc	___flmul@prod,0
  8037  02CD  2ACF               	goto	l5038
  8038  02CE  2AD1               	goto	l5042
  8039  02CF                     l5038:
  8040  02CF  01CB               	clrf	___flmul@aexp
  8041  02D0  0ACB               	incf	___flmul@aexp,f
  8042  02D1                     l5042:
  8043  02D1  084B               	movf	___flmul@aexp,w
  8044  02D2  1903               	btfsc	3,2
  8045  02D3  2B03               	goto	l5052
  8046  02D4  3001               	movlw	1
  8047  02D5  07D1               	addwf	___flmul@prod,f
  8048  02D6  3000               	movlw	0
  8049  02D7  1803               	skipnc
  8050  02D8  3001               	movlw	1
  8051  02D9  07D2               	addwf	___flmul@prod+1,f
  8052  02DA  3000               	movlw	0
  8053  02DB  1803               	skipnc
  8054  02DC  3001               	movlw	1
  8055  02DD  07D3               	addwf	___flmul@prod+2,f
  8056  02DE  3000               	movlw	0
  8057  02DF  1803               	skipnc
  8058  02E0  3001               	movlw	1
  8059  02E1  07D4               	addwf	___flmul@prod+3,f
  8060  02E2  1C54               	btfss	___flmul@prod+3,0
  8061  02E3  2B03               	goto	l5052
  8062  02E4  0851               	movf	___flmul@prod,w
  8063  02E5  00C5               	movwf	??___flmul
  8064  02E6  0852               	movf	___flmul@prod+1,w
  8065  02E7  00C6               	movwf	??___flmul+1
  8066  02E8  0853               	movf	___flmul@prod+2,w
  8067  02E9  00C7               	movwf	??___flmul+2
  8068  02EA  0854               	movf	___flmul@prod+3,w
  8069  02EB  00C8               	movwf	??___flmul+3
  8070  02EC  3001               	movlw	1
  8071  02ED  00C9               	movwf	??___flmul+4
  8072  02EE                     u5935:
  8073  02EE  0D48               	rlf	??___flmul+3,w
  8074  02EF  0CC8               	rrf	??___flmul+3,f
  8075  02F0  0CC7               	rrf	??___flmul+2,f
  8076  02F1  0CC6               	rrf	??___flmul+1,f
  8077  02F2  0CC5               	rrf	??___flmul,f
  8078  02F3  0BC9               	decfsz	??___flmul+4,f
  8079  02F4  2AEE               	goto	u5935
  8080  02F5  0848               	movf	??___flmul+3,w
  8081  02F6  00D4               	movwf	___flmul@prod+3
  8082  02F7  0847               	movf	??___flmul+2,w
  8083  02F8  00D3               	movwf	___flmul@prod+2
  8084  02F9  0846               	movf	??___flmul+1,w
  8085  02FA  00D2               	movwf	___flmul@prod+1
  8086  02FB  0845               	movf	??___flmul,w
  8087  02FC  00D1               	movwf	___flmul@prod
  8088  02FD  3001               	movlw	1
  8089  02FE  07D5               	addwf	___flmul@temp,f
  8090  02FF  1803               	skipnc
  8091  0300  0AD6               	incf	___flmul@temp+1,f
  8092  0301  3000               	movlw	0
  8093  0302  07D6               	addwf	___flmul@temp+1,f
  8094  0303                     l5052:
  8095  0303  0856               	movf	___flmul@temp+1,w
  8096  0304  3A80               	xorlw	128
  8097  0305  00FF               	movwf	127
  8098  0306  3080               	movlw	128
  8099  0307  027F               	subwf	127,w
  8100  0308  1D03               	skipz
  8101  0309  2B0C               	goto	u5945
  8102  030A  30FF               	movlw	255
  8103  030B  0255               	subwf	___flmul@temp,w
  8104  030C                     u5945:
  8105  030C  1C03               	skipc
  8106  030D  2B19               	goto	l5056
  8107  030E  307F               	movlw	127
  8108  030F  1283               	bcf	3,5	;RP0=0, select bank0
  8109  0310  1303               	bcf	3,6	;RP1=0, select bank0
  8110  0311  00D4               	movwf	___flmul@prod+3
  8111  0312  3080               	movlw	128
  8112  0313  00D3               	movwf	___flmul@prod+2
  8113  0314  3000               	movlw	0
  8114  0315  00D2               	movwf	___flmul@prod+1
  8115  0316  3000               	movlw	0
  8116  0317  00D1               	movwf	___flmul@prod
  8117  0318  2B49               	goto	l1129
  8118  0319                     l5056:
  8119  0319  1283               	bcf	3,5	;RP0=0, select bank0
  8120  031A  1303               	bcf	3,6	;RP1=0, select bank0
  8121  031B  0856               	movf	___flmul@temp+1,w
  8122  031C  3A80               	xorlw	128
  8123  031D  00FF               	movwf	127
  8124  031E  3080               	movlw	128
  8125  031F  027F               	subwf	127,w
  8126  0320  1D03               	skipz
  8127  0321  2B24               	goto	u5955
  8128  0322  3001               	movlw	1
  8129  0323  0255               	subwf	___flmul@temp,w
  8130  0324                     u5955:
  8131  0324  1803               	skipnc
  8132  0325  2B32               	goto	l5062
  8133  0326  3000               	movlw	0
  8134  0327  1283               	bcf	3,5	;RP0=0, select bank0
  8135  0328  1303               	bcf	3,6	;RP1=0, select bank0
  8136  0329  00D4               	movwf	___flmul@prod+3
  8137  032A  3000               	movlw	0
  8138  032B  00D3               	movwf	___flmul@prod+2
  8139  032C  3000               	movlw	0
  8140  032D  00D2               	movwf	___flmul@prod+1
  8141  032E  3000               	movlw	0
  8142  032F  00D1               	movwf	___flmul@prod
  8143  0330  01CA               	clrf	___flmul@sign
  8144  0331  2B49               	goto	l1129
  8145  0332                     l5062:
  8146  0332  1283               	bcf	3,5	;RP0=0, select bank0
  8147  0333  1303               	bcf	3,6	;RP1=0, select bank0
  8148  0334  0855               	movf	___flmul@temp,w
  8149  0335  00C5               	movwf	??___flmul
  8150  0336  0845               	movf	??___flmul,w
  8151  0337  00CC               	movwf	___flmul@bexp
  8152  0338  30FF               	movlw	255
  8153  0339  05D1               	andwf	___flmul@prod,f
  8154  033A  30FF               	movlw	255
  8155  033B  05D2               	andwf	___flmul@prod+1,f
  8156  033C  307F               	movlw	127
  8157  033D  05D3               	andwf	___flmul@prod+2,f
  8158  033E  3000               	movlw	0
  8159  033F  05D4               	andwf	___flmul@prod+3,f
  8160  0340  184C               	btfsc	___flmul@bexp,0
  8161  0341  17D3               	bsf	___flmul@prod+2,7
  8162  0342  084C               	movf	___flmul@bexp,w
  8163  0343  00C5               	movwf	??___flmul
  8164  0344  1003               	clrc
  8165  0345  0C45               	rrf	??___flmul,w
  8166  0346  00C6               	movwf	??___flmul+1
  8167  0347  0846               	movf	??___flmul+1,w
  8168  0348  00D4               	movwf	___flmul@prod+3
  8169  0349                     l1129:
  8170  0349  084A               	movf	___flmul@sign,w
  8171  034A  00C5               	movwf	??___flmul
  8172  034B  0845               	movf	??___flmul,w
  8173  034C  04D4               	iorwf	___flmul@prod+3,f
  8174  034D  0854               	movf	___flmul@prod+3,w
  8175  034E  00C0               	movwf	?___flmul+3
  8176  034F  0853               	movf	___flmul@prod+2,w
  8177  0350  00BF               	movwf	?___flmul+2
  8178  0351  0852               	movf	___flmul@prod+1,w
  8179  0352  00BE               	movwf	?___flmul+1
  8180  0353  0851               	movf	___flmul@prod,w
  8181  0354  00BD               	movwf	?___flmul
  8182  0355  0008               	return
  8183  0356                     __end_of___flmul:
  8184                           
  8185                           	psect	text49
  8186  11D4                     __ptext49:	
  8187 ;; *************** function __Umul8_16 *****************
  8188 ;; Defined at:
  8189 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  multiplier      1    wreg     unsigned char 
  8192 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  multiplier      1   17[BANK0 ] unsigned char 
  8195 ;;  word_mpld       2   15[BANK0 ] unsigned int 
  8196 ;;  product         2   13[BANK0 ] unsigned int 
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  2    9[BANK0 ] unsigned int 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0
  8201 ;; Tracked objects:
  8202 ;;		On entry : 300/800
  8203 ;;		On exit  : 300/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8206 ;;      Params:         0       2       0       0       0
  8207 ;;      Locals:         0       5       0       0       0
  8208 ;;      Temps:          0       2       0       0       0
  8209 ;;      Totals:         0       9       0       0       0
  8210 ;;Total ram usage:        9 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; Hardware stack levels required when called: 5
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		___flmul
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220  11D4                     __Umul8_16:	
  8221                           ;psect for function __Umul8_16
  8222                           
  8223                           
  8224                           ;incstack = 0
  8225                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8226                           ;__Umul8_16@multiplier stored from wreg
  8227  11D4  00B1               	movwf	__Umul8_16@multiplier
  8228  11D5  01AD               	clrf	__Umul8_16@product
  8229  11D6  01AE               	clrf	__Umul8_16@product+1
  8230  11D7  0829               	movf	__Umul8_16@multiplicand,w
  8231  11D8  00AB               	movwf	??__Umul8_16
  8232  11D9  01AC               	clrf	??__Umul8_16+1
  8233  11DA  082B               	movf	??__Umul8_16,w
  8234  11DB  00AF               	movwf	__Umul8_16@word_mpld
  8235  11DC  082C               	movf	??__Umul8_16+1,w
  8236  11DD  00B0               	movwf	__Umul8_16@word_mpld+1
  8237  11DE                     l4348:
  8238  11DE  1C31               	btfss	__Umul8_16@multiplier,0
  8239  11DF  29E6               	goto	l1136
  8240  11E0  082F               	movf	__Umul8_16@word_mpld,w
  8241  11E1  07AD               	addwf	__Umul8_16@product,f
  8242  11E2  1803               	skipnc
  8243  11E3  0AAE               	incf	__Umul8_16@product+1,f
  8244  11E4  0830               	movf	__Umul8_16@word_mpld+1,w
  8245  11E5  07AE               	addwf	__Umul8_16@product+1,f
  8246  11E6                     l1136:
  8247  11E6  3001               	movlw	1
  8248  11E7                     u4645:
  8249  11E7  1003               	clrc
  8250  11E8  0DAF               	rlf	__Umul8_16@word_mpld,f
  8251  11E9  0DB0               	rlf	__Umul8_16@word_mpld+1,f
  8252  11EA  3EFF               	addlw	-1
  8253  11EB  1D03               	skipz
  8254  11EC  29E7               	goto	u4645
  8255  11ED  1003               	clrc
  8256  11EE  0CB1               	rrf	__Umul8_16@multiplier,f
  8257  11EF  0831               	movf	__Umul8_16@multiplier,w
  8258  11F0  1D03               	btfss	3,2
  8259  11F1  29DE               	goto	l4348
  8260  11F2  082E               	movf	__Umul8_16@product+1,w
  8261  11F3  00AA               	movwf	?__Umul8_16+1
  8262  11F4  082D               	movf	__Umul8_16@product,w
  8263  11F5  00A9               	movwf	?__Umul8_16
  8264  11F6  0008               	return
  8265  11F7                     __end_of__Umul8_16:
  8266                           
  8267                           	psect	text50
  8268  16CA                     __ptext50:	
  8269 ;; *************** function ___flge *****************
  8270 ;; Defined at:
  8271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\flge.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  ff1             4    9[BANK0 ] unsigned int 
  8274 ;;  ff2             4   13[BANK0 ] unsigned int 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;		None               void
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0
  8281 ;; Tracked objects:
  8282 ;;		On entry : B00/800
  8283 ;;		On exit  : B00/800
  8284 ;;		Unchanged: 800/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8286 ;;      Params:         0       8       0       0       0
  8287 ;;      Locals:         0       0       0       0       0
  8288 ;;      Temps:          0       4       0       0       0
  8289 ;;      Totals:         0      12       0       0       0
  8290 ;;Total ram usage:       12 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 5
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_ade_get_power_meter_data
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300  16CA                     ___flge:	
  8301                           ;psect for function ___flge
  8302                           
  8303                           
  8304                           ;incstack = 0
  8305                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8306  16CA  3000               	movlw	0
  8307  16CB  0529               	andwf	___flge@ff1,w
  8308  16CC  00B1               	movwf	??___flge
  8309  16CD  3000               	movlw	0
  8310  16CE  052A               	andwf	___flge@ff1+1,w
  8311  16CF  00B2               	movwf	??___flge+1
  8312  16D0  3080               	movlw	128
  8313  16D1  052B               	andwf	___flge@ff1+2,w
  8314  16D2  00B3               	movwf	??___flge+2
  8315  16D3  307F               	movlw	127
  8316  16D4  052C               	andwf	___flge@ff1+3,w
  8317  16D5  00B4               	movwf	??___flge+3
  8318  16D6  0834               	movf	??___flge+3,w
  8319  16D7  0433               	iorwf	??___flge+2,w
  8320  16D8  0432               	iorwf	??___flge+1,w
  8321  16D9  0431               	iorwf	??___flge,w
  8322  16DA  1D03               	skipz
  8323  16DB  2EE4               	goto	l902
  8324  16DC  3000               	movlw	0
  8325  16DD  00AC               	movwf	___flge@ff1+3
  8326  16DE  3000               	movlw	0
  8327  16DF  00AB               	movwf	___flge@ff1+2
  8328  16E0  3000               	movlw	0
  8329  16E1  00AA               	movwf	___flge@ff1+1
  8330  16E2  3000               	movlw	0
  8331  16E3  00A9               	movwf	___flge@ff1
  8332  16E4                     l902:
  8333  16E4  3000               	movlw	0
  8334  16E5  052D               	andwf	___flge@ff2,w
  8335  16E6  00B1               	movwf	??___flge
  8336  16E7  3000               	movlw	0
  8337  16E8  052E               	andwf	___flge@ff2+1,w
  8338  16E9  00B2               	movwf	??___flge+1
  8339  16EA  3080               	movlw	128
  8340  16EB  052F               	andwf	___flge@ff2+2,w
  8341  16EC  00B3               	movwf	??___flge+2
  8342  16ED  307F               	movlw	127
  8343  16EE  0530               	andwf	___flge@ff2+3,w
  8344  16EF  00B4               	movwf	??___flge+3
  8345  16F0  0834               	movf	??___flge+3,w
  8346  16F1  0433               	iorwf	??___flge+2,w
  8347  16F2  0432               	iorwf	??___flge+1,w
  8348  16F3  0431               	iorwf	??___flge,w
  8349  16F4  1D03               	skipz
  8350  16F5  2EFE               	goto	l4584
  8351  16F6  3000               	movlw	0
  8352  16F7  00B0               	movwf	___flge@ff2+3
  8353  16F8  3000               	movlw	0
  8354  16F9  00AF               	movwf	___flge@ff2+2
  8355  16FA  3000               	movlw	0
  8356  16FB  00AE               	movwf	___flge@ff2+1
  8357  16FC  3000               	movlw	0
  8358  16FD  00AD               	movwf	___flge@ff2
  8359  16FE                     l4584:
  8360  16FE  1FAC               	btfss	___flge@ff1+3,7
  8361  16FF  2F24               	goto	l4588
  8362  1700  3000               	movlw	0
  8363  1701  00B1               	movwf	??___flge
  8364  1702  3000               	movlw	0
  8365  1703  00B2               	movwf	??___flge+1
  8366  1704  3000               	movlw	0
  8367  1705  00B3               	movwf	??___flge+2
  8368  1706  3080               	movlw	128
  8369  1707  00B4               	movwf	??___flge+3
  8370  1708  0829               	movf	___flge@ff1,w
  8371  1709  02B1               	subwf	??___flge,f
  8372  170A  082A               	movf	___flge@ff1+1,w
  8373  170B  1C03               	skipc
  8374  170C  0F2A               	incfsz	___flge@ff1+1,w
  8375  170D  2F0F               	goto	u4821
  8376  170E  2F10               	goto	u4822
  8377  170F                     u4821:
  8378  170F  02B2               	subwf	??___flge+1,f
  8379  1710                     u4822:
  8380  1710  082B               	movf	___flge@ff1+2,w
  8381  1711  1C03               	skipc
  8382  1712  0F2B               	incfsz	___flge@ff1+2,w
  8383  1713  2F15               	goto	u4823
  8384  1714  2F16               	goto	u4824
  8385  1715                     u4823:
  8386  1715  02B3               	subwf	??___flge+2,f
  8387  1716                     u4824:
  8388  1716  082C               	movf	___flge@ff1+3,w
  8389  1717  1C03               	skipc
  8390  1718  0F2C               	incfsz	___flge@ff1+3,w
  8391  1719  2F1B               	goto	u4825
  8392  171A  2F1C               	goto	u4826
  8393  171B                     u4825:
  8394  171B  02B4               	subwf	??___flge+3,f
  8395  171C                     u4826:
  8396  171C  0834               	movf	??___flge+3,w
  8397  171D  00AC               	movwf	___flge@ff1+3
  8398  171E  0833               	movf	??___flge+2,w
  8399  171F  00AB               	movwf	___flge@ff1+2
  8400  1720  0832               	movf	??___flge+1,w
  8401  1721  00AA               	movwf	___flge@ff1+1
  8402  1722  0831               	movf	??___flge,w
  8403  1723  00A9               	movwf	___flge@ff1
  8404  1724                     l4588:
  8405  1724  1FB0               	btfss	___flge@ff2+3,7
  8406  1725  2F4A               	goto	l905
  8407  1726  3000               	movlw	0
  8408  1727  00B1               	movwf	??___flge
  8409  1728  3000               	movlw	0
  8410  1729  00B2               	movwf	??___flge+1
  8411  172A  3000               	movlw	0
  8412  172B  00B3               	movwf	??___flge+2
  8413  172C  3080               	movlw	128
  8414  172D  00B4               	movwf	??___flge+3
  8415  172E  082D               	movf	___flge@ff2,w
  8416  172F  02B1               	subwf	??___flge,f
  8417  1730  082E               	movf	___flge@ff2+1,w
  8418  1731  1C03               	skipc
  8419  1732  0F2E               	incfsz	___flge@ff2+1,w
  8420  1733  2F35               	goto	u4841
  8421  1734  2F36               	goto	u4842
  8422  1735                     u4841:
  8423  1735  02B2               	subwf	??___flge+1,f
  8424  1736                     u4842:
  8425  1736  082F               	movf	___flge@ff2+2,w
  8426  1737  1C03               	skipc
  8427  1738  0F2F               	incfsz	___flge@ff2+2,w
  8428  1739  2F3B               	goto	u4843
  8429  173A  2F3C               	goto	u4844
  8430  173B                     u4843:
  8431  173B  02B3               	subwf	??___flge+2,f
  8432  173C                     u4844:
  8433  173C  0830               	movf	___flge@ff2+3,w
  8434  173D  1C03               	skipc
  8435  173E  0F30               	incfsz	___flge@ff2+3,w
  8436  173F  2F41               	goto	u4845
  8437  1740  2F42               	goto	u4846
  8438  1741                     u4845:
  8439  1741  02B4               	subwf	??___flge+3,f
  8440  1742                     u4846:
  8441  1742  0834               	movf	??___flge+3,w
  8442  1743  00B0               	movwf	___flge@ff2+3
  8443  1744  0833               	movf	??___flge+2,w
  8444  1745  00AF               	movwf	___flge@ff2+2
  8445  1746  0832               	movf	??___flge+1,w
  8446  1747  00AE               	movwf	___flge@ff2+1
  8447  1748  0831               	movf	??___flge,w
  8448  1749  00AD               	movwf	___flge@ff2
  8449  174A                     l905:
  8450  174A  3080               	movlw	128
  8451  174B  06AC               	xorwf	___flge@ff1+3,f
  8452  174C  3080               	movlw	128
  8453  174D  06B0               	xorwf	___flge@ff2+3,f
  8454  174E  0830               	movf	___flge@ff2+3,w
  8455  174F  022C               	subwf	___flge@ff1+3,w
  8456  1750  1D03               	skipz
  8457  1751  0008               	return
  8458  1752  082F               	movf	___flge@ff2+2,w
  8459  1753  022B               	subwf	___flge@ff1+2,w
  8460  1754  1D03               	skipz
  8461  1755  0008               	return
  8462  1756  082E               	movf	___flge@ff2+1,w
  8463  1757  022A               	subwf	___flge@ff1+1,w
  8464  1758  1D03               	skipz
  8465  1759  0008               	return
  8466  175A  082D               	movf	___flge@ff2,w
  8467  175B  0229               	subwf	___flge@ff1,w
  8468  175C  0008               	return
  8469  175D                     __end_of___flge:
  8470                           
  8471                           	psect	text51
  8472  0616                     __ptext51:	
  8473 ;; *************** function ___fldiv *****************
  8474 ;; Defined at:
  8475 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcdiv.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  a               4    0[BANK1 ] unsigned int 
  8478 ;;  b               4    4[BANK1 ] unsigned int 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;  grs             4   20[BANK1 ] unsigned long 
  8481 ;;  rem             4   13[BANK1 ] unsigned long 
  8482 ;;  new_exp         2   18[BANK1 ] int 
  8483 ;;  aexp            1   25[BANK1 ] unsigned char 
  8484 ;;  bexp            1   24[BANK1 ] unsigned char 
  8485 ;;  sign            1   17[BANK1 ] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  4    0[BANK1 ] unsigned char 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, btemp+1
  8490 ;; Tracked objects:
  8491 ;;		On entry : 300/900
  8492 ;;		On exit  : 300/100
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8495 ;;      Params:         0       0       8       0       0
  8496 ;;      Locals:         0       0      13       0       0
  8497 ;;      Temps:          0       0       5       0       0
  8498 ;;      Totals:         0       0      26       0       0
  8499 ;;Total ram usage:       26 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 5
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_ade_get_power_meter_data
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509  0616                     ___fldiv:	
  8510                           ;psect for function ___fldiv
  8511                           
  8512                           
  8513                           ;incstack = 0
  8514                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8515  0616  0827               	movf	(___fldiv@b^(0+128)+3),w
  8516  0617  3980               	andlw	128
  8517  0618  00A8               	movwf	??___fldiv^(0+128)
  8518  0619  0828               	movf	??___fldiv^(0+128),w
  8519  061A  00B1               	movwf	___fldiv@sign^(0+128)
  8520  061B  0827               	movf	(___fldiv@b^(0+128)+3),w
  8521  061C  00A8               	movwf	??___fldiv^(0+128)
  8522  061D  0728               	addwf	??___fldiv^(0+128),w
  8523  061E  00A9               	movwf	(??___fldiv+1)^(0+128)
  8524  061F  0829               	movf	(??___fldiv+1)^(0+128),w
  8525  0620  00B8               	movwf	___fldiv@bexp^(0+128)
  8526  0621  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  8527  0622  1438               	bsf	___fldiv@bexp^(0+128),0
  8528  0623  0838               	movf	___fldiv@bexp^(0+128),w
  8529  0624  1903               	btfsc	3,2
  8530  0625  2E34               	goto	l4810
  8531  0626  0A38               	incf	___fldiv@bexp^(0+128),w
  8532  0627  1D03               	btfss	3,2
  8533  0628  2E31               	goto	l4806
  8534  0629  3000               	movlw	0
  8535  062A  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8536  062B  3000               	movlw	0
  8537  062C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8538  062D  3000               	movlw	0
  8539  062E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8540  062F  3000               	movlw	0
  8541  0630  00A4               	movwf	___fldiv@b^(0+128)
  8542  0631                     l4806:
  8543  0631  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8544  0632  01A7               	clrf	(___fldiv@b^(0+128)+3)
  8545  0633  2E3C               	goto	l4812
  8546  0634                     l4810:
  8547  0634  3000               	movlw	0
  8548  0635  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8549  0636  3000               	movlw	0
  8550  0637  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8551  0638  3000               	movlw	0
  8552  0639  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8553  063A  3000               	movlw	0
  8554  063B  00A4               	movwf	___fldiv@b^(0+128)
  8555  063C                     l4812:
  8556  063C  0823               	movf	(___fldiv@a^(0+128)+3),w
  8557  063D  3980               	andlw	128
  8558  063E  00A8               	movwf	??___fldiv^(0+128)
  8559  063F  0828               	movf	??___fldiv^(0+128),w
  8560  0640  06B1               	xorwf	___fldiv@sign^(0+128),f
  8561  0641  0823               	movf	(___fldiv@a^(0+128)+3),w
  8562  0642  00A8               	movwf	??___fldiv^(0+128)
  8563  0643  0728               	addwf	??___fldiv^(0+128),w
  8564  0644  00A9               	movwf	(??___fldiv+1)^(0+128)
  8565  0645  0829               	movf	(??___fldiv+1)^(0+128),w
  8566  0646  00B9               	movwf	___fldiv@aexp^(0+128)
  8567  0647  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  8568  0648  1439               	bsf	___fldiv@aexp^(0+128),0
  8569  0649  0839               	movf	___fldiv@aexp^(0+128),w
  8570  064A  1903               	btfsc	3,2
  8571  064B  2E5A               	goto	l4830
  8572  064C  0A39               	incf	___fldiv@aexp^(0+128),w
  8573  064D  1D03               	btfss	3,2
  8574  064E  2E57               	goto	l4826
  8575  064F  3000               	movlw	0
  8576  0650  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8577  0651  3000               	movlw	0
  8578  0652  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8579  0653  3000               	movlw	0
  8580  0654  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8581  0655  3000               	movlw	0
  8582  0656  00A0               	movwf	___fldiv@a^(0+128)
  8583  0657                     l4826:
  8584  0657  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  8585  0658  01A3               	clrf	(___fldiv@a^(0+128)+3)
  8586  0659  2E62               	goto	l1077
  8587  065A                     l4830:
  8588  065A  3000               	movlw	0
  8589  065B  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8590  065C  3000               	movlw	0
  8591  065D  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8592  065E  3000               	movlw	0
  8593  065F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8594  0660  3000               	movlw	0
  8595  0661  00A0               	movwf	___fldiv@a^(0+128)
  8596  0662                     l1077:
  8597  0662  0823               	movf	(___fldiv@a+3)^(0+128),w
  8598  0663  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  8599  0664  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  8600  0665  0420               	iorwf	___fldiv@a^(0+128),w
  8601  0666  1D03               	skipz
  8602  0667  2E81               	goto	l4840
  8603  0668  3000               	movlw	0
  8604  0669  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8605  066A  3000               	movlw	0
  8606  066B  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8607  066C  3000               	movlw	0
  8608  066D  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8609  066E  3000               	movlw	0
  8610  066F  00A4               	movwf	___fldiv@b^(0+128)
  8611  0670  3080               	movlw	128
  8612  0671  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  8613  0672  307F               	movlw	127
  8614  0673  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  8615  0674                     L7:
  8616  0674  0831               	movf	___fldiv@sign^(0+128),w
  8617  0675  00A8               	movwf	??___fldiv^(0+128)
  8618  0676  0828               	movf	??___fldiv^(0+128),w
  8619  0677  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8620  0678  0827               	movf	(___fldiv@b+3)^(0+128),w
  8621  0679  00A3               	movwf	(?___fldiv+3)^(0+128)
  8622  067A  0826               	movf	(___fldiv@b+2)^(0+128),w
  8623  067B  00A2               	movwf	(?___fldiv+2)^(0+128)
  8624  067C  0825               	movf	(___fldiv@b+1)^(0+128),w
  8625  067D  00A1               	movwf	(?___fldiv+1)^(0+128)
  8626  067E  0824               	movf	___fldiv@b^(0+128),w
  8627  067F  00A0               	movwf	?___fldiv^(0+128)
  8628  0680  0008               	return
  8629  0681                     l4840:
  8630  0681  0838               	movf	___fldiv@bexp^(0+128),w
  8631  0682  1D03               	btfss	3,2
  8632  0683  2E8D               	goto	l4846
  8633  0684  3000               	movlw	0
  8634  0685  00A3               	movwf	(?___fldiv+3)^(0+128)
  8635  0686  3000               	movlw	0
  8636  0687  00A2               	movwf	(?___fldiv+2)^(0+128)
  8637  0688  3000               	movlw	0
  8638  0689  00A1               	movwf	(?___fldiv+1)^(0+128)
  8639  068A  3000               	movlw	0
  8640  068B  00A0               	movwf	?___fldiv^(0+128)
  8641  068C  0008               	return
  8642  068D                     l4846:
  8643  068D  0838               	movf	___fldiv@bexp^(0+128),w
  8644  068E  00A8               	movwf	??___fldiv^(0+128)
  8645  068F  01A9               	clrf	(??___fldiv^(0+128)+1)
  8646  0690  0829               	movf	(??___fldiv+1)^(0+128),w
  8647  0691  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  8648  0692  0839               	movf	___fldiv@aexp^(0+128),w
  8649  0693  0228               	subwf	??___fldiv^(0+128),w
  8650  0694  00AA               	movwf	(??___fldiv+2)^(0+128)
  8651  0695  1C03               	skipc
  8652  0696  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  8653  0697  082A               	movf	(??___fldiv+2)^(0+128),w
  8654  0698  3E7F               	addlw	127
  8655  0699  00B2               	movwf	___fldiv@new_exp^(0+128)
  8656  069A  082B               	movf	(??___fldiv+3)^(0+128),w
  8657  069B  1803               	skipnc
  8658  069C  3E01               	addlw	1
  8659  069D  3E00               	addlw	0
  8660  069E  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  8661  069F  0827               	movf	(___fldiv@b+3)^(0+128),w
  8662  06A0  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  8663  06A1  0826               	movf	(___fldiv@b+2)^(0+128),w
  8664  06A2  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  8665  06A3  0825               	movf	(___fldiv@b+1)^(0+128),w
  8666  06A4  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  8667  06A5  0824               	movf	___fldiv@b^(0+128),w
  8668  06A6  00AD               	movwf	___fldiv@rem^(0+128)
  8669  06A7  3000               	movlw	0
  8670  06A8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8671  06A9  3000               	movlw	0
  8672  06AA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8673  06AB  3000               	movlw	0
  8674  06AC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8675  06AD  3000               	movlw	0
  8676  06AE  00A4               	movwf	___fldiv@b^(0+128)
  8677  06AF  3000               	movlw	0
  8678  06B0  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  8679  06B1  3000               	movlw	0
  8680  06B2  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  8681  06B3  3000               	movlw	0
  8682  06B4  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  8683  06B5  3000               	movlw	0
  8684  06B6  00B4               	movwf	___fldiv@grs^(0+128)
  8685  06B7  01B9               	clrf	___fldiv@aexp^(0+128)
  8686  06B8                     l4874:
  8687  06B8  301A               	movlw	26
  8688  06B9  0239               	subwf	___fldiv@aexp^(0+128),w
  8689  06BA  1803               	btfsc	3,0
  8690  06BB  2F00               	goto	l4876
  8691  06BC  0839               	movf	___fldiv@aexp^(0+128),w
  8692  06BD  1903               	btfsc	3,2
  8693  06BE  2EDC               	goto	l4866
  8694  06BF  3001               	movlw	1
  8695  06C0  00A8               	movwf	??___fldiv^(0+128)
  8696  06C1                     u5415:
  8697  06C1  1003               	clrc
  8698  06C2  0DAD               	rlf	___fldiv@rem^(0+128),f
  8699  06C3  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  8700  06C4  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  8701  06C5  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  8702  06C6  0BA8               	decfsz	??___fldiv^(0+128),f
  8703  06C7  2EC1               	goto	u5415
  8704  06C8  3001               	movlw	1
  8705  06C9  00A8               	movwf	??___fldiv^(0+128)
  8706  06CA                     u5425:
  8707  06CA  1003               	clrc
  8708  06CB  0DA4               	rlf	___fldiv@b^(0+128),f
  8709  06CC  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8710  06CD  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8711  06CE  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8712  06CF  0BA8               	decfsz	??___fldiv^(0+128),f
  8713  06D0  2ECA               	goto	u5425
  8714  06D1  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  8715  06D2  1424               	bsf	___fldiv@b^(0+128),0
  8716  06D3  3001               	movlw	1
  8717  06D4  00A8               	movwf	??___fldiv^(0+128)
  8718  06D5                     u5445:
  8719  06D5  1003               	clrc
  8720  06D6  0DB4               	rlf	___fldiv@grs^(0+128),f
  8721  06D7  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8722  06D8  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8723  06D9  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8724  06DA  0BA8               	decfsz	??___fldiv^(0+128),f
  8725  06DB  2ED5               	goto	u5445
  8726  06DC                     l4866:
  8727  06DC  0823               	movf	(___fldiv@a+3)^(0+128),w
  8728  06DD  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  8729  06DE  1D03               	skipz
  8730  06DF  2EEA               	goto	u5455
  8731  06E0  0822               	movf	(___fldiv@a+2)^(0+128),w
  8732  06E1  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  8733  06E2  1D03               	skipz
  8734  06E3  2EEA               	goto	u5455
  8735  06E4  0821               	movf	(___fldiv@a+1)^(0+128),w
  8736  06E5  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  8737  06E6  1D03               	skipz
  8738  06E7  2EEA               	goto	u5455
  8739  06E8  0820               	movf	___fldiv@a^(0+128),w
  8740  06E9  022D               	subwf	___fldiv@rem^(0+128),w
  8741  06EA                     u5455:
  8742  06EA  1C03               	skipc
  8743  06EB  2EFB               	goto	l4872
  8744  06EC  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  8745  06ED  0820               	movf	___fldiv@a^(0+128),w
  8746  06EE  02AD               	subwf	___fldiv@rem^(0+128),f
  8747  06EF  0821               	movf	(___fldiv@a+1)^(0+128),w
  8748  06F0  1C03               	skipc
  8749  06F1  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  8750  06F2  02AE               	subwf	(___fldiv@rem+1)^(0+128),f
  8751  06F3  0822               	movf	(___fldiv@a+2)^(0+128),w
  8752  06F4  1C03               	skipc
  8753  06F5  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  8754  06F6  02AF               	subwf	(___fldiv@rem+2)^(0+128),f
  8755  06F7  0823               	movf	(___fldiv@a+3)^(0+128),w
  8756  06F8  1C03               	skipc
  8757  06F9  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  8758  06FA  02B0               	subwf	(___fldiv@rem+3)^(0+128),f
  8759  06FB                     l4872:
  8760  06FB  3001               	movlw	1
  8761  06FC  00A8               	movwf	??___fldiv^(0+128)
  8762  06FD  0828               	movf	??___fldiv^(0+128),w
  8763  06FE  07B9               	addwf	___fldiv@aexp^(0+128),f
  8764  06FF  2EB8               	goto	l4874
  8765  0700                     l4876:
  8766  0700  0830               	movf	(___fldiv@rem+3)^(0+128),w
  8767  0701  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  8768  0702  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  8769  0703  042D               	iorwf	___fldiv@rem^(0+128),w
  8770  0704  1D03               	btfss	3,2
  8771  0705  1434               	bsf	___fldiv@grs^(0+128),0
  8772  0706                     l4890:
  8773  0706  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  8774  0707  2F23               	goto	l4892
  8775  0708  3001               	movlw	1
  8776  0709  00A8               	movwf	??___fldiv^(0+128)
  8777  070A                     u5485:
  8778  070A  1003               	clrc
  8779  070B  0DA4               	rlf	___fldiv@b^(0+128),f
  8780  070C  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8781  070D  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8782  070E  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8783  070F  0BA8               	decfsz	??___fldiv^(0+128),f
  8784  0710  2F0A               	goto	u5485
  8785  0711  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  8786  0712  1424               	bsf	___fldiv@b^(0+128),0
  8787  0713  3001               	movlw	1
  8788  0714  00A8               	movwf	??___fldiv^(0+128)
  8789  0715                     u5505:
  8790  0715  1003               	clrc
  8791  0716  0DB4               	rlf	___fldiv@grs^(0+128),f
  8792  0717  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8793  0718  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8794  0719  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8795  071A  0BA8               	decfsz	??___fldiv^(0+128),f
  8796  071B  2F15               	goto	u5505
  8797  071C  30FF               	movlw	255
  8798  071D  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8799  071E  1803               	skipnc
  8800  071F  0AB3               	incf	(___fldiv@new_exp+1)^(0+128),f
  8801  0720  30FF               	movlw	255
  8802  0721  07B3               	addwf	(___fldiv@new_exp+1)^(0+128),f
  8803  0722  2F06               	goto	l4890
  8804  0723                     l4892:
  8805  0723  01B9               	clrf	___fldiv@aexp^(0+128)
  8806  0724  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8807  0725  2F3C               	goto	l4902
  8808  0726  30FF               	movlw	255
  8809  0727  0534               	andwf	___fldiv@grs^(0+128),w
  8810  0728  00A8               	movwf	??___fldiv^(0+128)
  8811  0729  30FF               	movlw	255
  8812  072A  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  8813  072B  00A9               	movwf	(??___fldiv^(0+128)+1)
  8814  072C  30FF               	movlw	255
  8815  072D  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  8816  072E  00AA               	movwf	(??___fldiv^(0+128)+2)
  8817  072F  307F               	movlw	127
  8818  0730  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  8819  0731  00AB               	movwf	(??___fldiv^(0+128)+3)
  8820  0732  082B               	movf	(??___fldiv+3)^(0+128),w
  8821  0733  042A               	iorwf	(??___fldiv+2)^(0+128),w
  8822  0734  0429               	iorwf	(??___fldiv+1)^(0+128),w
  8823  0735  0428               	iorwf	??___fldiv^(0+128),w
  8824  0736  1903               	skipnz
  8825  0737  1824               	btfsc	___fldiv@b^(0+128),0
  8826  0738  2F3A               	goto	l4898
  8827  0739  2F3C               	goto	l4902
  8828  073A                     l4898:
  8829  073A  01B9               	clrf	___fldiv@aexp^(0+128)
  8830  073B  0AB9               	incf	___fldiv@aexp^(0+128),f
  8831  073C                     l4902:
  8832  073C  0839               	movf	___fldiv@aexp^(0+128),w
  8833  073D  1903               	btfsc	3,2
  8834  073E  2F6E               	goto	l4912
  8835  073F  3001               	movlw	1
  8836  0740  07A4               	addwf	___fldiv@b^(0+128),f
  8837  0741  3000               	movlw	0
  8838  0742  1803               	skipnc
  8839  0743  3001               	movlw	1
  8840  0744  07A5               	addwf	(___fldiv@b+1)^(0+128),f
  8841  0745  3000               	movlw	0
  8842  0746  1803               	skipnc
  8843  0747  3001               	movlw	1
  8844  0748  07A6               	addwf	(___fldiv@b+2)^(0+128),f
  8845  0749  3000               	movlw	0
  8846  074A  1803               	skipnc
  8847  074B  3001               	movlw	1
  8848  074C  07A7               	addwf	(___fldiv@b+3)^(0+128),f
  8849  074D  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  8850  074E  2F6E               	goto	l4912
  8851  074F  0824               	movf	___fldiv@b^(0+128),w
  8852  0750  00A8               	movwf	??___fldiv^(0+128)
  8853  0751  0825               	movf	(___fldiv@b+1)^(0+128),w
  8854  0752  00A9               	movwf	(??___fldiv^(0+128)+1)
  8855  0753  0826               	movf	(___fldiv@b+2)^(0+128),w
  8856  0754  00AA               	movwf	(??___fldiv^(0+128)+2)
  8857  0755  0827               	movf	(___fldiv@b+3)^(0+128),w
  8858  0756  00AB               	movwf	(??___fldiv^(0+128)+3)
  8859  0757  3001               	movlw	1
  8860  0758  00AC               	movwf	(??___fldiv+4)^(0+128)
  8861  0759                     u5575:
  8862  0759  0D2B               	rlf	(??___fldiv^(0+128)+3),w
  8863  075A  0CAB               	rrf	(??___fldiv^(0+128)+3),f
  8864  075B  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  8865  075C  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  8866  075D  0CA8               	rrf	??___fldiv^(0+128),f
  8867  075E  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  8868  075F  2F59               	goto	u5575
  8869  0760  082B               	movf	(??___fldiv+3)^(0+128),w
  8870  0761  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8871  0762  082A               	movf	(??___fldiv+2)^(0+128),w
  8872  0763  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8873  0764  0829               	movf	(??___fldiv+1)^(0+128),w
  8874  0765  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8875  0766  0828               	movf	??___fldiv^(0+128),w
  8876  0767  00A4               	movwf	___fldiv@b^(0+128)
  8877  0768  3001               	movlw	1
  8878  0769  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8879  076A  1803               	skipnc
  8880  076B  0AB3               	incf	(___fldiv@new_exp+1)^(0+128),f
  8881  076C  3000               	movlw	0
  8882  076D  07B3               	addwf	(___fldiv@new_exp+1)^(0+128),f
  8883  076E                     l4912:
  8884  076E  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8885  076F  3A80               	xorlw	128
  8886  0770  00FF               	movwf	127
  8887  0771  3080               	movlw	128
  8888  0772  027F               	subwf	127,w
  8889  0773  1D03               	skipz
  8890  0774  2F77               	goto	u5585
  8891  0775  30FF               	movlw	255
  8892  0776  0232               	subwf	___fldiv@new_exp^(0+128),w
  8893  0777                     u5585:
  8894  0777  1C03               	skipc
  8895  0778  2F87               	goto	l4916
  8896  0779  30FF               	movlw	255
  8897  077A  1683               	bsf	3,5	;RP0=1, select bank1
  8898  077B  1303               	bcf	3,6	;RP1=0, select bank1
  8899  077C  00B2               	movwf	___fldiv@new_exp^(0+128)
  8900  077D  3000               	movlw	0
  8901  077E  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  8902  077F  3000               	movlw	0
  8903  0780  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8904  0781  3000               	movlw	0
  8905  0782  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8906  0783  3000               	movlw	0
  8907  0784  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8908  0785  3000               	movlw	0
  8909  0786  00A4               	movwf	___fldiv@b^(0+128)
  8910  0787                     l4916:
  8911  0787  1683               	bsf	3,5	;RP0=1, select bank1
  8912  0788  1303               	bcf	3,6	;RP1=0, select bank1
  8913  0789  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8914  078A  3A80               	xorlw	128
  8915  078B  00FF               	movwf	127
  8916  078C  3080               	movlw	128
  8917  078D  027F               	subwf	127,w
  8918  078E  1D03               	skipz
  8919  078F  2F92               	goto	u5595
  8920  0790  3001               	movlw	1
  8921  0791  0232               	subwf	___fldiv@new_exp^(0+128),w
  8922  0792                     u5595:
  8923  0792  1803               	skipnc
  8924  0793  2FA1               	goto	l1099
  8925  0794  1683               	bsf	3,5	;RP0=1, select bank1
  8926  0795  1303               	bcf	3,6	;RP1=0, select bank1
  8927  0796  01B2               	clrf	___fldiv@new_exp^(0+128)
  8928  0797  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  8929  0798  3000               	movlw	0
  8930  0799  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8931  079A  3000               	movlw	0
  8932  079B  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8933  079C  3000               	movlw	0
  8934  079D  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8935  079E  3000               	movlw	0
  8936  079F  00A4               	movwf	___fldiv@b^(0+128)
  8937  07A0  01B1               	clrf	___fldiv@sign^(0+128)
  8938  07A1                     l1099:
  8939  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  8940  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  8941  07A3  0832               	movf	___fldiv@new_exp^(0+128),w
  8942  07A4  00A8               	movwf	??___fldiv^(0+128)
  8943  07A5  0828               	movf	??___fldiv^(0+128),w
  8944  07A6  00B8               	movwf	___fldiv@bexp^(0+128)
  8945  07A7  1C38               	btfss	___fldiv@bexp^(0+128),0
  8946  07A8  2FAB               	goto	l4928
  8947  07A9  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8948  07AA  2FAF               	goto	l1101
  8949  07AB                     l4928:
  8950  07AB  307F               	movlw	127
  8951  07AC  00A8               	movwf	??___fldiv^(0+128)
  8952  07AD  0828               	movf	??___fldiv^(0+128),w
  8953  07AE  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  8954  07AF                     l1101:
  8955  07AF  0838               	movf	___fldiv@bexp^(0+128),w
  8956  07B0  00A8               	movwf	??___fldiv^(0+128)
  8957  07B1  1003               	clrc
  8958  07B2  0C28               	rrf	??___fldiv^(0+128),w
  8959  07B3  00A9               	movwf	(??___fldiv+1)^(0+128)
  8960  07B4  0829               	movf	(??___fldiv+1)^(0+128),w
  8961  07B5  00A7               	movwf	(___fldiv@b^(0+128)+3)
  8962  07B6  2E74               	goto	L7
  8963  07B7                     __end_of___fldiv:
  8964                           
  8965                           	psect	text52
  8966  0D6F                     __ptext52:	
  8967 ;; *************** function ___fladd *****************
  8968 ;; Defined at:
  8969 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  b               4   26[BANK1 ] unsigned char 
  8972 ;;  a               4   30[BANK1 ] unsigned char 
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;  grs             1   58[BANK0 ] unsigned char 
  8975 ;;  bexp            1   57[BANK0 ] unsigned char 
  8976 ;;  aexp            1   56[BANK0 ] unsigned char 
  8977 ;;  signs           1   55[BANK0 ] unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  4   26[BANK1 ] unsigned char 
  8980 ;; Registers used:
  8981 ;;		wreg, status,2, status,0, btemp+1
  8982 ;; Tracked objects:
  8983 ;;		On entry : 300/900
  8984 ;;		On exit  : 200/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8987 ;;      Params:         0       0       8       0       0
  8988 ;;      Locals:         0       4       0       0       0
  8989 ;;      Temps:          0       0       8       0       0
  8990 ;;      Totals:         0       4      16       0       0
  8991 ;;Total ram usage:       20 bytes
  8992 ;; Hardware stack levels used: 1
  8993 ;; Hardware stack levels required when called: 5
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_ade_get_power_meter_data
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001  0D6F                     ___fladd:	
  9002                           ;psect for function ___fladd
  9003                           
  9004                           
  9005                           ;incstack = 0
  9006                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9007  0D6F  083D               	movf	(___fladd@b^(0+128)+3),w
  9008  0D70  3980               	andlw	128
  9009  0D71  00C2               	movwf	??___fladd^(0+128)
  9010  0D72  0842               	movf	??___fladd^(0+128),w
  9011  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  9012  0D74  00D7               	movwf	___fladd@signs
  9013  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  9014  0D76  083D               	movf	(___fladd@b^(0+128)+3),w
  9015  0D77  00C2               	movwf	??___fladd^(0+128)
  9016  0D78  0742               	addwf	??___fladd^(0+128),w
  9017  0D79  00C3               	movwf	(??___fladd+1)^(0+128)
  9018  0D7A  0843               	movf	(??___fladd+1)^(0+128),w
  9019  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  9020  0D7C  00D9               	movwf	___fladd@bexp
  9021  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  9022  0D7E  1FBC               	btfss	(___fladd@b^(0+128)+2),7
  9023  0D7F  2D82               	goto	l4606
  9024  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  9025  0D81  1459               	bsf	___fladd@bexp,0
  9026  0D82                     l4606:
  9027  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  9028  0D83  0859               	movf	___fladd@bexp,w
  9029  0D84  1903               	btfsc	3,2
  9030  0D85  2D96               	goto	l4616
  9031  0D86  0A59               	incf	___fladd@bexp,w
  9032  0D87  1D03               	btfss	3,2
  9033  0D88  2D92               	goto	l4612
  9034  0D89  3000               	movlw	0
  9035  0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  9036  0D8B  00BD               	movwf	(___fladd@b+3)^(0+128)
  9037  0D8C  3000               	movlw	0
  9038  0D8D  00BC               	movwf	(___fladd@b+2)^(0+128)
  9039  0D8E  3000               	movlw	0
  9040  0D8F  00BB               	movwf	(___fladd@b+1)^(0+128)
  9041  0D90  3000               	movlw	0
  9042  0D91  00BA               	movwf	___fladd@b^(0+128)
  9043  0D92                     l4612:
  9044  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  9045  0D93  17BC               	bsf	(___fladd@b^(0+128)+2),7
  9046  0D94  01BD               	clrf	(___fladd@b^(0+128)+3)
  9047  0D95  2D9F               	goto	l4618
  9048  0D96                     l4616:
  9049  0D96  3000               	movlw	0
  9050  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  9051  0D98  00BD               	movwf	(___fladd@b+3)^(0+128)
  9052  0D99  3000               	movlw	0
  9053  0D9A  00BC               	movwf	(___fladd@b+2)^(0+128)
  9054  0D9B  3000               	movlw	0
  9055  0D9C  00BB               	movwf	(___fladd@b+1)^(0+128)
  9056  0D9D  3000               	movlw	0
  9057  0D9E  00BA               	movwf	___fladd@b^(0+128)
  9058  0D9F                     l4618:
  9059  0D9F  0841               	movf	(___fladd@a^(0+128)+3),w
  9060  0DA0  3980               	andlw	128
  9061  0DA1  00C2               	movwf	??___fladd^(0+128)
  9062  0DA2  0842               	movf	??___fladd^(0+128),w
  9063  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  9064  0DA4  00D8               	movwf	___fladd@aexp
  9065  0DA5  0858               	movf	___fladd@aexp,w
  9066  0DA6  0657               	xorwf	___fladd@signs,w
  9067  0DA7  1D03               	btfss	3,2
  9068  0DA8  1757               	bsf	___fladd@signs,6
  9069  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  9070  0DAA  0841               	movf	(___fladd@a^(0+128)+3),w
  9071  0DAB  00C2               	movwf	??___fladd^(0+128)
  9072  0DAC  0742               	addwf	??___fladd^(0+128),w
  9073  0DAD  00C3               	movwf	(??___fladd+1)^(0+128)
  9074  0DAE  0843               	movf	(??___fladd+1)^(0+128),w
  9075  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  9076  0DB0  00D8               	movwf	___fladd@aexp
  9077  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  9078  0DB2  1FC0               	btfss	(___fladd@a^(0+128)+2),7
  9079  0DB3  2DB6               	goto	l4630
  9080  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  9081  0DB5  1458               	bsf	___fladd@aexp,0
  9082  0DB6                     l4630:
  9083  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  9084  0DB7  0858               	movf	___fladd@aexp,w
  9085  0DB8  1903               	btfsc	3,2
  9086  0DB9  2DCA               	goto	l4640
  9087  0DBA  0A58               	incf	___fladd@aexp,w
  9088  0DBB  1D03               	btfss	3,2
  9089  0DBC  2DC6               	goto	l4636
  9090  0DBD  3000               	movlw	0
  9091  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  9092  0DBF  00C1               	movwf	(___fladd@a+3)^(0+128)
  9093  0DC0  3000               	movlw	0
  9094  0DC1  00C0               	movwf	(___fladd@a+2)^(0+128)
  9095  0DC2  3000               	movlw	0
  9096  0DC3  00BF               	movwf	(___fladd@a+1)^(0+128)
  9097  0DC4  3000               	movlw	0
  9098  0DC5  00BE               	movwf	___fladd@a^(0+128)
  9099  0DC6                     l4636:
  9100  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  9101  0DC7  17C0               	bsf	(___fladd@a^(0+128)+2),7
  9102  0DC8  01C1               	clrf	(___fladd@a^(0+128)+3)
  9103  0DC9  2DD3               	goto	l1021
  9104  0DCA                     l4640:
  9105  0DCA  3000               	movlw	0
  9106  0DCB  1683               	bsf	3,5	;RP0=1, select bank1
  9107  0DCC  00C1               	movwf	(___fladd@a+3)^(0+128)
  9108  0DCD  3000               	movlw	0
  9109  0DCE  00C0               	movwf	(___fladd@a+2)^(0+128)
  9110  0DCF  3000               	movlw	0
  9111  0DD0  00BF               	movwf	(___fladd@a+1)^(0+128)
  9112  0DD1  3000               	movlw	0
  9113  0DD2  00BE               	movwf	___fladd@a^(0+128)
  9114  0DD3                     l1021:
  9115  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  9116  0DD4  0859               	movf	___fladd@bexp,w
  9117  0DD5  0258               	subwf	___fladd@aexp,w
  9118  0DD6  1803               	skipnc
  9119  0DD7  2E33               	goto	l4676
  9120  0DD8  1F57               	btfss	___fladd@signs,6
  9121  0DD9  2DE0               	goto	l4646
  9122  0DDA  3080               	movlw	128
  9123  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  9124  0DDC  00C2               	movwf	??___fladd^(0+128)
  9125  0DDD  0842               	movf	??___fladd^(0+128),w
  9126  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  9127  0DDF  06D7               	xorwf	___fladd@signs,f
  9128  0DE0                     l4646:
  9129  0DE0  0859               	movf	___fladd@bexp,w
  9130  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  9131  0DE2  00C2               	movwf	??___fladd^(0+128)
  9132  0DE3  0842               	movf	??___fladd^(0+128),w
  9133  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  9134  0DE5  00DA               	movwf	___fladd@grs
  9135  0DE6  0858               	movf	___fladd@aexp,w
  9136  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  9137  0DE8  00C2               	movwf	??___fladd^(0+128)
  9138  0DE9  0842               	movf	??___fladd^(0+128),w
  9139  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  9140  0DEB  00D9               	movwf	___fladd@bexp
  9141  0DEC  085A               	movf	___fladd@grs,w
  9142  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  9143  0DEE  00C2               	movwf	??___fladd^(0+128)
  9144  0DEF  0842               	movf	??___fladd^(0+128),w
  9145  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  9146  0DF1  00D8               	movwf	___fladd@aexp
  9147  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  9148  0DF3  083A               	movf	___fladd@b^(0+128),w
  9149  0DF4  00C2               	movwf	??___fladd^(0+128)
  9150  0DF5  0842               	movf	??___fladd^(0+128),w
  9151  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  9152  0DF7  00DA               	movwf	___fladd@grs
  9153  0DF8  1683               	bsf	3,5	;RP0=1, select bank1
  9154  0DF9  083E               	movf	___fladd@a^(0+128),w
  9155  0DFA  00C2               	movwf	??___fladd^(0+128)
  9156  0DFB  0842               	movf	??___fladd^(0+128),w
  9157  0DFC  00BA               	movwf	___fladd@b^(0+128)
  9158  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  9159  0DFE  085A               	movf	___fladd@grs,w
  9160  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  9161  0E00  00C2               	movwf	??___fladd^(0+128)
  9162  0E01  0842               	movf	??___fladd^(0+128),w
  9163  0E02  00BE               	movwf	___fladd@a^(0+128)
  9164  0E03  083B               	movf	(___fladd@b^(0+128)+1),w
  9165  0E04  00C2               	movwf	??___fladd^(0+128)
  9166  0E05  0842               	movf	??___fladd^(0+128),w
  9167  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  9168  0E07  00DA               	movwf	___fladd@grs
  9169  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  9170  0E09  083F               	movf	(___fladd@a^(0+128)+1),w
  9171  0E0A  00C2               	movwf	??___fladd^(0+128)
  9172  0E0B  0842               	movf	??___fladd^(0+128),w
  9173  0E0C  00BB               	movwf	(___fladd@b^(0+128)+1)
  9174  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  9175  0E0E  085A               	movf	___fladd@grs,w
  9176  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  9177  0E10  00C2               	movwf	??___fladd^(0+128)
  9178  0E11  0842               	movf	??___fladd^(0+128),w
  9179  0E12  00BF               	movwf	(___fladd@a^(0+128)+1)
  9180  0E13  083C               	movf	(___fladd@b^(0+128)+2),w
  9181  0E14  00C2               	movwf	??___fladd^(0+128)
  9182  0E15  0842               	movf	??___fladd^(0+128),w
  9183  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  9184  0E17  00DA               	movwf	___fladd@grs
  9185  0E18  1683               	bsf	3,5	;RP0=1, select bank1
  9186  0E19  0840               	movf	(___fladd@a^(0+128)+2),w
  9187  0E1A  00C2               	movwf	??___fladd^(0+128)
  9188  0E1B  0842               	movf	??___fladd^(0+128),w
  9189  0E1C  00BC               	movwf	(___fladd@b^(0+128)+2)
  9190  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  9191  0E1E  085A               	movf	___fladd@grs,w
  9192  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  9193  0E20  00C2               	movwf	??___fladd^(0+128)
  9194  0E21  0842               	movf	??___fladd^(0+128),w
  9195  0E22  00C0               	movwf	(___fladd@a^(0+128)+2)
  9196  0E23  083D               	movf	(___fladd@b^(0+128)+3),w
  9197  0E24  00C2               	movwf	??___fladd^(0+128)
  9198  0E25  0842               	movf	??___fladd^(0+128),w
  9199  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  9200  0E27  00DA               	movwf	___fladd@grs
  9201  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  9202  0E29  0841               	movf	(___fladd@a^(0+128)+3),w
  9203  0E2A  00C2               	movwf	??___fladd^(0+128)
  9204  0E2B  0842               	movf	??___fladd^(0+128),w
  9205  0E2C  00BD               	movwf	(___fladd@b^(0+128)+3)
  9206  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  9207  0E2E  085A               	movf	___fladd@grs,w
  9208  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  9209  0E30  00C2               	movwf	??___fladd^(0+128)
  9210  0E31  0842               	movf	??___fladd^(0+128),w
  9211  0E32  00C1               	movwf	(___fladd@a^(0+128)+3)
  9212  0E33                     l4676:
  9213  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  9214  0E34  01DA               	clrf	___fladd@grs
  9215  0E35  0858               	movf	___fladd@aexp,w
  9216  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  9217  0E37  00C2               	movwf	??___fladd^(0+128)
  9218  0E38  01C3               	clrf	(??___fladd^(0+128)+1)
  9219  0E39  0843               	movf	(??___fladd+1)^(0+128),w
  9220  0E3A  00C5               	movwf	((??___fladd+2)^(0+128)+1)
  9221  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  9222  0E3C  0859               	movf	___fladd@bexp,w
  9223  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  9224  0E3E  0242               	subwf	??___fladd^(0+128),w
  9225  0E3F  00C4               	movwf	(??___fladd+2)^(0+128)
  9226  0E40  1C03               	skipc
  9227  0E41  03C5               	decf	((??___fladd+2)^(0+128)+1),f
  9228  0E42  0845               	movf	(??___fladd+3)^(0+128),w
  9229  0E43  3A80               	xorlw	128
  9230  0E44  00FF               	movwf	127
  9231  0E45  3080               	movlw	128
  9232  0E46  027F               	subwf	127,w
  9233  0E47  1D03               	skipz
  9234  0E48  2E4B               	goto	u4955
  9235  0E49  301A               	movlw	26
  9236  0E4A  0244               	subwf	(??___fladd+2)^(0+128),w
  9237  0E4B                     u4955:
  9238  0E4B  1C03               	skipc
  9239  0E4C  2E90               	goto	l4694
  9240  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  9241  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  9242  0E4F  083D               	movf	(___fladd@b+3)^(0+128),w
  9243  0E50  043C               	iorwf	(___fladd@b+2)^(0+128),w
  9244  0E51  043B               	iorwf	(___fladd@b+1)^(0+128),w
  9245  0E52  043A               	iorwf	___fladd@b^(0+128),w
  9246  0E53  1903               	btfsc	3,2
  9247  0E54  2E57               	goto	u4960
  9248  0E55  3001               	movlw	1
  9249  0E56  2E58               	goto	u4970
  9250  0E57                     u4960:
  9251  0E57  3000               	movlw	0
  9252  0E58                     u4970:
  9253  0E58  00C2               	movwf	??___fladd^(0+128)
  9254  0E59  0842               	movf	??___fladd^(0+128),w
  9255  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  9256  0E5B  00DA               	movwf	___fladd@grs
  9257  0E5C  3000               	movlw	0
  9258  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  9259  0E5E  00BD               	movwf	(___fladd@b+3)^(0+128)
  9260  0E5F  3000               	movlw	0
  9261  0E60  00BC               	movwf	(___fladd@b+2)^(0+128)
  9262  0E61  3000               	movlw	0
  9263  0E62  00BB               	movwf	(___fladd@b+1)^(0+128)
  9264  0E63  3000               	movlw	0
  9265  0E64  00BA               	movwf	___fladd@b^(0+128)
  9266  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  9267  0E66  0858               	movf	___fladd@aexp,w
  9268  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  9269  0E68  00C2               	movwf	??___fladd^(0+128)
  9270  0E69  0842               	movf	??___fladd^(0+128),w
  9271  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  9272  0E6B  00D9               	movwf	___fladd@bexp
  9273  0E6C  2E96               	goto	l1025
  9274  0E6D                     l1027:
  9275  0E6D  1C5A               	btfss	___fladd@grs,0
  9276  0E6E  2E7A               	goto	l4684
  9277  0E6F  085A               	movf	___fladd@grs,w
  9278  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  9279  0E71  00C2               	movwf	??___fladd^(0+128)
  9280  0E72  1003               	clrc
  9281  0E73  0C42               	rrf	??___fladd^(0+128),w
  9282  0E74  3801               	iorlw	1
  9283  0E75  00C3               	movwf	(??___fladd+1)^(0+128)
  9284  0E76  0843               	movf	(??___fladd+1)^(0+128),w
  9285  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  9286  0E78  00DA               	movwf	___fladd@grs
  9287  0E79  2E7C               	goto	l4686
  9288  0E7A                     l4684:
  9289  0E7A  1003               	clrc
  9290  0E7B  0CDA               	rrf	___fladd@grs,f
  9291  0E7C                     l4686:
  9292  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  9293  0E7D  1C3A               	btfss	___fladd@b^(0+128),0
  9294  0E7E  2E81               	goto	l4690
  9295  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  9296  0E80  17DA               	bsf	___fladd@grs,7
  9297  0E81                     l4690:
  9298  0E81  3001               	movlw	1
  9299  0E82  1683               	bsf	3,5	;RP0=1, select bank1
  9300  0E83  00C2               	movwf	??___fladd^(0+128)
  9301  0E84                     u5005:
  9302  0E84  0D3D               	rlf	(___fladd@b+3)^(0+128),w
  9303  0E85  0CBD               	rrf	(___fladd@b+3)^(0+128),f
  9304  0E86  0CBC               	rrf	(___fladd@b+2)^(0+128),f
  9305  0E87  0CBB               	rrf	(___fladd@b+1)^(0+128),f
  9306  0E88  0CBA               	rrf	___fladd@b^(0+128),f
  9307  0E89  0BC2               	decfsz	(??___fladd^(0+128))& (0+127),f
  9308  0E8A  2E84               	goto	u5005
  9309  0E8B  3001               	movlw	1
  9310  0E8C  00C2               	movwf	??___fladd^(0+128)
  9311  0E8D  0842               	movf	??___fladd^(0+128),w
  9312  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  9313  0E8F  07D9               	addwf	___fladd@bexp,f
  9314  0E90                     l4694:
  9315  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  9316  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  9317  0E92  0858               	movf	___fladd@aexp,w
  9318  0E93  0259               	subwf	___fladd@bexp,w
  9319  0E94  1C03               	skipc
  9320  0E95  2E6D               	goto	l1027
  9321  0E96                     l1025:
  9322  0E96  1B57               	btfsc	___fladd@signs,6
  9323  0E97  2EE1               	goto	l4720
  9324  0E98  0859               	movf	___fladd@bexp,w
  9325  0E99  1D03               	btfss	3,2
  9326  0E9A  2EA5               	goto	l4702
  9327  0E9B  3000               	movlw	0
  9328  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  9329  0E9D  00BD               	movwf	(?___fladd+3)^(0+128)
  9330  0E9E  3000               	movlw	0
  9331  0E9F  00BC               	movwf	(?___fladd+2)^(0+128)
  9332  0EA0  3000               	movlw	0
  9333  0EA1  00BB               	movwf	(?___fladd+1)^(0+128)
  9334  0EA2  3000               	movlw	0
  9335  0EA3  00BA               	movwf	?___fladd^(0+128)
  9336  0EA4  0008               	return
  9337  0EA5                     l4702:
  9338  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  9339  0EA6  083E               	movf	___fladd@a^(0+128),w
  9340  0EA7  07BA               	addwf	___fladd@b^(0+128),f
  9341  0EA8  083F               	movf	(___fladd@a+1)^(0+128),w
  9342  0EA9  1103               	clrz
  9343  0EAA  1803               	skipnc
  9344  0EAB  3E01               	addlw	1
  9345  0EAC  1D03               	btfss	3,2
  9346  0EAD  07BB               	addwf	(___fladd@b+1)^(0+128),f
  9347  0EAE  0840               	movf	(___fladd@a+2)^(0+128),w
  9348  0EAF  1103               	clrz
  9349  0EB0  1803               	skipnc
  9350  0EB1  3E01               	addlw	1
  9351  0EB2  1D03               	btfss	3,2
  9352  0EB3  07BC               	addwf	(___fladd@b+2)^(0+128),f
  9353  0EB4  0841               	movf	(___fladd@a+3)^(0+128),w
  9354  0EB5  1103               	clrz
  9355  0EB6  1803               	skipnc
  9356  0EB7  3E01               	addlw	1
  9357  0EB8  1D03               	btfss	3,2
  9358  0EB9  07BD               	addwf	(___fladd@b+3)^(0+128),f
  9359  0EBA  1C3D               	btfss	(___fladd@b+3)^(0+128),0
  9360  0EBB  2F8E               	goto	l4754
  9361  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  9362  0EBD  1C5A               	btfss	___fladd@grs,0
  9363  0EBE  2ECA               	goto	l4710
  9364  0EBF  085A               	movf	___fladd@grs,w
  9365  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  9366  0EC1  00C2               	movwf	??___fladd^(0+128)
  9367  0EC2  1003               	clrc
  9368  0EC3  0C42               	rrf	??___fladd^(0+128),w
  9369  0EC4  3801               	iorlw	1
  9370  0EC5  00C3               	movwf	(??___fladd+1)^(0+128)
  9371  0EC6  0843               	movf	(??___fladd+1)^(0+128),w
  9372  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  9373  0EC8  00DA               	movwf	___fladd@grs
  9374  0EC9  2ECC               	goto	l4712
  9375  0ECA                     l4710:
  9376  0ECA  1003               	clrc
  9377  0ECB  0CDA               	rrf	___fladd@grs,f
  9378  0ECC                     l4712:
  9379  0ECC  1683               	bsf	3,5	;RP0=1, select bank1
  9380  0ECD  1C3A               	btfss	___fladd@b^(0+128),0
  9381  0ECE  2ED1               	goto	l4716
  9382  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  9383  0ED0  17DA               	bsf	___fladd@grs,7
  9384  0ED1                     l4716:
  9385  0ED1  3001               	movlw	1
  9386  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  9387  0ED3  00C2               	movwf	??___fladd^(0+128)
  9388  0ED4                     u5085:
  9389  0ED4  0D3D               	rlf	(___fladd@b+3)^(0+128),w
  9390  0ED5  0CBD               	rrf	(___fladd@b+3)^(0+128),f
  9391  0ED6  0CBC               	rrf	(___fladd@b+2)^(0+128),f
  9392  0ED7  0CBB               	rrf	(___fladd@b+1)^(0+128),f
  9393  0ED8  0CBA               	rrf	___fladd@b^(0+128),f
  9394  0ED9  0BC2               	decfsz	(??___fladd^(0+128))& (0+127),f
  9395  0EDA  2ED4               	goto	u5085
  9396  0EDB  3001               	movlw	1
  9397  0EDC  00C2               	movwf	??___fladd^(0+128)
  9398  0EDD  0842               	movf	??___fladd^(0+128),w
  9399  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  9400  0EDF  07D9               	addwf	___fladd@bexp,f
  9401  0EE0  2F8E               	goto	l4754
  9402  0EE1                     l4720:
  9403  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  9404  0EE2  083D               	movf	(___fladd@b+3)^(0+128),w
  9405  0EE3  3A80               	xorlw	128
  9406  0EE4  00FF               	movwf	127
  9407  0EE5  0841               	movf	(___fladd@a+3)^(0+128),w
  9408  0EE6  3A80               	xorlw	128
  9409  0EE7  027F               	subwf	127,w
  9410  0EE8  1D03               	skipz
  9411  0EE9  2EF4               	goto	u5093
  9412  0EEA  0840               	movf	(___fladd@a+2)^(0+128),w
  9413  0EEB  023C               	subwf	(___fladd@b+2)^(0+128),w
  9414  0EEC  1D03               	skipz
  9415  0EED  2EF4               	goto	u5093
  9416  0EEE  083F               	movf	(___fladd@a+1)^(0+128),w
  9417  0EEF  023B               	subwf	(___fladd@b+1)^(0+128),w
  9418  0EF0  1D03               	skipz
  9419  0EF1  2EF4               	goto	u5093
  9420  0EF2  083E               	movf	___fladd@a^(0+128),w
  9421  0EF3  023A               	subwf	___fladd@b^(0+128),w
  9422  0EF4                     u5093:
  9423  0EF4  1803               	skipnc
  9424  0EF5  2F4E               	goto	l4730
  9425  0EF6  30FF               	movlw	255
  9426  0EF7  00C2               	movwf	??___fladd^(0+128)
  9427  0EF8  30FF               	movlw	255
  9428  0EF9  00C3               	movwf	(??___fladd^(0+128)+1)
  9429  0EFA  30FF               	movlw	255
  9430  0EFB  00C4               	movwf	(??___fladd^(0+128)+2)
  9431  0EFC  30FF               	movlw	255
  9432  0EFD  00C5               	movwf	(??___fladd^(0+128)+3)
  9433  0EFE  083E               	movf	___fladd@a^(0+128),w
  9434  0EFF  00C6               	movwf	(??___fladd+4)^(0+128)
  9435  0F00  083F               	movf	(___fladd@a+1)^(0+128),w
  9436  0F01  00C7               	movwf	((??___fladd+4)^(0+128)+1)
  9437  0F02  0840               	movf	(___fladd@a+2)^(0+128),w
  9438  0F03  00C8               	movwf	((??___fladd+4)^(0+128)+2)
  9439  0F04  0841               	movf	(___fladd@a+3)^(0+128),w
  9440  0F05  00C9               	movwf	((??___fladd+4)^(0+128)+3)
  9441  0F06  083A               	movf	___fladd@b^(0+128),w
  9442  0F07  02C6               	subwf	(??___fladd+4)^(0+128),f
  9443  0F08  083B               	movf	(___fladd@b+1)^(0+128),w
  9444  0F09  1C03               	skipc
  9445  0F0A  0F3B               	incfsz	(___fladd@b+1)^(0+128),w
  9446  0F0B  2F0D               	goto	u5101
  9447  0F0C  2F0E               	goto	u5102
  9448  0F0D                     u5101:
  9449  0F0D  02C7               	subwf	((??___fladd+4)^(0+128)+1),f
  9450  0F0E                     u5102:
  9451  0F0E  083C               	movf	(___fladd@b+2)^(0+128),w
  9452  0F0F  1C03               	skipc
  9453  0F10  0F3C               	incfsz	(___fladd@b+2)^(0+128),w
  9454  0F11  2F13               	goto	u5103
  9455  0F12  2F14               	goto	u5104
  9456  0F13                     u5103:
  9457  0F13  02C8               	subwf	((??___fladd+4)^(0+128)+2),f
  9458  0F14                     u5104:
  9459  0F14  083D               	movf	(___fladd@b+3)^(0+128),w
  9460  0F15  1C03               	skipc
  9461  0F16  0F3D               	incfsz	(___fladd@b+3)^(0+128),w
  9462  0F17  2F19               	goto	u5105
  9463  0F18  2F1A               	goto	u5106
  9464  0F19                     u5105:
  9465  0F19  02C9               	subwf	((??___fladd+4)^(0+128)+3),f
  9466  0F1A                     u5106:
  9467  0F1A  0846               	movf	(??___fladd+4)^(0+128),w
  9468  0F1B  07C2               	addwf	??___fladd^(0+128),f
  9469  0F1C  0847               	movf	(??___fladd+5)^(0+128),w
  9470  0F1D  1803               	skipnc
  9471  0F1E  0F47               	incfsz	(??___fladd+5)^(0+128),w
  9472  0F1F  2F21               	goto	u5110
  9473  0F20  2F22               	goto	u5111
  9474  0F21                     u5110:
  9475  0F21  07C3               	addwf	(??___fladd^(0+128)+1),f
  9476  0F22                     u5111:
  9477  0F22  0848               	movf	(??___fladd+6)^(0+128),w
  9478  0F23  1803               	skipnc
  9479  0F24  0F48               	incfsz	(??___fladd+6)^(0+128),w
  9480  0F25  2F27               	goto	u5112
  9481  0F26  2F28               	goto	u5113
  9482  0F27                     u5112:
  9483  0F27  07C4               	addwf	(??___fladd^(0+128)+2),f
  9484  0F28                     u5113:
  9485  0F28  0849               	movf	(??___fladd+7)^(0+128),w
  9486  0F29  1803               	skipnc
  9487  0F2A  0A49               	incf	(??___fladd+7)^(0+128),w
  9488  0F2B  07C5               	addwf	(??___fladd^(0+128)+3),f
  9489  0F2C  0845               	movf	(??___fladd+3)^(0+128),w
  9490  0F2D  00BD               	movwf	(___fladd@b+3)^(0+128)
  9491  0F2E  0844               	movf	(??___fladd+2)^(0+128),w
  9492  0F2F  00BC               	movwf	(___fladd@b+2)^(0+128)
  9493  0F30  0843               	movf	(??___fladd+1)^(0+128),w
  9494  0F31  00BB               	movwf	(___fladd@b+1)^(0+128)
  9495  0F32  0842               	movf	??___fladd^(0+128),w
  9496  0F33  00BA               	movwf	___fladd@b^(0+128)
  9497  0F34  3080               	movlw	128
  9498  0F35  00C2               	movwf	??___fladd^(0+128)
  9499  0F36  0842               	movf	??___fladd^(0+128),w
  9500  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  9501  0F38  06D7               	xorwf	___fladd@signs,f
  9502  0F39  09DA               	comf	___fladd@grs,f
  9503  0F3A  0ADA               	incf	___fladd@grs,f
  9504  0F3B  085A               	movf	___fladd@grs,w
  9505  0F3C  1D03               	btfss	3,2
  9506  0F3D  2F5C               	goto	l1042
  9507  0F3E  3001               	movlw	1
  9508  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
  9509  0F40  07BA               	addwf	___fladd@b^(0+128),f
  9510  0F41  3000               	movlw	0
  9511  0F42  1803               	skipnc
  9512  0F43  3001               	movlw	1
  9513  0F44  07BB               	addwf	(___fladd@b+1)^(0+128),f
  9514  0F45  3000               	movlw	0
  9515  0F46  1803               	skipnc
  9516  0F47  3001               	movlw	1
  9517  0F48  07BC               	addwf	(___fladd@b+2)^(0+128),f
  9518  0F49  3000               	movlw	0
  9519  0F4A  1803               	skipnc
  9520  0F4B  3001               	movlw	1
  9521  0F4C  07BD               	addwf	(___fladd@b+3)^(0+128),f
  9522  0F4D  2F5C               	goto	l1042
  9523  0F4E                     l4730:
  9524  0F4E  083E               	movf	___fladd@a^(0+128),w
  9525  0F4F  02BA               	subwf	___fladd@b^(0+128),f
  9526  0F50  083F               	movf	(___fladd@a+1)^(0+128),w
  9527  0F51  1C03               	skipc
  9528  0F52  0F3F               	incfsz	(___fladd@a+1)^(0+128),w
  9529  0F53  02BB               	subwf	(___fladd@b+1)^(0+128),f
  9530  0F54  0840               	movf	(___fladd@a+2)^(0+128),w
  9531  0F55  1C03               	skipc
  9532  0F56  0F40               	incfsz	(___fladd@a+2)^(0+128),w
  9533  0F57  02BC               	subwf	(___fladd@b+2)^(0+128),f
  9534  0F58  0841               	movf	(___fladd@a+3)^(0+128),w
  9535  0F59  1C03               	skipc
  9536  0F5A  0F41               	incfsz	(___fladd@a+3)^(0+128),w
  9537  0F5B  02BD               	subwf	(___fladd@b+3)^(0+128),f
  9538  0F5C                     l1042:
  9539  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  9540  0F5D  083D               	movf	(___fladd@b+3)^(0+128),w
  9541  0F5E  043C               	iorwf	(___fladd@b+2)^(0+128),w
  9542  0F5F  043B               	iorwf	(___fladd@b+1)^(0+128),w
  9543  0F60  043A               	iorwf	___fladd@b^(0+128),w
  9544  0F61  1D03               	skipz
  9545  0F62  2F8B               	goto	l4752
  9546  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  9547  0F64  085A               	movf	___fladd@grs,w
  9548  0F65  1D03               	btfss	3,2
  9549  0F66  2F8B               	goto	l4752
  9550  0F67  3000               	movlw	0
  9551  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  9552  0F69  00BD               	movwf	(?___fladd+3)^(0+128)
  9553  0F6A  3000               	movlw	0
  9554  0F6B  00BC               	movwf	(?___fladd+2)^(0+128)
  9555  0F6C  3000               	movlw	0
  9556  0F6D  00BB               	movwf	(?___fladd+1)^(0+128)
  9557  0F6E  3000               	movlw	0
  9558  0F6F  00BA               	movwf	?___fladd^(0+128)
  9559  0F70  0008               	return
  9560  0F71                     l4738:
  9561  0F71  3001               	movlw	1
  9562  0F72  00C2               	movwf	??___fladd^(0+128)
  9563  0F73                     u5155:
  9564  0F73  1003               	clrc
  9565  0F74  0DBA               	rlf	___fladd@b^(0+128),f
  9566  0F75  0DBB               	rlf	(___fladd@b+1)^(0+128),f
  9567  0F76  0DBC               	rlf	(___fladd@b+2)^(0+128),f
  9568  0F77  0DBD               	rlf	(___fladd@b+3)^(0+128),f
  9569  0F78  0BC2               	decfsz	??___fladd^(0+128),f
  9570  0F79  2F73               	goto	u5155
  9571  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  9572  0F7B  1FDA               	btfss	___fladd@grs,7
  9573  0F7C  2F7F               	goto	l1046
  9574  0F7D  1683               	bsf	3,5	;RP0=1, select bank1
  9575  0F7E  143A               	bsf	___fladd@b^(0+128),0
  9576  0F7F                     l1046:
  9577  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  9578  0F80  1C5A               	btfss	___fladd@grs,0
  9579  0F81  2F84               	goto	l4746
  9580  0F82  1403               	setc
  9581  0F83  2F85               	goto	L8
  9582  0F84                     l4746:
  9583  0F84  1003               	clrc
  9584  0F85                     L8:
  9585  0F85  0DDA               	rlf	___fladd@grs,f
  9586  0F86  0859               	movf	___fladd@bexp,w
  9587  0F87  1903               	btfsc	3,2
  9588  0F88  2F8B               	goto	l4752
  9589  0F89  3001               	movlw	1
  9590  0F8A  02D9               	subwf	___fladd@bexp,f
  9591  0F8B                     l4752:
  9592  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  9593  0F8C  1FBC               	btfss	(___fladd@b+2)^(0+128),7
  9594  0F8D  2F71               	goto	l4738
  9595  0F8E                     l4754:
  9596  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  9597  0F8F  01D8               	clrf	___fladd@aexp
  9598  0F90  1FDA               	btfss	___fladd@grs,7
  9599  0F91  2F9C               	goto	l4764
  9600  0F92  085A               	movf	___fladd@grs,w
  9601  0F93  397F               	andlw	127
  9602  0F94  1D03               	btfss	3,2
  9603  0F95  2F99               	goto	l4760
  9604  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  9605  0F97  1C3A               	btfss	___fladd@b^(0+128),0
  9606  0F98  2F9C               	goto	l4764
  9607  0F99                     l4760:
  9608  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  9609  0F9A  01D8               	clrf	___fladd@aexp
  9610  0F9B  0AD8               	incf	___fladd@aexp,f
  9611  0F9C                     l4764:
  9612  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  9613  0F9D  0858               	movf	___fladd@aexp,w
  9614  0F9E  1903               	btfsc	3,2
  9615  0F9F  2FD4               	goto	l1055
  9616  0FA0  3001               	movlw	1
  9617  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  9618  0FA2  07BA               	addwf	___fladd@b^(0+128),f
  9619  0FA3  3000               	movlw	0
  9620  0FA4  1803               	skipnc
  9621  0FA5  3001               	movlw	1
  9622  0FA6  07BB               	addwf	(___fladd@b+1)^(0+128),f
  9623  0FA7  3000               	movlw	0
  9624  0FA8  1803               	skipnc
  9625  0FA9  3001               	movlw	1
  9626  0FAA  07BC               	addwf	(___fladd@b+2)^(0+128),f
  9627  0FAB  3000               	movlw	0
  9628  0FAC  1803               	skipnc
  9629  0FAD  3001               	movlw	1
  9630  0FAE  07BD               	addwf	(___fladd@b+3)^(0+128),f
  9631  0FAF  1C3D               	btfss	(___fladd@b+3)^(0+128),0
  9632  0FB0  2FD4               	goto	l1055
  9633  0FB1  083A               	movf	___fladd@b^(0+128),w
  9634  0FB2  00C2               	movwf	??___fladd^(0+128)
  9635  0FB3  083B               	movf	(___fladd@b+1)^(0+128),w
  9636  0FB4  00C3               	movwf	(??___fladd^(0+128)+1)
  9637  0FB5  083C               	movf	(___fladd@b+2)^(0+128),w
  9638  0FB6  00C4               	movwf	(??___fladd^(0+128)+2)
  9639  0FB7  083D               	movf	(___fladd@b+3)^(0+128),w
  9640  0FB8  00C5               	movwf	(??___fladd^(0+128)+3)
  9641  0FB9  3001               	movlw	1
  9642  0FBA  00C6               	movwf	(??___fladd+4)^(0+128)
  9643  0FBB                     u5255:
  9644  0FBB  0D45               	rlf	(??___fladd^(0+128)+3),w
  9645  0FBC  0CC5               	rrf	(??___fladd^(0+128)+3),f
  9646  0FBD  0CC4               	rrf	(??___fladd^(0+128)+2),f
  9647  0FBE  0CC3               	rrf	(??___fladd^(0+128)+1),f
  9648  0FBF  0CC2               	rrf	??___fladd^(0+128),f
  9649  0FC0  0BC6               	decfsz	(??___fladd+4)^(0+128),f
  9650  0FC1  2FBB               	goto	u5255
  9651  0FC2  0845               	movf	(??___fladd+3)^(0+128),w
  9652  0FC3  00BD               	movwf	(___fladd@b+3)^(0+128)
  9653  0FC4  0844               	movf	(??___fladd+2)^(0+128),w
  9654  0FC5  00BC               	movwf	(___fladd@b+2)^(0+128)
  9655  0FC6  0843               	movf	(??___fladd+1)^(0+128),w
  9656  0FC7  00BB               	movwf	(___fladd@b+1)^(0+128)
  9657  0FC8  0842               	movf	??___fladd^(0+128),w
  9658  0FC9  00BA               	movwf	___fladd@b^(0+128)
  9659  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  9660  0FCB  0A59               	incf	___fladd@bexp,w
  9661  0FCC  1903               	btfsc	3,2
  9662  0FCD  2FD4               	goto	l1055
  9663  0FCE  3001               	movlw	1
  9664  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  9665  0FD0  00C2               	movwf	??___fladd^(0+128)
  9666  0FD1  0842               	movf	??___fladd^(0+128),w
  9667  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  9668  0FD3  07D9               	addwf	___fladd@bexp,f
  9669  0FD4                     l1055:
  9670  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  9671  0FD5  0A59               	incf	___fladd@bexp,w
  9672  0FD6  1D03               	btfss	3,2
  9673  0FD7  0859               	movf	___fladd@bexp,w
  9674  0FD8  1D03               	btfss	3,2
  9675  0FD9  2FE7               	goto	l4782
  9676  0FDA  3000               	movlw	0
  9677  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  9678  0FDC  00BD               	movwf	(___fladd@b+3)^(0+128)
  9679  0FDD  3000               	movlw	0
  9680  0FDE  00BC               	movwf	(___fladd@b+2)^(0+128)
  9681  0FDF  3000               	movlw	0
  9682  0FE0  00BB               	movwf	(___fladd@b+1)^(0+128)
  9683  0FE1  3000               	movlw	0
  9684  0FE2  00BA               	movwf	___fladd@b^(0+128)
  9685  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  9686  0FE4  0859               	movf	___fladd@bexp,w
  9687  0FE5  1903               	btfsc	3,2
  9688  0FE6  01D7               	clrf	___fladd@signs
  9689  0FE7                     l4782:
  9690  0FE7  1C59               	btfss	___fladd@bexp,0
  9691  0FE8  2FEC               	goto	l4786
  9692  0FE9  1683               	bsf	3,5	;RP0=1, select bank1
  9693  0FEA  17BC               	bsf	(___fladd@b^(0+128)+2),7
  9694  0FEB  2FF1               	goto	l1063
  9695  0FEC                     l4786:
  9696  0FEC  307F               	movlw	127
  9697  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  9698  0FEE  00C2               	movwf	??___fladd^(0+128)
  9699  0FEF  0842               	movf	??___fladd^(0+128),w
  9700  0FF0  05BC               	andwf	(___fladd@b^(0+128)+2),f
  9701  0FF1                     l1063:
  9702  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  9703  0FF2  0859               	movf	___fladd@bexp,w
  9704  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  9705  0FF4  00C2               	movwf	??___fladd^(0+128)
  9706  0FF5  1003               	clrc
  9707  0FF6  0C42               	rrf	??___fladd^(0+128),w
  9708  0FF7  00C3               	movwf	(??___fladd+1)^(0+128)
  9709  0FF8  0843               	movf	(??___fladd+1)^(0+128),w
  9710  0FF9  00BD               	movwf	(___fladd@b^(0+128)+3)
  9711  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  9712  0FFB  1FD7               	btfss	___fladd@signs,7
  9713  0FFC  0008               	return
  9714  0FFD  1683               	bsf	3,5	;RP0=1, select bank1
  9715  0FFE  17BD               	bsf	(___fladd@b^(0+128)+3),7
  9716  0FFF  0008               	return
  9717  1000                     __end_of___fladd:
  9718                           
  9719                           	psect	text53
  9720  0A93                     __ptext53:	
  9721 ;; *************** function _ade_config *****************
  9722 ;; Defined at:
  9723 ;;		line 38 in file "ade7753.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  config          1    wreg     PTR struct .
  9726 ;;		 -> ade_cfg(15), 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  config          1   37[BANK0 ] PTR struct .
  9729 ;;		 -> ade_cfg(15), 
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  1    wreg      void 
  9732 ;; Registers used:
  9733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9734 ;; Tracked objects:
  9735 ;;		On entry : 0/B00
  9736 ;;		On exit  : 300/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9739 ;;      Params:         0       0       0       0       0
  9740 ;;      Locals:         0       1       0       0       0
  9741 ;;      Temps:          0       4       0       0       0
  9742 ;;      Totals:         0       5       0       0       0
  9743 ;;Total ram usage:        5 bytes
  9744 ;; Hardware stack levels used: 1
  9745 ;; Hardware stack levels required when called: 8
  9746 ;; This function calls:
  9747 ;;		_ade_read
  9748 ;;		_ade_set_GAIN
  9749 ;;		_ade_set_LINECYC
  9750 ;;		_ade_write
  9751 ;;		_ex_int_add_isr_handler
  9752 ;; This function is called by:
  9753 ;;		_main
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757  0A93                     _ade_config:	
  9758                           ;psect for function _ade_config
  9759                           
  9760                           
  9761                           ;incstack = 0
  9762 ;; hardware stack exceeded
  9763                           ; Regs used in _ade_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9764                           ;ade_config@config stored from wreg
  9765  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  9766  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  9767  0A95  00C5               	movwf	ade_config@config
  9768                           
  9769                           ;ade7753.c: 39:     if (config == (0)) return;
  9770  0A96  0845               	movf	ade_config@config,w
  9771  0A97  1903               	btfsc	3,2
  9772  0A98  0008               	return
  9773                           
  9774                           ;ade7753.c: 40:     _is_reversed = config->is_reversed;
  9775  0A99  0845               	movf	ade_config@config,w
  9776  0A9A  3E0D               	addlw	13
  9777  0A9B  0084               	movwf	4
  9778  0A9C  1783               	bsf	3,7	;select IRP bank2
  9779  0A9D  0800               	movf	0,w
  9780  0A9E  00C1               	movwf	??_ade_config
  9781  0A9F  0841               	movf	??_ade_config,w
  9782  0AA0  1683               	bsf	3,5	;RP0=1, select bank1
  9783  0AA1  00EC               	movwf	__is_reversed^(0+128)
  9784                           
  9785                           ;ade7753.c: 41:     ade_set_GAIN(config->gain);
  9786  0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  9787  0AA3  0845               	movf	ade_config@config,w
  9788  0AA4  0084               	movwf	4
  9789  0AA5  0800               	movf	0,w
  9790  0AA6  160A  118A  20AC  120A  158A  	fcall	_ade_set_GAIN
  9791                           
  9792                           ;ade7753.c: 43:     if (_ade_zx_cb == (0) && config->zx_cb != (0)) {
  9793  0AAB  0866               	movf	__ade_zx_cb,w
  9794  0AAC  1D03               	btfss	3,2
  9795  0AAD  2AC4               	goto	l5140
  9796  0AAE  0845               	movf	ade_config@config,w
  9797  0AAF  3E0E               	addlw	14
  9798  0AB0  0084               	movwf	4
  9799  0AB1  1783               	bsf	3,7	;select IRP bank2
  9800  0AB2  0800               	movf	0,w
  9801  0AB3  1903               	btfsc	3,2
  9802  0AB4  2AC4               	goto	l5140
  9803                           
  9804                           ;ade7753.c: 45:         OPTION_REGbits.INTEDG = 0;
  9805  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  9806  0AB6  1301               	bcf	1,6	;volatile
  9807                           
  9808                           ;ade7753.c: 46:         ex_int_add_isr_handler(ade_zx_handler);
  9809  0AB7  3004               	movlw	(low (fp__ade_zx_handler-i1fpbase))& (0+255)
  9810  0AB8  160A  158A  2750  120A  158A  	fcall	_ex_int_add_isr_handler
  9811                           
  9812                           ;ade7753.c: 47:         _ade_zx_cb = config->zx_cb;
  9813  0ABD  0845               	movf	ade_config@config,w
  9814  0ABE  3E0E               	addlw	14
  9815  0ABF  0084               	movwf	4
  9816  0AC0  0800               	movf	0,w
  9817  0AC1  00C1               	movwf	??_ade_config
  9818  0AC2  0841               	movf	??_ade_config,w
  9819  0AC3  00E6               	movwf	__ade_zx_cb
  9820  0AC4                     l5140:
  9821                           
  9822                           ;ade7753.c: 50:     ade_set_LINECYC(config->linecyc);
  9823  0AC4  0845               	movf	ade_config@config,w
  9824  0AC5  3E05               	addlw	5
  9825  0AC6  0084               	movwf	4
  9826  0AC7  1783               	bsf	3,7	;select IRP bank2
  9827  0AC8  0800               	movf	0,w
  9828  0AC9  00BC               	movwf	ade_set_LINECYC@linecyc
  9829  0ACA  0A84               	incf	4,f
  9830  0ACB  0800               	movf	0,w
  9831  0ACC  00BD               	movwf	ade_set_LINECYC@linecyc+1
  9832  0ACD  160A  118A  2120  120A  158A  	fcall	_ade_set_LINECYC
  9833                           
  9834                           ;ade7753.c: 51:     ade_write(0x0D, config->ch1os.reg_val, 1);
  9835  0AD2  0845               	movf	ade_config@config,w
  9836  0AD3  3E07               	addlw	7
  9837  0AD4  0084               	movwf	4
  9838  0AD5  1783               	bsf	3,7	;select IRP bank2
  9839  0AD6  0800               	movf	0,w
  9840  0AD7  00C1               	movwf	??_ade_config
  9841  0AD8  01C2               	clrf	??_ade_config+1
  9842  0AD9  01C3               	clrf	??_ade_config+2
  9843  0ADA  01C4               	clrf	??_ade_config+3
  9844  0ADB  0844               	movf	??_ade_config+3,w
  9845  0ADC  00B0               	movwf	ade_write@write_buf+3
  9846  0ADD  0843               	movf	??_ade_config+2,w
  9847  0ADE  00AF               	movwf	ade_write@write_buf+2
  9848  0ADF  0842               	movf	??_ade_config+1,w
  9849  0AE0  00AE               	movwf	ade_write@write_buf+1
  9850  0AE1  0841               	movf	??_ade_config,w
  9851  0AE2  00AD               	movwf	ade_write@write_buf
  9852  0AE3  01B1               	clrf	ade_write@bytes_to_write
  9853  0AE4  0AB1               	incf	ade_write@bytes_to_write,f
  9854  0AE5  300D               	movlw	13
  9855  0AE6  160A  118A  22E5  120A  158A  	fcall	_ade_write
  9856                           
  9857                           ;ade7753.c: 52:     ade_write(0x0E, config->ch2os.reg_val, 1);
  9858  0AEB  0845               	movf	ade_config@config,w
  9859  0AEC  3E08               	addlw	8
  9860  0AED  0084               	movwf	4
  9861  0AEE  1783               	bsf	3,7	;select IRP bank2
  9862  0AEF  0800               	movf	0,w
  9863  0AF0  00C1               	movwf	??_ade_config
  9864  0AF1  01C2               	clrf	??_ade_config+1
  9865  0AF2  01C3               	clrf	??_ade_config+2
  9866  0AF3  01C4               	clrf	??_ade_config+3
  9867  0AF4  0844               	movf	??_ade_config+3,w
  9868  0AF5  00B0               	movwf	ade_write@write_buf+3
  9869  0AF6  0843               	movf	??_ade_config+2,w
  9870  0AF7  00AF               	movwf	ade_write@write_buf+2
  9871  0AF8  0842               	movf	??_ade_config+1,w
  9872  0AF9  00AE               	movwf	ade_write@write_buf+1
  9873  0AFA  0841               	movf	??_ade_config,w
  9874  0AFB  00AD               	movwf	ade_write@write_buf
  9875  0AFC  01B1               	clrf	ade_write@bytes_to_write
  9876  0AFD  0AB1               	incf	ade_write@bytes_to_write,f
  9877  0AFE  300E               	movlw	14
  9878  0AFF  160A  118A  22E5  120A  158A  	fcall	_ade_write
  9879                           
  9880                           ;ade7753.c: 53:     ade_write(0x18, config->irmsos, 2);
  9881  0B04  0845               	movf	ade_config@config,w
  9882  0B05  3E09               	addlw	9
  9883  0B06  0084               	movwf	4
  9884  0B07  1783               	bsf	3,7	;select IRP bank2
  9885  0B08  0800               	movf	0,w
  9886  0B09  00C1               	movwf	??_ade_config
  9887  0B0A  0A84               	incf	4,f
  9888  0B0B  0800               	movf	0,w
  9889  0B0C  00C2               	movwf	??_ade_config+1
  9890  0B0D  0841               	movf	??_ade_config,w
  9891  0B0E  00AD               	movwf	ade_write@write_buf
  9892  0B0F  0842               	movf	??_ade_config+1,w
  9893  0B10  00AE               	movwf	ade_write@write_buf+1
  9894  0B11  01AF               	clrf	ade_write@write_buf+2
  9895  0B12  01B0               	clrf	ade_write@write_buf+3
  9896  0B13  3002               	movlw	2
  9897  0B14  00C3               	movwf	??_ade_config+2
  9898  0B15  0843               	movf	??_ade_config+2,w
  9899  0B16  00B1               	movwf	ade_write@bytes_to_write
  9900  0B17  3018               	movlw	24
  9901  0B18  160A  118A  22E5  120A  158A  	fcall	_ade_write
  9902                           
  9903                           ;ade7753.c: 54:     ade_write(0x19, config->vrmsos, 2);
  9904  0B1D  0845               	movf	ade_config@config,w
  9905  0B1E  3E0B               	addlw	11
  9906  0B1F  0084               	movwf	4
  9907  0B20  1783               	bsf	3,7	;select IRP bank2
  9908  0B21  0800               	movf	0,w
  9909  0B22  00C1               	movwf	??_ade_config
  9910  0B23  0A84               	incf	4,f
  9911  0B24  0800               	movf	0,w
  9912  0B25  00C2               	movwf	??_ade_config+1
  9913  0B26  0841               	movf	??_ade_config,w
  9914  0B27  00AD               	movwf	ade_write@write_buf
  9915  0B28  0842               	movf	??_ade_config+1,w
  9916  0B29  00AE               	movwf	ade_write@write_buf+1
  9917  0B2A  01AF               	clrf	ade_write@write_buf+2
  9918  0B2B  01B0               	clrf	ade_write@write_buf+3
  9919  0B2C  3002               	movlw	2
  9920  0B2D  00C3               	movwf	??_ade_config+2
  9921  0B2E  0843               	movf	??_ade_config+2,w
  9922  0B2F  00B1               	movwf	ade_write@bytes_to_write
  9923  0B30  3019               	movlw	25
  9924  0B31  160A  118A  22E5  120A  158A  	fcall	_ade_write
  9925                           
  9926                           ;ade7753.c: 55:     ade_write(0x09, config->mode.reg_val, 2);
  9927  0B36  0A45               	incf	ade_config@config,w
  9928  0B37  0084               	movwf	4
  9929  0B38  1783               	bsf	3,7	;select IRP bank2
  9930  0B39  0800               	movf	0,w
  9931  0B3A  00C1               	movwf	??_ade_config
  9932  0B3B  0A84               	incf	4,f
  9933  0B3C  0800               	movf	0,w
  9934  0B3D  00C2               	movwf	??_ade_config+1
  9935  0B3E  0841               	movf	??_ade_config,w
  9936  0B3F  00AD               	movwf	ade_write@write_buf
  9937  0B40  0842               	movf	??_ade_config+1,w
  9938  0B41  00AE               	movwf	ade_write@write_buf+1
  9939  0B42  01AF               	clrf	ade_write@write_buf+2
  9940  0B43  01B0               	clrf	ade_write@write_buf+3
  9941  0B44  3002               	movlw	2
  9942  0B45  00C3               	movwf	??_ade_config+2
  9943  0B46  0843               	movf	??_ade_config+2,w
  9944  0B47  00B1               	movwf	ade_write@bytes_to_write
  9945  0B48  3009               	movlw	9
  9946  0B49  160A  118A  22E5  120A  158A  	fcall	_ade_write
  9947                           
  9948                           ;ade7753.c: 56:     ade_write(0x0A, config->irq_en.reg_val, 2);
  9949  0B4E  0845               	movf	ade_config@config,w
  9950  0B4F  3E03               	addlw	3
  9951  0B50  0084               	movwf	4
  9952  0B51  1783               	bsf	3,7	;select IRP bank2
  9953  0B52  0800               	movf	0,w
  9954  0B53  00C1               	movwf	??_ade_config
  9955  0B54  0A84               	incf	4,f
  9956  0B55  0800               	movf	0,w
  9957  0B56  00C2               	movwf	??_ade_config+1
  9958  0B57  0841               	movf	??_ade_config,w
  9959  0B58  00AD               	movwf	ade_write@write_buf
  9960  0B59  0842               	movf	??_ade_config+1,w
  9961  0B5A  00AE               	movwf	ade_write@write_buf+1
  9962  0B5B  01AF               	clrf	ade_write@write_buf+2
  9963  0B5C  01B0               	clrf	ade_write@write_buf+3
  9964  0B5D  3002               	movlw	2
  9965  0B5E  00C3               	movwf	??_ade_config+2
  9966  0B5F  0843               	movf	??_ade_config+2,w
  9967  0B60  00B1               	movwf	ade_write@bytes_to_write
  9968  0B61  300A               	movlw	10
  9969  0B62  160A  118A  22E5  120A  158A  	fcall	_ade_write
  9970                           
  9971                           ;ade7753.c: 57:     ade_read(0x0C, 2);
  9972  0B67  3002               	movlw	2
  9973  0B68  00C1               	movwf	??_ade_config
  9974  0B69  0841               	movf	??_ade_config,w
  9975  0B6A  00AA               	movwf	ade_read@bytes_to_read
  9976  0B6B  300C               	movlw	12
  9977  0B6C  160A  118A  22A6   	fcall	_ade_read
  9978  0B6F  0008               	return
  9979  0B70                     __end_of_ade_config:
  9980                           
  9981                           	psect	text54
  9982  1F50                     __ptext54:	
  9983 ;; *************** function _ex_int_add_isr_handler *****************
  9984 ;; Defined at:
  9985 ;;		line 35 in file "it_handle.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  handler         1    wreg     PTR FTN()void 
  9988 ;;		 -> ade_zx_handler(1), 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;  handler         1   10[BANK0 ] PTR FTN()void 
  9991 ;;		 -> ade_zx_handler(1), 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg
  9996 ;; Tracked objects:
  9997 ;;		On entry : B00/900
  9998 ;;		On exit  : B00/800
  9999 ;;		Unchanged: 800/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10001 ;;      Params:         0       0       0       0       0
 10002 ;;      Locals:         0       1       0       0       0
 10003 ;;      Temps:          0       1       0       0       0
 10004 ;;      Totals:         0       2       0       0       0
 10005 ;;Total ram usage:        2 bytes
 10006 ;; Hardware stack levels used: 1
 10007 ;; Hardware stack levels required when called: 5
 10008 ;; This function calls:
 10009 ;;		Nothing
 10010 ;; This function is called by:
 10011 ;;		_ade_config
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015  1F50                     _ex_int_add_isr_handler:	
 10016                           ;psect for function _ex_int_add_isr_handler
 10017                           
 10018                           
 10019                           ;incstack = 0
 10020                           ; Regs used in _ex_int_add_isr_handler: [wreg]
 10021                           ;ex_int_add_isr_handler@handler stored from wreg
 10022  1F50  1283               	bcf	3,5	;RP0=0, select bank0
 10023  1F51  00AA               	movwf	ex_int_add_isr_handler@handler
 10024                           
 10025                           ;it_handle.c: 36:     INTCONbits.INTF = 0;
 10026  1F52  108B               	bcf	11,1	;volatile
 10027                           
 10028                           ;it_handle.c: 37:     INTCONbits.INTE = 1;
 10029  1F53  160B               	bsf	11,4	;volatile
 10030                           
 10031                           ;it_handle.c: 38:     _ex_int_isr = handler;
 10032  1F54  082A               	movf	ex_int_add_isr_handler@handler,w
 10033  1F55  00A9               	movwf	??_ex_int_add_isr_handler
 10034  1F56  0829               	movf	??_ex_int_add_isr_handler,w
 10035  1F57  00E2               	movwf	__ex_int_isr
 10036  1F58  0008               	return
 10037  1F59                     __end_of_ex_int_add_isr_handler:
 10038                           
 10039                           	psect	text55
 10040  1120                     __ptext55:	
 10041 ;; *************** function _ade_set_LINECYC *****************
 10042 ;; Defined at:
 10043 ;;		line 95 in file "ade7753.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  linecyc         2   28[BANK0 ] unsigned int 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0, pclath, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : B00/800
 10054 ;;		On exit  : 300/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10057 ;;      Params:         0       2       0       0       0
 10058 ;;      Locals:         0       0       0       0       0
 10059 ;;      Temps:          0       1       0       0       0
 10060 ;;      Totals:         0       3       0       0       0
 10061 ;;Total ram usage:        3 bytes
 10062 ;; Hardware stack levels used: 1
 10063 ;; Hardware stack levels required when called: 7
 10064 ;; This function calls:
 10065 ;;		_ade_write
 10066 ;; This function is called by:
 10067 ;;		_ade_config
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071  1120                     _ade_set_LINECYC:	
 10072                           ;psect for function _ade_set_LINECYC
 10073                           
 10074                           
 10075                           ;ade7753.c: 96:     _linecyc = linecyc;
 10076                           
 10077                           ;incstack = 0
 10078 ;; hardware stack exceeded
 10079                           ; Regs used in _ade_set_LINECYC: [wreg+status,2+status,0+pclath+cstack]
 10080  1120  083D               	movf	ade_set_LINECYC@linecyc+1,w
 10081  1121  1683               	bsf	3,5	;RP0=1, select bank3
 10082  1122  1703               	bsf	3,6	;RP1=1, select bank3
 10083  1123  00B8               	movwf	(__linecyc+1)^(0+384)
 10084  1124  1283               	bcf	3,5	;RP0=0, select bank0
 10085  1125  1303               	bcf	3,6	;RP1=0, select bank0
 10086  1126  083C               	movf	ade_set_LINECYC@linecyc,w
 10087  1127  1683               	bsf	3,5	;RP0=1, select bank3
 10088  1128  1703               	bsf	3,6	;RP1=1, select bank3
 10089  1129  00B7               	movwf	__linecyc^(0+384)
 10090                           
 10091                           ;ade7753.c: 97:     ade_write(0x1C, linecyc, 2);
 10092  112A  1283               	bcf	3,5	;RP0=0, select bank0
 10093  112B  1303               	bcf	3,6	;RP1=0, select bank0
 10094  112C  083C               	movf	ade_set_LINECYC@linecyc,w
 10095  112D  00AD               	movwf	ade_write@write_buf
 10096  112E  083D               	movf	ade_set_LINECYC@linecyc+1,w
 10097  112F  00AE               	movwf	ade_write@write_buf+1
 10098  1130  01AF               	clrf	ade_write@write_buf+2
 10099  1131  01B0               	clrf	ade_write@write_buf+3
 10100  1132  3002               	movlw	2
 10101  1133  00BE               	movwf	??_ade_set_LINECYC
 10102  1134  083E               	movf	??_ade_set_LINECYC,w
 10103  1135  00B1               	movwf	ade_write@bytes_to_write
 10104  1136  301C               	movlw	28
 10105  1137  160A  118A  22E5   	fcall	_ade_write
 10106  113A  0008               	return
 10107  113B                     __end_of_ade_set_LINECYC:
 10108                           
 10109                           	psect	text56
 10110  10AC                     __ptext56:	
 10111 ;; *************** function _ade_set_GAIN *****************
 10112 ;; Defined at:
 10113 ;;		line 91 in file "ade7753.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  gain_config     1    wreg     struct .
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  gain_config     1   32[BANK0 ] struct .
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0, pclath, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : B00/800
 10124 ;;		On exit  : 300/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10127 ;;      Params:         0       0       0       0       0
 10128 ;;      Locals:         0       1       0       0       0
 10129 ;;      Temps:          0       4       0       0       0
 10130 ;;      Totals:         0       5       0       0       0
 10131 ;;Total ram usage:        5 bytes
 10132 ;; Hardware stack levels used: 1
 10133 ;; Hardware stack levels required when called: 7
 10134 ;; This function calls:
 10135 ;;		_ade_write
 10136 ;; This function is called by:
 10137 ;;		_ade_config
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141  10AC                     _ade_set_GAIN:	
 10142                           ;psect for function _ade_set_GAIN
 10143                           
 10144                           
 10145                           ;incstack = 0
 10146 ;; hardware stack exceeded
 10147                           ; Regs used in _ade_set_GAIN: [wreg+status,2+status,0+pclath+cstack]
 10148                           ;ade_set_GAIN@gain_config stored from wreg
 10149  10AC  00C0               	movwf	ade_set_GAIN@gain_config
 10150                           
 10151                           ;ade7753.c: 92:     ade_write(0x0F, gain_config.reg_val, 1);
 10152  10AD  0840               	movf	ade_set_GAIN@gain_config,w
 10153  10AE  00BC               	movwf	??_ade_set_GAIN
 10154  10AF  01BD               	clrf	??_ade_set_GAIN+1
 10155  10B0  01BE               	clrf	??_ade_set_GAIN+2
 10156  10B1  01BF               	clrf	??_ade_set_GAIN+3
 10157  10B2  083F               	movf	??_ade_set_GAIN+3,w
 10158  10B3  00B0               	movwf	ade_write@write_buf+3
 10159  10B4  083E               	movf	??_ade_set_GAIN+2,w
 10160  10B5  00AF               	movwf	ade_write@write_buf+2
 10161  10B6  083D               	movf	??_ade_set_GAIN+1,w
 10162  10B7  00AE               	movwf	ade_write@write_buf+1
 10163  10B8  083C               	movf	??_ade_set_GAIN,w
 10164  10B9  00AD               	movwf	ade_write@write_buf
 10165  10BA  01B1               	clrf	ade_write@bytes_to_write
 10166  10BB  0AB1               	incf	ade_write@bytes_to_write,f
 10167  10BC  300F               	movlw	15
 10168  10BD  160A  118A  22E5   	fcall	_ade_write
 10169  10C0  0008               	return
 10170  10C1                     __end_of_ade_set_GAIN:
 10171                           
 10172                           	psect	text57
 10173  12E5                     __ptext57:	
 10174 ;; *************** function _ade_write *****************
 10175 ;; Defined at:
 10176 ;;		line 67 in file "ade7753.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  addr            1    wreg     unsigned char 
 10179 ;;  write_buf       4   13[BANK0 ] unsigned long 
 10180 ;;  bytes_to_wri    1   17[BANK0 ] unsigned char 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;  addr            1   25[BANK0 ] unsigned char 
 10183 ;;  i               1   27[BANK0 ] unsigned char 
 10184 ;;  data            1   26[BANK0 ] unsigned char 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  1    wreg      void 
 10187 ;; Registers used:
 10188 ;;		wreg, status,2, status,0, pclath, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : B00/800
 10191 ;;		On exit  : 300/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10194 ;;      Params:         0       5       0       0       0
 10195 ;;      Locals:         0       3       0       0       0
 10196 ;;      Temps:          0       7       0       0       0
 10197 ;;      Totals:         0      15       0       0       0
 10198 ;;Total ram usage:       15 bytes
 10199 ;; Hardware stack levels used: 1
 10200 ;; Hardware stack levels required when called: 6
 10201 ;; This function calls:
 10202 ;;		___bmul
 10203 ;;		_spi_transfer
 10204 ;; This function is called by:
 10205 ;;		_ade_config
 10206 ;;		_ade_set_GAIN
 10207 ;;		_ade_set_LINECYC
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211  12E5                     _ade_write:	
 10212                           ;psect for function _ade_write
 10213                           
 10214                           
 10215                           ;incstack = 0
 10216                           ; Regs used in _ade_write: [wreg+status,2+status,0+pclath+cstack]
 10217                           ;ade_write@addr stored from wreg
 10218  12E5  00B9               	movwf	ade_write@addr
 10219                           
 10220                           ;ade7753.c: 69:     addr |= 0x80;
 10221  12E6  17B9               	bsf	ade_write@addr,7
 10222                           
 10223                           ;ade7753.c: 70:     PORTDbits.RD3 = 0;
 10224  12E7  1188               	bcf	8,3	;volatile
 10225                           
 10226                           ;ade7753.c: 71:     spi_transfer(addr);
 10227  12E8  0839               	movf	ade_write@addr,w
 10228  12E9  160A  158A  2747  160A  118A  	fcall	_spi_transfer
 10229                           
 10230                           ;ade7753.c: 72:     for (uint8_t i = 0; i < bytes_to_write; i++) {
 10231  12EE  01BB               	clrf	ade_write@i
 10232  12EF                     l4306:
 10233  12EF  0831               	movf	ade_write@bytes_to_write,w
 10234  12F0  023B               	subwf	ade_write@i,w
 10235  12F1  1803               	btfsc	3,0
 10236  12F2  2B28               	goto	l59
 10237                           
 10238                           ;ade7753.c: 73:         data = (uint8_t) (write_buf >> 8 * (bytes_to_write - i - 1));
 10239  12F3  082D               	movf	ade_write@write_buf,w
 10240  12F4  00B2               	movwf	??_ade_write
 10241  12F5  082E               	movf	ade_write@write_buf+1,w
 10242  12F6  00B3               	movwf	??_ade_write+1
 10243  12F7  082F               	movf	ade_write@write_buf+2,w
 10244  12F8  00B4               	movwf	??_ade_write+2
 10245  12F9  0830               	movf	ade_write@write_buf+3,w
 10246  12FA  00B5               	movwf	??_ade_write+3
 10247  12FB  0831               	movf	ade_write@bytes_to_write,w
 10248  12FC  00B6               	movwf	??_ade_write+4
 10249  12FD  3003               	movlw	3
 10250  12FE                     u4565:
 10251  12FE  1003               	clrc
 10252  12FF  0DB6               	rlf	??_ade_write+4,f
 10253  1300  3EFF               	addlw	-1
 10254  1301  1D03               	skipz
 10255  1302  2AFE               	goto	u4565
 10256  1303  30F8               	movlw	248
 10257  1304  00B7               	movwf	??_ade_write+5
 10258  1305  0837               	movf	??_ade_write+5,w
 10259  1306  00A9               	movwf	___bmul@multiplicand
 10260  1307  083B               	movf	ade_write@i,w
 10261  1308  160A  118A  202F  160A  118A  	fcall	___bmul
 10262  130D  0736               	addwf	??_ade_write+4,w
 10263  130E  3EF8               	addlw	-8
 10264  130F  3E01               	addlw	1
 10265  1310  2B16               	goto	u4570
 10266  1311                     u4575:
 10267  1311  1003               	clrc
 10268  1312  0CB5               	rrf	??_ade_write+3,f
 10269  1313  0CB4               	rrf	??_ade_write+2,f
 10270  1314  0CB3               	rrf	??_ade_write+1,f
 10271  1315  0CB2               	rrf	??_ade_write,f
 10272  1316                     u4570:
 10273  1316  3EFF               	addlw	-1
 10274  1317  1D03               	skipz
 10275  1318  2B11               	goto	u4575
 10276  1319  0832               	movf	??_ade_write,w
 10277  131A  00B8               	movwf	??_ade_write+6
 10278  131B  0838               	movf	??_ade_write+6,w
 10279  131C  00BA               	movwf	ade_write@data
 10280                           
 10281                           ;ade7753.c: 74:         spi_transfer(data);
 10282  131D  083A               	movf	ade_write@data,w
 10283  131E  160A  158A  2747  160A  118A  	fcall	_spi_transfer
 10284                           
 10285                           ;ade7753.c: 75:     }
 10286  1323  3001               	movlw	1
 10287  1324  00B2               	movwf	??_ade_write
 10288  1325  0832               	movf	??_ade_write,w
 10289  1326  07BB               	addwf	ade_write@i,f
 10290  1327  2AEF               	goto	l4306
 10291  1328                     l59:
 10292                           
 10293                           ;ade7753.c: 76:     PORTDbits.RD3 = 1;
 10294  1328  1588               	bsf	8,3	;volatile
 10295  1329  0008               	return
 10296  132A                     __end_of_ade_write:
 10297                           
 10298                           	psect	text58
 10299  102F                     __ptext58:	
 10300 ;; *************** function ___bmul *****************
 10301 ;; Defined at:
 10302 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  multiplier      1    wreg     unsigned char 
 10305 ;;  multiplicand    1    9[BANK0 ] unsigned char 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  multiplier      1   12[BANK0 ] unsigned char 
 10308 ;;  product         1   11[BANK0 ] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      unsigned char 
 10311 ;; Registers used:
 10312 ;;		wreg, status,2, status,0
 10313 ;; Tracked objects:
 10314 ;;		On entry : 300/800
 10315 ;;		On exit  : 300/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10318 ;;      Params:         0       1       0       0       0
 10319 ;;      Locals:         0       2       0       0       0
 10320 ;;      Temps:          0       1       0       0       0
 10321 ;;      Totals:         0       4       0       0       0
 10322 ;;Total ram usage:        4 bytes
 10323 ;; Hardware stack levels used: 1
 10324 ;; Hardware stack levels required when called: 5
 10325 ;; This function calls:
 10326 ;;		Nothing
 10327 ;; This function is called by:
 10328 ;;		_ade_write
 10329 ;;		_sys_tick_handler
 10330 ;;		_sys_tick_register_callback_handler
 10331 ;;		_sys_tick_start_periodic
 10332 ;;		_sys_tick_stop
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336  102F                     ___bmul:	
 10337                           ;psect for function ___bmul
 10338                           
 10339                           
 10340                           ;incstack = 0
 10341                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10342                           ;___bmul@multiplier stored from wreg
 10343  102F  00AC               	movwf	___bmul@multiplier
 10344  1030  01AB               	clrf	___bmul@product
 10345  1031                     l4266:
 10346  1031  1C2C               	btfss	___bmul@multiplier,0
 10347  1032  2837               	goto	l4270
 10348  1033  0829               	movf	___bmul@multiplicand,w
 10349  1034  00AA               	movwf	??___bmul
 10350  1035  082A               	movf	??___bmul,w
 10351  1036  07AB               	addwf	___bmul@product,f
 10352  1037                     l4270:
 10353  1037  1003               	clrc
 10354  1038  0DA9               	rlf	___bmul@multiplicand,f
 10355  1039  1003               	clrc
 10356  103A  0CAC               	rrf	___bmul@multiplier,f
 10357  103B  082C               	movf	___bmul@multiplier,w
 10358  103C  1D03               	btfss	3,2
 10359  103D  2831               	goto	l4266
 10360  103E  082B               	movf	___bmul@product,w
 10361  103F  0008               	return
 10362  1040                     __end_of___bmul:
 10363                           
 10364                           	psect	text59
 10365  12A6                     __ptext59:	
 10366 ;; *************** function _ade_read *****************
 10367 ;; Defined at:
 10368 ;;		line 79 in file "ade7753.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  addr            1    wreg     unsigned char 
 10371 ;;  bytes_to_rea    1   10[BANK0 ] unsigned char 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  addr            1   18[BANK0 ] unsigned char 
 10374 ;;  i               1   23[BANK0 ] unsigned char 
 10375 ;;  data            4   19[BANK0 ] unsigned long 
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  4   10[BANK0 ] unsigned long 
 10378 ;; Registers used:
 10379 ;;		wreg, status,2, status,0, pclath, cstack
 10380 ;; Tracked objects:
 10381 ;;		On entry : 300/800
 10382 ;;		On exit  : 300/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10385 ;;      Params:         0       4       0       0       0
 10386 ;;      Locals:         0       6       0       0       0
 10387 ;;      Temps:          0       4       0       0       0
 10388 ;;      Totals:         0      14       0       0       0
 10389 ;;Total ram usage:       14 bytes
 10390 ;; Hardware stack levels used: 1
 10391 ;; Hardware stack levels required when called: 6
 10392 ;; This function calls:
 10393 ;;		_spi_transfer
 10394 ;; This function is called by:
 10395 ;;		_ade_config
 10396 ;;		_ade_get_IRMS
 10397 ;;		_ade_get_VRMS
 10398 ;;		_ade_get_LAENERGY
 10399 ;;		_ade_get_PERIOD
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403  12A6                     _ade_read:	
 10404                           ;psect for function _ade_read
 10405                           
 10406                           
 10407                           ;incstack = 0
 10408 ;; hardware stack exceeded
 10409                           ; Regs used in _ade_read: [wreg+status,2+status,0+pclath+cstack]
 10410                           ;ade_read@addr stored from wreg
 10411  12A6  00B2               	movwf	ade_read@addr
 10412                           
 10413                           ;ade7753.c: 80:     uint32_t data = 0;
 10414  12A7  3000               	movlw	0
 10415  12A8  00B6               	movwf	ade_read@data+3
 10416  12A9  3000               	movlw	0
 10417  12AA  00B5               	movwf	ade_read@data+2
 10418  12AB  3000               	movlw	0
 10419  12AC  00B4               	movwf	ade_read@data+1
 10420  12AD  3000               	movlw	0
 10421  12AE  00B3               	movwf	ade_read@data
 10422                           
 10423                           ;ade7753.c: 81:     PORTDbits.RD3 = 0;
 10424  12AF  1188               	bcf	8,3	;volatile
 10425                           
 10426                           ;ade7753.c: 82:     spi_transfer(addr);
 10427  12B0  0832               	movf	ade_read@addr,w
 10428  12B1  160A  158A  2747  160A  118A  	fcall	_spi_transfer
 10429                           
 10430                           ;ade7753.c: 83:     for (uint8_t i = 0; i < bytes_to_read; i++) {
 10431  12B6  01B7               	clrf	ade_read@i
 10432  12B7                     l4322:
 10433  12B7  082A               	movf	ade_read@bytes_to_read,w
 10434  12B8  0237               	subwf	ade_read@i,w
 10435  12B9  1803               	btfsc	3,0
 10436  12BA  2ADB               	goto	l65
 10437                           
 10438                           ;ade7753.c: 84:         data <<= 8;
 10439  12BB  3008               	movlw	8
 10440  12BC  00AE               	movwf	??_ade_read
 10441  12BD                     u4595:
 10442  12BD  1003               	clrc
 10443  12BE  0DB3               	rlf	ade_read@data,f
 10444  12BF  0DB4               	rlf	ade_read@data+1,f
 10445  12C0  0DB5               	rlf	ade_read@data+2,f
 10446  12C1  0DB6               	rlf	ade_read@data+3,f
 10447  12C2  0BAE               	decfsz	??_ade_read,f
 10448  12C3  2ABD               	goto	u4595
 10449                           
 10450                           ;ade7753.c: 85:         data |= spi_transfer(0xFF);
 10451  12C4  30FF               	movlw	255
 10452  12C5  160A  158A  2747  160A  118A  	fcall	_spi_transfer
 10453  12CA  00AE               	movwf	??_ade_read
 10454  12CB  01AF               	clrf	??_ade_read+1
 10455  12CC  01B0               	clrf	??_ade_read+2
 10456  12CD  01B1               	clrf	??_ade_read+3
 10457  12CE  082E               	movf	??_ade_read,w
 10458  12CF  04B3               	iorwf	ade_read@data,f
 10459  12D0  082F               	movf	??_ade_read+1,w
 10460  12D1  04B4               	iorwf	ade_read@data+1,f
 10461  12D2  0830               	movf	??_ade_read+2,w
 10462  12D3  04B5               	iorwf	ade_read@data+2,f
 10463  12D4  0831               	movf	??_ade_read+3,w
 10464  12D5  04B6               	iorwf	ade_read@data+3,f
 10465                           
 10466                           ;ade7753.c: 86:     }
 10467  12D6  3001               	movlw	1
 10468  12D7  00AE               	movwf	??_ade_read
 10469  12D8  082E               	movf	??_ade_read,w
 10470  12D9  07B7               	addwf	ade_read@i,f
 10471  12DA  2AB7               	goto	l4322
 10472  12DB                     l65:
 10473                           
 10474                           ;ade7753.c: 87:     PORTDbits.RD3 = 1;
 10475  12DB  1588               	bsf	8,3	;volatile
 10476                           
 10477                           ;ade7753.c: 88:     return data;
 10478  12DC  0836               	movf	ade_read@data+3,w
 10479  12DD  00AD               	movwf	?_ade_read+3
 10480  12DE  0835               	movf	ade_read@data+2,w
 10481  12DF  00AC               	movwf	?_ade_read+2
 10482  12E0  0834               	movf	ade_read@data+1,w
 10483  12E1  00AB               	movwf	?_ade_read+1
 10484  12E2  0833               	movf	ade_read@data,w
 10485  12E3  00AA               	movwf	?_ade_read
 10486  12E4  0008               	return
 10487  12E5                     __end_of_ade_read:
 10488                           
 10489                           	psect	text60
 10490  1F47                     __ptext60:	
 10491 ;; *************** function _spi_transfer *****************
 10492 ;; Defined at:
 10493 ;;		line 20 in file "spi.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  data            1    wreg     unsigned char 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  data            1    9[BANK0 ] unsigned char 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      unsigned char 
 10500 ;; Registers used:
 10501 ;;		wreg
 10502 ;; Tracked objects:
 10503 ;;		On entry : 300/800
 10504 ;;		On exit  : 300/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10507 ;;      Params:         0       0       0       0       0
 10508 ;;      Locals:         0       1       0       0       0
 10509 ;;      Temps:          0       0       0       0       0
 10510 ;;      Totals:         0       1       0       0       0
 10511 ;;Total ram usage:        1 bytes
 10512 ;; Hardware stack levels used: 1
 10513 ;; Hardware stack levels required when called: 5
 10514 ;; This function calls:
 10515 ;;		Nothing
 10516 ;; This function is called by:
 10517 ;;		_ade_write
 10518 ;;		_ade_read
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522  1F47                     _spi_transfer:	
 10523                           ;psect for function _spi_transfer
 10524                           
 10525                           
 10526                           ;incstack = 0
 10527 ;; hardware stack exceeded
 10528                           ; Regs used in _spi_transfer: [wreg]
 10529                           ;spi_transfer@data stored from wreg
 10530  1F47  00A9               	movwf	spi_transfer@data
 10531                           
 10532                           ;spi.c: 21:     SSPBUF = data;
 10533  1F48  0829               	movf	spi_transfer@data,w
 10534  1F49  0093               	movwf	19	;volatile
 10535  1F4A                     l395:	
 10536                           ;spi.c: 22:     while (!SSPSTATbits.BF);
 10537                           
 10538  1F4A  1683               	bsf	3,5	;RP0=1, select bank1
 10539  1F4B  1C14               	btfss	20,0	;volatile
 10540  1F4C  2F4A               	goto	l395
 10541                           
 10542                           ;spi.c: 23:     return SSPBUF;
 10543  1F4D  1283               	bcf	3,5	;RP0=0, select bank0
 10544  1F4E  0813               	movf	19,w	;volatile
 10545  1F4F  0008               	return
 10546  1F50                     __end_of_spi_transfer:
 10547                           
 10548                           	psect	text61
 10549  15BB                     __ptext61:	
 10550 ;; *************** function _ISR *****************
 10551 ;; Defined at:
 10552 ;;		line 97 in file "it_handle.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  iocMask         1    8[BANK0 ] unsigned char 
 10557 ;;  newPORTB        1    7[BANK0 ] unsigned char 
 10558 ;;  c               1    6[BANK0 ] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      void 
 10561 ;; Registers used:
 10562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 300/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10568 ;;      Params:         0       0       0       0       0
 10569 ;;      Locals:         0       3       0       0       0
 10570 ;;      Temps:          0       5       0       0       0
 10571 ;;      Totals:         0       8       0       0       0
 10572 ;;Total ram usage:        8 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; Hardware stack levels required when called: 4
 10575 ;; This function calls:
 10576 ;;		Absolute function
 10577 ;;		_ade_zx_handler
 10578 ;;		_button_handler
 10579 ;;		_sys_tick_handler
 10580 ;;		_znp_usart_event_handler
 10581 ;; This function is called by:
 10582 ;;		Interrupt level 1
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586  15BB                     _ISR:	
 10587                           ;psect for function _ISR
 10588                           
 10589                           
 10590                           ;it_handle.c: 98:     if (PIR1bits.RCIF) {
 10591  15BB  1E8C               	btfss	12,5	;volatile
 10592  15BC  2DD7               	goto	i1l5358
 10593                           
 10594                           ;it_handle.c: 99:         if (RCSTAbits.OERR) {
 10595  15BD  1C98               	btfss	24,1	;volatile
 10596  15BE  2DC1               	goto	i1l190
 10597                           
 10598                           ;it_handle.c: 100:             RCSTAbits.CREN = 0;
 10599  15BF  1218               	bcf	24,4	;volatile
 10600                           
 10601                           ;it_handle.c: 101:             RCSTAbits.CREN = 1;
 10602  15C0  1618               	bsf	24,4	;volatile
 10603  15C1                     i1l190:	
 10604                           ;it_handle.c: 102:         }
 10605                           
 10606                           
 10607                           ;it_handle.c: 104:         INTCONbits.T0IE = 1;
 10608  15C1  168B               	bsf	11,5	;volatile
 10609                           
 10610                           ;it_handle.c: 105:         INTCONbits.T0IF = 0;
 10611  15C2  110B               	bcf	11,2	;volatile
 10612                           
 10613                           ;it_handle.c: 107:         TMR0 = 175;
 10614  15C3  30AF               	movlw	175
 10615  15C4  0081               	movwf	1	;volatile
 10616                           
 10617                           ;it_handle.c: 111:         uint8_t c = RCREG;
 10618  15C5  081A               	movf	26,w	;volatile
 10619  15C6  00A1               	movwf	??_ISR
 10620  15C7  0821               	movf	??_ISR,w
 10621  15C8  00A6               	movwf	ISR@c
 10622                           
 10623                           ;it_handle.c: 112:         if (_usart_rx_isr != (0))
 10624  15C9  0865               	movf	__usart_rx_isr,w
 10625  15CA  1903               	btfsc	3,2
 10626  15CB  2DD7               	goto	i1l5358
 10627                           
 10628                           ;it_handle.c: 113:             _usart_rx_isr(USART_RX_DATA, &c);
 10629  15CC  01FA               	clrf	znp_usart_event_handler@rx_event
 10630  15CD  3026               	movlw	(low (ISR@c| 0))& (0+255)
 10631  15CE  00A1               	movwf	??_ISR
 10632  15CF  0821               	movf	??_ISR,w
 10633  15D0  00FB               	movwf	znp_usart_event_handler@event_data
 10634  15D1  0865               	movf	__usart_rx_isr,w
 10635  15D2  120A  118A  2046  160A  118A  	fcall	i1fptable
 10636  15D7                     i1l5358:
 10637                           
 10638                           ;it_handle.c: 116:     if (INTCONbits.T0IF) {
 10639  15D7  1D0B               	btfss	11,2	;volatile
 10640  15D8  2DE9               	goto	i1l5366
 10641                           
 10642                           ;it_handle.c: 117:         INTCONbits.T0IF = 0;
 10643  15D9  110B               	bcf	11,2	;volatile
 10644                           
 10645                           ;it_handle.c: 118:         INTCONbits.T0IE = 0;
 10646  15DA  128B               	bcf	11,5	;volatile
 10647                           
 10648                           ;it_handle.c: 119:         if (_usart_rx_isr != (0))
 10649  15DB  1283               	bcf	3,5	;RP0=0, select bank0
 10650  15DC  1303               	bcf	3,6	;RP1=0, select bank0
 10651  15DD  0865               	movf	__usart_rx_isr,w
 10652  15DE  1903               	btfsc	3,2
 10653  15DF  2DE9               	goto	i1l5366
 10654                           
 10655                           ;it_handle.c: 120:             _usart_rx_isr(USART_RX_CMPLT, (0));
 10656  15E0  01FA               	clrf	znp_usart_event_handler@rx_event
 10657  15E1  0AFA               	incf	znp_usart_event_handler@rx_event,f
 10658  15E2  01FB               	clrf	znp_usart_event_handler@event_data
 10659  15E3  0865               	movf	__usart_rx_isr,w
 10660  15E4  120A  118A  2046  160A  118A  	fcall	i1fptable
 10661  15E9                     i1l5366:
 10662                           
 10663                           ;it_handle.c: 123:     if (PIR1bits.TMR1IF) {
 10664  15E9  1283               	bcf	3,5	;RP0=0, select bank0
 10665  15EA  1303               	bcf	3,6	;RP1=0, select bank0
 10666  15EB  1C0C               	btfss	12,0	;volatile
 10667  15EC  2DF7               	goto	i1l5374
 10668                           
 10669                           ;it_handle.c: 124:         PIR1bits.TMR1IF = 0;
 10670  15ED  100C               	bcf	12,0	;volatile
 10671                           
 10672                           ;it_handle.c: 125:         if (_tmr1_isr != (0))
 10673  15EE  0864               	movf	__tmr1_isr,w
 10674  15EF  1903               	btfsc	3,2
 10675  15F0  2DF7               	goto	i1l5374
 10676                           
 10677                           ;it_handle.c: 126:             _tmr1_isr();
 10678  15F1  0864               	movf	__tmr1_isr,w
 10679  15F2  120A  118A  2046  160A  118A  	fcall	i1fptable
 10680  15F7                     i1l5374:
 10681                           
 10682                           ;it_handle.c: 128:     if (PIR1bits.TMR2IF) {
 10683  15F7  1283               	bcf	3,5	;RP0=0, select bank0
 10684  15F8  1303               	bcf	3,6	;RP1=0, select bank0
 10685  15F9  188C               	btfsc	12,1	;volatile
 10686                           
 10687                           ;it_handle.c: 129:         PIR1bits.TMR2IF = 0;
 10688  15FA  108C               	bcf	12,1	;volatile
 10689                           
 10690                           ;it_handle.c: 134:     if (INTCONbits.INTF) {
 10691                           
 10692                           ;it_handle.c: 132:     }
 10693  15FB  1C8B               	btfss	11,1	;volatile
 10694  15FC  2E07               	goto	i1l5386
 10695                           
 10696                           ;it_handle.c: 135:         if (_ex_int_isr != (0))
 10697  15FD  0862               	movf	__ex_int_isr,w
 10698  15FE  1903               	btfsc	3,2
 10699  15FF  2E06               	goto	i1l5384
 10700                           
 10701                           ;it_handle.c: 136:             _ex_int_isr();
 10702  1600  0862               	movf	__ex_int_isr,w
 10703  1601  120A  118A  2046  160A  118A  	fcall	i1fptable
 10704  1606                     i1l5384:
 10705                           
 10706                           ;it_handle.c: 137:         INTCONbits.INTF = 0;
 10707  1606  108B               	bcf	11,1	;volatile
 10708  1607                     i1l5386:
 10709                           
 10710                           ;it_handle.c: 140:     if (INTCONbits.RBIF) {
 10711  1607  1C0B               	btfss	11,0	;volatile
 10712  1608  2E30               	goto	i1l223
 10713                           
 10714                           ;it_handle.c: 141:         static uint8_t tmpPORTB = 0xFF;;it_handle.c: 142:         uin
      +                          t8_t newPORTB = PORTB;
 10715  1609  1283               	bcf	3,5	;RP0=0, select bank0
 10716  160A  1303               	bcf	3,6	;RP1=0, select bank0
 10717  160B  0806               	movf	6,w	;volatile
 10718  160C  00A1               	movwf	??_ISR
 10719  160D  0821               	movf	??_ISR,w
 10720  160E  00A7               	movwf	ISR@newPORTB
 10721                           
 10722                           ;it_handle.c: 143:         uint8_t iocMask = (tmpPORTB ^ newPORTB) & IOCB & TRISB;
 10723  160F  1683               	bsf	3,5	;RP0=1, select bank3
 10724  1610  1703               	bsf	3,6	;RP1=1, select bank3
 10725  1611  084C               	movf	ISR@tmpPORTB^(0+384),w
 10726  1612  1283               	bcf	3,5	;RP0=0, select bank0
 10727  1613  1303               	bcf	3,6	;RP1=0, select bank0
 10728  1614  0627               	xorwf	ISR@newPORTB,w
 10729  1615  1683               	bsf	3,5	;RP0=1, select bank1
 10730  1616  0516               	andwf	22,w	;volatile
 10731  1617  0506               	andwf	6,w	;volatile
 10732  1618  1283               	bcf	3,5	;RP0=0, select bank0
 10733  1619  00A1               	movwf	??_ISR
 10734  161A  0821               	movf	??_ISR,w
 10735  161B  00A8               	movwf	ISR@iocMask
 10736                           
 10737                           ;it_handle.c: 145:         if (iocMask & (1 << 1)) {
 10738  161C  1CA8               	btfss	ISR@iocMask,1
 10739  161D  2E27               	goto	i1l5410
 10740                           
 10741                           ;it_handle.c: 146:             if (_ioc_rb1_isr != (0))
 10742  161E  0861               	movf	__ioc_rb1_isr,w
 10743  161F  1903               	btfsc	3,2
 10744  1620  2E27               	goto	i1l5410
 10745                           
 10746                           ;it_handle.c: 147:                 _ioc_rb1_isr();
 10747  1621  0861               	movf	__ioc_rb1_isr,w
 10748  1622  120A  118A  2046  160A  118A  	fcall	i1fptable
 10749  1627                     i1l5410:
 10750                           
 10751                           ;it_handle.c: 167:         tmpPORTB = newPORTB;
 10752  1627  1283               	bcf	3,5	;RP0=0, select bank0
 10753  1628  1303               	bcf	3,6	;RP1=0, select bank0
 10754  1629  0827               	movf	ISR@newPORTB,w
 10755  162A  00A1               	movwf	??_ISR
 10756  162B  0821               	movf	??_ISR,w
 10757  162C  1683               	bsf	3,5	;RP0=1, select bank3
 10758  162D  1703               	bsf	3,6	;RP1=1, select bank3
 10759  162E  00CC               	movwf	ISR@tmpPORTB^(0+384)
 10760                           
 10761                           ;it_handle.c: 168:         INTCONbits.RBIF = 0;
 10762  162F  100B               	bcf	11,0	;volatile
 10763  1630                     i1l223:
 10764  1630  1283               	bcf	3,5	;RP0=0, select bank0
 10765  1631  1303               	bcf	3,6	;RP1=0, select bank0
 10766  1632  0825               	movf	??_ISR+4,w
 10767  1633  00FF               	movwf	127
 10768  1634  0824               	movf	??_ISR+3,w
 10769  1635  008A               	movwf	10
 10770  1636  0823               	movf	??_ISR+2,w
 10771  1637  0084               	movwf	4
 10772  1638  0E22               	swapf	??_ISR+1,w
 10773  1639  0083               	movwf	3
 10774  163A  0EFE               	swapf	126,f
 10775  163B  0E7E               	swapf	126,w
 10776  163C  0009               	retfie
 10777  163D                     __end_of_ISR:
 10778                           
 10779                           	psect	intentry
 10780  0004                     __pintentry:	
 10781                           ;incstack = 0
 10782 ;; hardware stack exceeded
 10783                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10784                           
 10785  0004                     interrupt_function:
 10786  007E                     saved_w	set	btemp
 10787  0004  00FE               	movwf	btemp
 10788  0005  0E03               	swapf	3,w
 10789  0006  1283               	bcf	3,5	;RP0=0, select bank0
 10790  0007  1303               	bcf	3,6	;RP1=0, select bank0
 10791  0008  00A2               	movwf	??_ISR+1
 10792  0009  0804               	movf	4,w
 10793  000A  00A3               	movwf	??_ISR+2
 10794  000B  080A               	movf	10,w
 10795  000C  00A4               	movwf	??_ISR+3
 10796  000D  087F               	movf	btemp+1,w
 10797  000E  00A5               	movwf	??_ISR+4
 10798  000F  160A  118A  2DBB   	ljmp	_ISR
 10799                           
 10800                           	psect	text62
 10801  1157                     __ptext62:	
 10802 ;; *************** function _znp_usart_event_handler *****************
 10803 ;; Defined at:
 10804 ;;		line 85 in file "zb_znp.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;  rx_event        1   10[COMMON] enum E1536
 10807 ;;  event_data      1   11[COMMON] PTR void 
 10808 ;;		 -> ISR@c(1), NULL(0), 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 300/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10820 ;;      Params:         2       0       0       0       0
 10821 ;;      Locals:         0       0       0       0       0
 10822 ;;      Temps:          2       0       0       0       0
 10823 ;;      Totals:         4       0       0       0       0
 10824 ;;Total ram usage:        4 bytes
 10825 ;; Hardware stack levels used: 1
 10826 ;; Hardware stack levels required when called: 3
 10827 ;; This function calls:
 10828 ;;		_znp_frame_parser
 10829 ;; This function is called by:
 10830 ;;		_znp_init
 10831 ;;		_ISR
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835  1157                     _znp_usart_event_handler:	
 10836                           ;psect for function _znp_usart_event_handler
 10837                           
 10838                           
 10839                           ;zb_znp.c: 86:     switch (rx_event) {
 10840                           
 10841                           ;incstack = 0
 10842 ;; hardware stack exceeded
 10843                           ; Regs used in _znp_usart_event_handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10844  1157  2964               	goto	i1l3952
 10845  1158                     i1l3946:
 10846                           
 10847                           ;zb_znp.c: 88:             znp_frame_parser(*(uint8_t*) event_data);
 10848  1158  087B               	movf	znp_usart_event_handler@event_data,w
 10849  1159  0084               	movwf	4
 10850  115A  1383               	bcf	3,7	;select IRP bank0
 10851  115B  0800               	movf	0,w
 10852  115C  120A  158A  2058   	fcall	_znp_frame_parser
 10853                           
 10854                           ;zb_znp.c: 89:             break;
 10855  115F  0008               	return
 10856  1160                     i1l3948:
 10857                           
 10858                           ;zb_znp.c: 91:             znp_state = SOP_STATE;
 10859  1160  1683               	bsf	3,5	;RP0=1, select bank3
 10860  1161  1703               	bsf	3,6	;RP1=1, select bank3
 10861  1162  01BC               	clrf	_znp_state^(0+384)
 10862                           
 10863                           ;zb_znp.c: 92:             break;
 10864  1163  0008               	return
 10865  1164                     i1l3952:
 10866  1164  087A               	movf	znp_usart_event_handler@rx_event,w
 10867  1165  00FC               	movwf	??_znp_usart_event_handler
 10868  1166  01FD               	clrf	??_znp_usart_event_handler+1
 10869                           
 10870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10871                           ; Switch size 1, requested type "simple"
 10872                           ; Number of cases is 1, Range of values is 0 to 0
 10873                           ; switch strategies available:
 10874                           ; Name         Instructions Cycles
 10875                           ; simple_byte            4     3 (average)
 10876                           ; direct_byte           11     8 (fixed)
 10877                           ; jumptable            260     6 (fixed)
 10878                           ;	Chosen strategy is simple_byte
 10879  1167  087D               	movf	??_znp_usart_event_handler+1,w
 10880  1168  3A00               	xorlw	0	; case 0
 10881  1169  1903               	skipnz
 10882  116A  296C               	goto	i1l5620
 10883  116B  2974               	goto	i1l489
 10884  116C                     i1l5620:
 10885                           
 10886                           ; Switch size 1, requested type "simple"
 10887                           ; Number of cases is 2, Range of values is 0 to 1
 10888                           ; switch strategies available:
 10889                           ; Name         Instructions Cycles
 10890                           ; simple_byte            7     4 (average)
 10891                           ; direct_byte           14     8 (fixed)
 10892                           ; jumptable            260     6 (fixed)
 10893                           ;	Chosen strategy is simple_byte
 10894  116C  087C               	movf	??_znp_usart_event_handler,w
 10895  116D  3A00               	xorlw	0	; case 0
 10896  116E  1903               	skipnz
 10897  116F  2958               	goto	i1l3946
 10898  1170  3A01               	xorlw	1	; case 1
 10899  1171  1903               	skipnz
 10900  1172  2960               	goto	i1l3948
 10901  1173  2974               	goto	i1l489
 10902  1174                     i1l489:
 10903  1174  0008               	return
 10904  1175                     __end_of_znp_usart_event_handler:
 10905                           
 10906                           	psect	text63
 10907  0858                     __ptext63:	
 10908 ;; *************** function _znp_frame_parser *****************
 10909 ;; Defined at:
 10910 ;;		line 39 in file "zb_znp.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  ch              1    wreg     unsigned char 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;  ch              1    9[COMMON] unsigned char 
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      void 
 10917 ;; Registers used:
 10918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10919 ;; Tracked objects:
 10920 ;;		On entry : B00/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10924 ;;      Params:         0       0       0       0       0
 10925 ;;      Locals:         1       0       0       0       0
 10926 ;;      Temps:          2       0       0       0       0
 10927 ;;      Totals:         3       0       0       0       0
 10928 ;;Total ram usage:        3 bytes
 10929 ;; Hardware stack levels used: 1
 10930 ;; Hardware stack levels required when called: 2
 10931 ;; This function calls:
 10932 ;;		Absolute function
 10933 ;;		_znp_msg_handler
 10934 ;; This function is called by:
 10935 ;;		_znp_usart_event_handler
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939  0858                     _znp_frame_parser:	
 10940                           ;psect for function _znp_frame_parser
 10941                           
 10942                           
 10943                           ;incstack = 0
 10944 ;; hardware stack exceeded
 10945                           ; Regs used in _znp_frame_parser: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10946                           ;znp_frame_parser@ch stored from wreg
 10947  0858  00F9               	movwf	znp_frame_parser@ch
 10948                           
 10949                           ;zb_znp.c: 40:     switch (znp_state) {
 10950  0859  28E4               	goto	i1l3106
 10951  085A                     i1l3058:
 10952                           
 10953                           ;zb_znp.c: 42:             if (ch == 0xFE) {
 10954  085A  30FE               	movlw	254
 10955  085B  0679               	xorwf	znp_frame_parser@ch,w
 10956  085C  1D03               	btfss	3,2
 10957  085D  0008               	return
 10958                           
 10959                           ;zb_znp.c: 43:                 znp_fcs = 0;
 10960  085E  01B9               	clrf	_znp_fcs^(0+384)
 10961                           
 10962                           ;zb_znp.c: 44:                 znp_data_rcv_index = 0;
 10963  085F  1283               	bcf	3,5	;RP0=0, select bank0
 10964  0860  1303               	bcf	3,6	;RP1=0, select bank0
 10965  0861  01DD               	clrf	_znp_data_rcv_index	;volatile
 10966                           
 10967                           ;zb_znp.c: 45:                 znp_state = LEN_STATE;
 10968  0862  1683               	bsf	3,5	;RP0=1, select bank3
 10969  0863  1703               	bsf	3,6	;RP1=1, select bank3
 10970  0864  01BC               	clrf	_znp_state^(0+384)
 10971  0865  0ABC               	incf	_znp_state^(0+384),f
 10972  0866  0008               	return
 10973  0867                     i1l3064:
 10974                           
 10975                           ;zb_znp.c: 49:             znp_len = ch;
 10976  0867  0879               	movf	znp_frame_parser@ch,w
 10977  0868  00F7               	movwf	??_znp_frame_parser
 10978  0869  0877               	movf	??_znp_frame_parser,w
 10979  086A  1283               	bcf	3,5	;RP0=0, select bank0
 10980  086B  1303               	bcf	3,6	;RP1=0, select bank0
 10981  086C  00DE               	movwf	_znp_len
 10982                           
 10983                           ;zb_znp.c: 50:             znp_fcs ^= ch;
 10984  086D  0879               	movf	znp_frame_parser@ch,w
 10985  086E  00F7               	movwf	??_znp_frame_parser
 10986  086F  0877               	movf	??_znp_frame_parser,w
 10987  0870  1683               	bsf	3,5	;RP0=1, select bank3
 10988  0871  1703               	bsf	3,6	;RP1=1, select bank3
 10989  0872  06B9               	xorwf	_znp_fcs^(0+384),f
 10990                           
 10991                           ;zb_znp.c: 51:             znp_state = CMD0_STATE;
 10992  0873  3002               	movlw	2
 10993  0874  00F7               	movwf	??_znp_frame_parser
 10994  0875  0877               	movf	??_znp_frame_parser,w
 10995  0876  00BC               	movwf	_znp_state^(0+384)
 10996                           
 10997                           ;zb_znp.c: 52:             break;
 10998  0877  0008               	return
 10999  0878                     i1l3070:
 11000                           
 11001                           ;zb_znp.c: 54:             znp_cmd0 = ch;
 11002  0878  0879               	movf	znp_frame_parser@ch,w
 11003  0879  00F7               	movwf	??_znp_frame_parser
 11004  087A  0877               	movf	??_znp_frame_parser,w
 11005  087B  00BB               	movwf	_znp_cmd0^(0+384)
 11006                           
 11007                           ;zb_znp.c: 55:             znp_fcs ^= ch;
 11008  087C  0879               	movf	znp_frame_parser@ch,w
 11009  087D  00F7               	movwf	??_znp_frame_parser
 11010  087E  0877               	movf	??_znp_frame_parser,w
 11011  087F  06B9               	xorwf	_znp_fcs^(0+384),f
 11012                           
 11013                           ;zb_znp.c: 56:             znp_state = CMD1_STATE;
 11014  0880  3003               	movlw	3
 11015  0881  00F7               	movwf	??_znp_frame_parser
 11016  0882  0877               	movf	??_znp_frame_parser,w
 11017  0883  00BC               	movwf	_znp_state^(0+384)
 11018                           
 11019                           ;zb_znp.c: 57:             break;
 11020  0884  0008               	return
 11021  0885                     i1l3076:
 11022                           
 11023                           ;zb_znp.c: 59:             znp_cmd1 = ch;
 11024  0885  0879               	movf	znp_frame_parser@ch,w
 11025  0886  00F7               	movwf	??_znp_frame_parser
 11026  0887  0877               	movf	??_znp_frame_parser,w
 11027  0888  00BA               	movwf	_znp_cmd1^(0+384)
 11028                           
 11029                           ;zb_znp.c: 60:             znp_fcs ^= ch;
 11030  0889  0879               	movf	znp_frame_parser@ch,w
 11031  088A  00F7               	movwf	??_znp_frame_parser
 11032  088B  0877               	movf	??_znp_frame_parser,w
 11033  088C  06B9               	xorwf	_znp_fcs^(0+384),f
 11034                           
 11035                           ;zb_znp.c: 61:             znp_state = (znp_len > 0) ? DATA_STATE : FCS_STATE;
 11036  088D  1283               	bcf	3,5	;RP0=0, select bank0
 11037  088E  1303               	bcf	3,6	;RP1=0, select bank0
 11038  088F  085E               	movf	_znp_len,w
 11039  0890  1D03               	btfss	3,2
 11040  0891  2899               	goto	i1l3084
 11041  0892                     i1l3082:
 11042  0892  3005               	movlw	5
 11043  0893  00F7               	movwf	??_znp_frame_parser
 11044  0894  0877               	movf	??_znp_frame_parser,w
 11045  0895  1683               	bsf	3,5	;RP0=1, select bank3
 11046  0896  1703               	bsf	3,6	;RP1=1, select bank3
 11047  0897  00BC               	movwf	_znp_state^(0+384)
 11048  0898  0008               	return
 11049  0899                     i1l3084:
 11050  0899  3004               	movlw	4
 11051  089A  00F7               	movwf	??_znp_frame_parser
 11052  089B  0877               	movf	??_znp_frame_parser,w
 11053  089C  1683               	bsf	3,5	;RP0=1, select bank3
 11054  089D  1703               	bsf	3,6	;RP1=1, select bank3
 11055  089E  00BC               	movwf	_znp_state^(0+384)
 11056  089F  0008               	return
 11057  08A0                     i1l3086:
 11058                           
 11059                           ;zb_znp.c: 64:             znp_data_rcv[znp_data_rcv_index++] = ch;
 11060  08A0  0879               	movf	znp_frame_parser@ch,w
 11061  08A1  00F7               	movwf	??_znp_frame_parser
 11062  08A2  1283               	bcf	3,5	;RP0=0, select bank0
 11063  08A3  1303               	bcf	3,6	;RP1=0, select bank0
 11064  08A4  085D               	movf	_znp_data_rcv_index,w
 11065  08A5  3E10               	addlw	(low (_znp_data_rcv| (0+256)))& (0+255)
 11066  08A6  0084               	movwf	4
 11067  08A7  0877               	movf	??_znp_frame_parser,w
 11068  08A8  1783               	bsf	3,7	;select IRP bank2
 11069  08A9  0080               	movwf	0
 11070  08AA  3001               	movlw	1
 11071  08AB  00F7               	movwf	??_znp_frame_parser
 11072  08AC  0877               	movf	??_znp_frame_parser,w
 11073  08AD  07DD               	addwf	_znp_data_rcv_index,f	;volatile
 11074                           
 11075                           ;zb_znp.c: 65:             znp_fcs ^= ch;
 11076  08AE  0879               	movf	znp_frame_parser@ch,w
 11077  08AF  00F7               	movwf	??_znp_frame_parser
 11078  08B0  0877               	movf	??_znp_frame_parser,w
 11079  08B1  1683               	bsf	3,5	;RP0=1, select bank3
 11080  08B2  1703               	bsf	3,6	;RP1=1, select bank3
 11081  08B3  06B9               	xorwf	_znp_fcs^(0+384),f
 11082                           
 11083                           ;zb_znp.c: 66:             if (znp_data_rcv_index == znp_len)
 11084  08B4  1283               	bcf	3,5	;RP0=0, select bank0
 11085  08B5  1303               	bcf	3,6	;RP1=0, select bank0
 11086  08B6  085D               	movf	_znp_data_rcv_index,w	;volatile
 11087  08B7  065E               	xorwf	_znp_len,w
 11088  08B8  1D03               	skipz
 11089  08B9  0008               	return
 11090  08BA  2892               	goto	i1l3082
 11091  08BB                     i1l3096:
 11092                           
 11093                           ;zb_znp.c: 70:             if (znp_fcs == ch) {
 11094  08BB  0839               	movf	_znp_fcs^(0+384),w
 11095  08BC  0679               	xorwf	znp_frame_parser@ch,w
 11096  08BD  1D03               	skipz
 11097  08BE  28E0               	goto	i1l3102
 11098                           
 11099                           ;zb_znp.c: 71:                 last_cmd_rcv = ((uint16_t)(((znp_cmd1) & 0x00FF) + (((znp
      +                          _cmd0) & 0x00FF) << 8)));
 11100  08BF  083B               	movf	_znp_cmd0^(0+384),w
 11101  08C0  00F7               	movwf	??_znp_frame_parser
 11102  08C1  01F8               	clrf	??_znp_frame_parser+1
 11103  08C2  0877               	movf	??_znp_frame_parser,w
 11104  08C3  00F8               	movwf	??_znp_frame_parser+1
 11105  08C4  01F7               	clrf	??_znp_frame_parser
 11106  08C5  083A               	movf	_znp_cmd1^(0+384),w
 11107  08C6  0777               	addwf	??_znp_frame_parser,w
 11108  08C7  1283               	bcf	3,5	;RP0=0, select bank0
 11109  08C8  1303               	bcf	3,6	;RP1=0, select bank0
 11110  08C9  00DB               	movwf	_last_cmd_rcv	;volatile
 11111  08CA  0878               	movf	??_znp_frame_parser+1,w
 11112  08CB  1803               	skipnc
 11113  08CC  0A78               	incf	??_znp_frame_parser+1,w
 11114  08CD  00DC               	movwf	_last_cmd_rcv+1	;volatile
 11115                           
 11116                           ;zb_znp.c: 72:                 _zb_znp_cb(
 11117  08CE  085C               	movf	_last_cmd_rcv+1,w	;volatile
 11118  08CF  00F3               	movwf	znp_msg_handler@cmd+1
 11119  08D0  085B               	movf	_last_cmd_rcv,w	;volatile
 11120  08D1  00F2               	movwf	znp_msg_handler@cmd
 11121  08D2  3010               	movlw	(low (_znp_data_rcv| (0+256)))& (0+255)
 11122  08D3  00F7               	movwf	??_znp_frame_parser
 11123  08D4  0877               	movf	??_znp_frame_parser,w
 11124  08D5  00F4               	movwf	znp_msg_handler@data
 11125  08D6  085E               	movf	_znp_len,w
 11126  08D7  00F8               	movwf	??_znp_frame_parser+1
 11127  08D8  0878               	movf	??_znp_frame_parser+1,w
 11128  08D9  00F5               	movwf	znp_msg_handler@len
 11129  08DA  1683               	bsf	3,5	;RP0=1, select bank3
 11130  08DB  1703               	bsf	3,6	;RP1=1, select bank3
 11131  08DC  083D               	movf	__zb_znp_cb^(0+384),w
 11132  08DD  120A  118A  2046   	fcall	i1fptable
 11133  08E0                     i1l3102:
 11134                           
 11135                           ;zb_znp.c: 78:             znp_state = SOP_STATE;
 11136  08E0  1683               	bsf	3,5	;RP0=1, select bank3
 11137  08E1  1703               	bsf	3,6	;RP1=1, select bank3
 11138  08E2  01BC               	clrf	_znp_state^(0+384)
 11139                           
 11140                           ;zb_znp.c: 79:             break;
 11141  08E3  0008               	return
 11142  08E4                     i1l3106:
 11143  08E4  1683               	bsf	3,5	;RP0=1, select bank3
 11144  08E5  1703               	bsf	3,6	;RP1=1, select bank3
 11145  08E6  083C               	movf	_znp_state^(0+384),w
 11146  08E7  00F7               	movwf	??_znp_frame_parser
 11147  08E8  01F8               	clrf	??_znp_frame_parser+1
 11148                           
 11149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11150                           ; Switch size 1, requested type "simple"
 11151                           ; Number of cases is 1, Range of values is 0 to 0
 11152                           ; switch strategies available:
 11153                           ; Name         Instructions Cycles
 11154                           ; simple_byte            4     3 (average)
 11155                           ; direct_byte           11     8 (fixed)
 11156                           ; jumptable            260     6 (fixed)
 11157                           ;	Chosen strategy is simple_byte
 11158  08E9  0878               	movf	??_znp_frame_parser+1,w
 11159  08EA  3A00               	xorlw	0	; case 0
 11160  08EB  1903               	skipnz
 11161  08EC  28EE               	goto	i1l5622
 11162  08ED  2902               	goto	i1l481
 11163  08EE                     i1l5622:
 11164                           
 11165                           ; Switch size 1, requested type "simple"
 11166                           ; Number of cases is 6, Range of values is 0 to 5
 11167                           ; switch strategies available:
 11168                           ; Name         Instructions Cycles
 11169                           ; simple_byte           19    10 (average)
 11170                           ; direct_byte           26     8 (fixed)
 11171                           ; jumptable            260     6 (fixed)
 11172                           ;	Chosen strategy is simple_byte
 11173  08EE  0877               	movf	??_znp_frame_parser,w
 11174  08EF  3A00               	xorlw	0	; case 0
 11175  08F0  1903               	skipnz
 11176  08F1  285A               	goto	i1l3058
 11177  08F2  3A01               	xorlw	1	; case 1
 11178  08F3  1903               	skipnz
 11179  08F4  2867               	goto	i1l3064
 11180  08F5  3A03               	xorlw	3	; case 2
 11181  08F6  1903               	skipnz
 11182  08F7  2878               	goto	i1l3070
 11183  08F8  3A01               	xorlw	1	; case 3
 11184  08F9  1903               	skipnz
 11185  08FA  2885               	goto	i1l3076
 11186  08FB  3A07               	xorlw	7	; case 4
 11187  08FC  1903               	skipnz
 11188  08FD  28A0               	goto	i1l3086
 11189  08FE  3A01               	xorlw	1	; case 5
 11190  08FF  1903               	skipnz
 11191  0900  28BB               	goto	i1l3096
 11192  0901  2902               	goto	i1l481
 11193  0902                     i1l481:
 11194  0902  0008               	return
 11195  0903                     __end_of_znp_frame_parser:
 11196                           
 11197                           	psect	text64
 11198  132A                     __ptext64:	
 11199 ;; *************** function _znp_msg_handler *****************
 11200 ;; Defined at:
 11201 ;;		line 67 in file "main.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  cmd             2    2[COMMON] unsigned int 
 11204 ;;  data            1    4[COMMON] PTR unsigned char 
 11205 ;;		 -> znp_data_rcv(30), 
 11206 ;;  len             1    5[COMMON] unsigned char 
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;		None
 11209 ;; Return value:  Size  Location     Type
 11210 ;;                  1    wreg      void 
 11211 ;; Registers used:
 11212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11213 ;; Tracked objects:
 11214 ;;		On entry : B00/300
 11215 ;;		On exit  : 100/100
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11218 ;;      Params:         4       0       0       0       0
 11219 ;;      Locals:         0       0       0       0       0
 11220 ;;      Temps:          1       0       0       0       0
 11221 ;;      Totals:         5       0       0       0       0
 11222 ;;Total ram usage:        5 bytes
 11223 ;; Hardware stack levels used: 1
 11224 ;; Hardware stack levels required when called: 1
 11225 ;; This function calls:
 11226 ;;		_xEventGroupSetBits
 11227 ;; This function is called by:
 11228 ;;		_main
 11229 ;;		_znp_frame_parser
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233  132A                     _znp_msg_handler:	
 11234                           ;psect for function _znp_msg_handler
 11235                           
 11236                           
 11237                           ;main.c: 68:     switch (cmd) {
 11238                           
 11239                           ;incstack = 0
 11240 ;; hardware stack exceeded
 11241                           ; Regs used in _znp_msg_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11242  132A  2B5D               	goto	i1l2848
 11243  132B                     i1l2832:
 11244                           
 11245                           ;main.c: 70:             if ((data[6] == data[7]) && (data[6] == 0x03)) {
 11246  132B  0874               	movf	znp_msg_handler@data,w
 11247  132C  3E07               	addlw	7
 11248  132D  0084               	movwf	4
 11249  132E  1783               	bsf	3,7	;select IRP bank2
 11250  132F  0800               	movf	0,w
 11251  1330  00F6               	movwf	??_znp_msg_handler
 11252  1331  0874               	movf	znp_msg_handler@data,w
 11253  1332  3E06               	addlw	6
 11254  1333  0084               	movwf	4
 11255  1334  0800               	movf	0,w
 11256  1335  0676               	xorwf	??_znp_msg_handler,w
 11257  1336  1D03               	skipz
 11258  1337  0008               	return
 11259  1338  0874               	movf	znp_msg_handler@data,w
 11260  1339  3E06               	addlw	6
 11261  133A  0084               	movwf	4
 11262  133B  3003               	movlw	3
 11263  133C  0600               	xorwf	0,w
 11264  133D  1D03               	btfss	3,2
 11265  133E  0008               	return
 11266                           
 11267                           ;main.c: 71:                 if (data[17]) PORTDbits.RD2 = 0;
 11268  133F  0874               	movf	znp_msg_handler@data,w
 11269  1340  3E11               	addlw	17
 11270  1341  0084               	movwf	4
 11271  1342  0800               	movf	0,w
 11272  1343  1903               	btfsc	3,2
 11273  1344  2B49               	goto	i1l348
 11274  1345  1283               	bcf	3,5	;RP0=0, select bank0
 11275  1346  1303               	bcf	3,6	;RP1=0, select bank0
 11276  1347  1108               	bcf	8,2	;volatile
 11277  1348  2B4C               	goto	i1l2840
 11278  1349                     i1l348:	
 11279                           ;main.c: 72:                 else PORTDbits.RD2 = 1;
 11280                           
 11281  1349  1283               	bcf	3,5	;RP0=0, select bank0
 11282  134A  1303               	bcf	3,6	;RP1=0, select bank0
 11283  134B  1508               	bsf	8,2	;volatile
 11284  134C                     i1l2840:
 11285                           
 11286                           ;main.c: 73:                 xEventGroupSetBits((1 << 2));
 11287  134C  3004               	movlw	4
 11288  134D  160A  158A  277A   	fcall	_xEventGroupSetBits
 11289  1350  0008               	return
 11290  1351                     i1l2842:
 11291                           
 11292                           ;main.c: 77:             if (data[0] == 0x07) xEventGroupSetBits((1 << 0));
 11293  1351  0874               	movf	znp_msg_handler@data,w
 11294  1352  0084               	movwf	4
 11295  1353  3007               	movlw	7
 11296  1354  1783               	bsf	3,7	;select IRP bank2
 11297  1355  0600               	xorwf	0,w
 11298  1356  1D03               	btfss	3,2
 11299  1357  0008               	return
 11300  1358  3001               	movlw	1
 11301  1359  160A  158A  277A   	fcall	_xEventGroupSetBits
 11302  135C  0008               	return
 11303  135D                     i1l2848:
 11304                           
 11305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11306                           ; Switch size 1, requested type "simple"
 11307                           ; Number of cases is 2, Range of values is 68 to 69
 11308                           ; switch strategies available:
 11309                           ; Name         Instructions Cycles
 11310                           ; simple_byte            7     4 (average)
 11311                           ; direct_byte           17    11 (fixed)
 11312                           ; jumptable            263     9 (fixed)
 11313                           ;	Chosen strategy is simple_byte
 11314  135D  0873               	movf	znp_msg_handler@cmd+1,w
 11315  135E  3A44               	xorlw	68	; case 68
 11316  135F  1903               	skipnz
 11317  1360  2B65               	goto	i1l5624
 11318  1361  3A01               	xorlw	1	; case 69
 11319  1362  1903               	skipnz
 11320  1363  2B6A               	goto	i1l5626
 11321  1364  2B6F               	goto	i1l354
 11322  1365                     i1l5624:
 11323                           
 11324                           ; Switch size 1, requested type "simple"
 11325                           ; Number of cases is 1, Range of values is 129 to 129
 11326                           ; switch strategies available:
 11327                           ; Name         Instructions Cycles
 11328                           ; simple_byte            4     3 (average)
 11329                           ; direct_byte           14    11 (fixed)
 11330                           ; jumptable            263     9 (fixed)
 11331                           ;	Chosen strategy is simple_byte
 11332  1365  0872               	movf	znp_msg_handler@cmd,w
 11333  1366  3A81               	xorlw	129	; case 129
 11334  1367  1903               	skipnz
 11335  1368  2B2B               	goto	i1l2832
 11336  1369  2B6F               	goto	i1l354
 11337  136A                     i1l5626:
 11338                           
 11339                           ; Switch size 1, requested type "simple"
 11340                           ; Number of cases is 1, Range of values is 192 to 192
 11341                           ; switch strategies available:
 11342                           ; Name         Instructions Cycles
 11343                           ; simple_byte            4     3 (average)
 11344                           ; direct_byte           14    11 (fixed)
 11345                           ; jumptable            263     9 (fixed)
 11346                           ;	Chosen strategy is simple_byte
 11347  136A  0872               	movf	znp_msg_handler@cmd,w
 11348  136B  3AC0               	xorlw	192	; case 192
 11349  136C  1903               	skipnz
 11350  136D  2B51               	goto	i1l2842
 11351  136E  2B6F               	goto	i1l354
 11352  136F                     i1l354:
 11353  136F  0008               	return
 11354  1370                     __end_of_znp_msg_handler:
 11355                           
 11356                           	psect	text65
 11357  09B7                     __ptext65:	
 11358 ;; *************** function _sys_tick_handler *****************
 11359 ;; Defined at:
 11360 ;;		line 27 in file "sys_tick.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;		None
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  i               1    0[BANK0 ] unsigned char 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  1    wreg      void 
 11367 ;; Registers used:
 11368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11369 ;; Tracked objects:
 11370 ;;		On entry : 300/0
 11371 ;;		On exit  : 300/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11374 ;;      Params:         0       0       0       0       0
 11375 ;;      Locals:         0       1       0       0       0
 11376 ;;      Temps:         10       0       0       0       0
 11377 ;;      Totals:        10       1       0       0       0
 11378 ;;Total ram usage:       11 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 2
 11381 ;; This function calls:
 11382 ;;		_led_ind_blink_handler
 11383 ;;		i1___bmul
 11384 ;; This function is called by:
 11385 ;;		_sys_tick_init
 11386 ;;		_ISR
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390  09B7                     _sys_tick_handler:	
 11391                           ;psect for function _sys_tick_handler
 11392                           
 11393                           
 11394                           ;sys_tick.c: 29:     TMR1 = (65535U) - 50000U;
 11395                           
 11396                           ;incstack = 0
 11397                           ; Regs used in _sys_tick_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11398  09B7  303C               	movlw	60
 11399  09B8  008F               	movwf	15	;volatile
 11400  09B9  30AF               	movlw	175
 11401  09BA  008E               	movwf	14	;volatile
 11402                           
 11403                           ;sys_tick.c: 30:     _sys_tick.tick++;
 11404  09BB  3001               	movlw	1
 11405  09BC  1683               	bsf	3,5	;RP0=1, select bank3
 11406  09BD  1703               	bsf	3,6	;RP1=1, select bank3
 11407  09BE  07AF               	addwf	(__sys_tick^(0+384)+31),f
 11408  09BF  3000               	movlw	0
 11409  09C0  1803               	skipnc
 11410  09C1  3001               	movlw	1
 11411  09C2  07B0               	addwf	((__sys_tick+1)^(0+384)+31),f
 11412  09C3  3000               	movlw	0
 11413  09C4  1803               	skipnc
 11414  09C5  3001               	movlw	1
 11415  09C6  07B1               	addwf	((__sys_tick+2)^(0+384)+31),f
 11416  09C7  3000               	movlw	0
 11417  09C8  1803               	skipnc
 11418  09C9  3001               	movlw	1
 11419  09CA  07B2               	addwf	((__sys_tick+3)^(0+384)+31),f
 11420                           
 11421                           ;sys_tick.c: 32:     for (uint8_t i = 0; i < _sys_tick._handler_index; i++) {
 11422  09CB  1283               	bcf	3,5	;RP0=0, select bank0
 11423  09CC  1303               	bcf	3,6	;RP1=0, select bank0
 11424  09CD  01A0               	clrf	sys_tick_handler@i
 11425  09CE                     i1l5344:
 11426  09CE  1683               	bsf	3,5	;RP0=1, select bank3
 11427  09CF  1703               	bsf	3,6	;RP1=1, select bank3
 11428  09D0  0810               	movf	__sys_tick^(0+384),w
 11429  09D1  3907               	andlw	7
 11430  09D2  1283               	bcf	3,5	;RP0=0, select bank0
 11431  09D3  1303               	bcf	3,6	;RP1=0, select bank0
 11432  09D4  0220               	subwf	sys_tick_handler@i,w
 11433  09D5  1803               	btfsc	3,0
 11434  09D6  0008               	return
 11435                           
 11436                           ;sys_tick.c: 33:         _sys_tick._handle[i].counter_tick++;
 11437  09D7  300A               	movlw	10
 11438  09D8  00F4               	movwf	??_sys_tick_handler
 11439  09D9  0874               	movf	??_sys_tick_handler,w
 11440  09DA  00F0               	movwf	i1___bmul@multiplicand
 11441  09DB  0820               	movf	sys_tick_handler@i,w
 11442  09DC  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11443  09E1  3E96               	addlw	(low ((__sys_tick| (0+256)+6)))& (0+255)
 11444  09E2  0084               	movwf	4
 11445  09E3  3001               	movlw	1
 11446  09E4  1783               	bsf	3,7	;select IRP bank3
 11447  09E5  0780               	addwf	0,f
 11448  09E6  0A84               	incf	4,f
 11449  09E7  3000               	movlw	0
 11450  09E8  1803               	skipnc
 11451  09E9  3E01               	addlw	1
 11452  09EA  1D03               	skipz
 11453  09EB  0780               	addwf	0,f
 11454  09EC  0A84               	incf	4,f
 11455  09ED  3000               	movlw	0
 11456  09EE  1803               	skipnc
 11457  09EF  3E01               	addlw	1
 11458  09F0  1D03               	skipz
 11459  09F1  0780               	addwf	0,f
 11460  09F2  0A84               	incf	4,f
 11461  09F3  3000               	movlw	0
 11462  09F4  1803               	skipnc
 11463  09F5  3E01               	addlw	1
 11464  09F6  0780               	addwf	0,f
 11465                           
 11466                           ;sys_tick.c: 34:         if (_sys_tick._handle[i]._en) {
 11467  09F7  300A               	movlw	10
 11468  09F8  00F4               	movwf	??_sys_tick_handler
 11469  09F9  0874               	movf	??_sys_tick_handler,w
 11470  09FA  00F0               	movwf	i1___bmul@multiplicand
 11471  09FB  0820               	movf	sys_tick_handler@i,w
 11472  09FC  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11473  0A01  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
 11474  0A02  0084               	movwf	4
 11475  0A03  1783               	bsf	3,7	;select IRP bank3
 11476  0A04  1C00               	btfss	0,0
 11477  0A05  2A8E               	goto	i1l5342
 11478                           
 11479                           ;sys_tick.c: 35:             if (_sys_tick._handle[i].counter_tick
 11480  0A06  300A               	movlw	10
 11481  0A07  00F4               	movwf	??_sys_tick_handler
 11482  0A08  0874               	movf	??_sys_tick_handler,w
 11483  0A09  00F0               	movwf	i1___bmul@multiplicand
 11484  0A0A  0820               	movf	sys_tick_handler@i,w
 11485  0A0B  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11486  0A10  3E92               	addlw	(low ((__sys_tick| (0+256)+2)))& (0+255)
 11487  0A11  0084               	movwf	4
 11488  0A12  1783               	bsf	3,7	;select IRP bank3
 11489  0A13  0800               	movf	0,w
 11490  0A14  00F5               	movwf	??_sys_tick_handler+1
 11491  0A15  0A84               	incf	4,f
 11492  0A16  0800               	movf	0,w
 11493  0A17  00F6               	movwf	??_sys_tick_handler+2
 11494  0A18  0A84               	incf	4,f
 11495  0A19  0800               	movf	0,w
 11496  0A1A  00F7               	movwf	??_sys_tick_handler+3
 11497  0A1B  0A84               	incf	4,f
 11498  0A1C  0800               	movf	0,w
 11499  0A1D  00F8               	movwf	??_sys_tick_handler+4
 11500  0A1E  300A               	movlw	10
 11501  0A1F  00F9               	movwf	??_sys_tick_handler+5
 11502  0A20  0879               	movf	??_sys_tick_handler+5,w
 11503  0A21  00F0               	movwf	i1___bmul@multiplicand
 11504  0A22  0820               	movf	sys_tick_handler@i,w
 11505  0A23  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11506  0A28  3E96               	addlw	(low ((__sys_tick| (0+256)+6)))& (0+255)
 11507  0A29  0084               	movwf	4
 11508  0A2A  1783               	bsf	3,7	;select IRP bank3
 11509  0A2B  0800               	movf	0,w
 11510  0A2C  00FA               	movwf	??_sys_tick_handler+6
 11511  0A2D  0A84               	incf	4,f
 11512  0A2E  0800               	movf	0,w
 11513  0A2F  00FB               	movwf	??_sys_tick_handler+7
 11514  0A30  0A84               	incf	4,f
 11515  0A31  0800               	movf	0,w
 11516  0A32  00FC               	movwf	??_sys_tick_handler+8
 11517  0A33  0A84               	incf	4,f
 11518  0A34  0800               	movf	0,w
 11519  0A35  00FD               	movwf	??_sys_tick_handler+9
 11520  0A36  0878               	movf	??_sys_tick_handler+4,w
 11521  0A37  027D               	subwf	??_sys_tick_handler+9,w
 11522  0A38  1D03               	skipz
 11523  0A39  2A44               	goto	u634_25
 11524  0A3A  0877               	movf	??_sys_tick_handler+3,w
 11525  0A3B  027C               	subwf	??_sys_tick_handler+8,w
 11526  0A3C  1D03               	skipz
 11527  0A3D  2A44               	goto	u634_25
 11528  0A3E  0876               	movf	??_sys_tick_handler+2,w
 11529  0A3F  027B               	subwf	??_sys_tick_handler+7,w
 11530  0A40  1D03               	skipz
 11531  0A41  2A44               	goto	u634_25
 11532  0A42  0875               	movf	??_sys_tick_handler+1,w
 11533  0A43  027A               	subwf	??_sys_tick_handler+6,w
 11534  0A44                     u634_25:
 11535  0A44  1C03               	skipc
 11536  0A45  2A8E               	goto	i1l5342
 11537                           
 11538                           ;sys_tick.c: 36:                 >= _sys_tick._handle[i].trigger_tick) {;sys_tick.c: 37:
      +                                           _sys_tick._handle[i].counter_tick = 0;
 11539  0A46  300A               	movlw	10
 11540  0A47  00F4               	movwf	??_sys_tick_handler
 11541  0A48  0874               	movf	??_sys_tick_handler,w
 11542  0A49  00F0               	movwf	i1___bmul@multiplicand
 11543  0A4A  0820               	movf	sys_tick_handler@i,w
 11544  0A4B  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11545  0A50  3E96               	addlw	(low ((__sys_tick| (0+256)+6)))& (0+255)
 11546  0A51  0084               	movwf	4
 11547  0A52  3000               	movlw	0
 11548  0A53  1783               	bsf	3,7	;select IRP bank3
 11549  0A54  0080               	movwf	0
 11550  0A55  0A84               	incf	4,f
 11551  0A56  3000               	movlw	0
 11552  0A57  0080               	movwf	0
 11553  0A58  0A84               	incf	4,f
 11554  0A59  3000               	movlw	0
 11555  0A5A  0080               	movwf	0
 11556  0A5B  0A84               	incf	4,f
 11557  0A5C  3000               	movlw	0
 11558  0A5D  0080               	movwf	0
 11559                           
 11560                           ;sys_tick.c: 38:                 _sys_tick._handle[i].cb();
 11561  0A5E  300A               	movlw	10
 11562  0A5F  00F4               	movwf	??_sys_tick_handler
 11563  0A60  0874               	movf	??_sys_tick_handler,w
 11564  0A61  00F0               	movwf	i1___bmul@multiplicand
 11565  0A62  0820               	movf	sys_tick_handler@i,w
 11566  0A63  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11567  0A68  3E9A               	addlw	(low ((__sys_tick| (0+256)+10)))& (0+255)
 11568  0A69  0084               	movwf	4
 11569  0A6A  1783               	bsf	3,7	;select IRP bank3
 11570  0A6B  0800               	movf	0,w
 11571  0A6C  120A  118A  2046  120A  158A  	fcall	i1fptable
 11572                           
 11573                           ;sys_tick.c: 39:                 if (!_sys_tick._handle[i]._periodic)
 11574  0A71  300A               	movlw	10
 11575  0A72  00F4               	movwf	??_sys_tick_handler
 11576  0A73  0874               	movf	??_sys_tick_handler,w
 11577  0A74  00F0               	movwf	i1___bmul@multiplicand
 11578  0A75  0820               	movf	sys_tick_handler@i,w
 11579  0A76  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11580  0A7B  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
 11581  0A7C  0084               	movwf	4
 11582  0A7D  1783               	bsf	3,7	;select IRP bank3
 11583  0A7E  1880               	btfsc	0,1
 11584  0A7F  2A8E               	goto	i1l5342
 11585                           
 11586                           ;sys_tick.c: 40:                     _sys_tick._handle[i]._en = 0;
 11587  0A80  300A               	movlw	10
 11588  0A81  00F4               	movwf	??_sys_tick_handler
 11589  0A82  0874               	movf	??_sys_tick_handler,w
 11590  0A83  00F0               	movwf	i1___bmul@multiplicand
 11591  0A84  0820               	movf	sys_tick_handler@i,w
 11592  0A85  160A  118A  201E  120A  158A  	fcall	i1___bmul
 11593  0A8A  3E91               	addlw	(low ((__sys_tick| (0+256)+1)))& (0+255)
 11594  0A8B  0084               	movwf	4
 11595  0A8C  1783               	bsf	3,7	;select IRP bank3
 11596  0A8D  1000               	bcf	0,0
 11597  0A8E                     i1l5342:
 11598                           
 11599                           ;sys_tick.c: 43:     }
 11600  0A8E  3001               	movlw	1
 11601  0A8F  00F4               	movwf	??_sys_tick_handler
 11602  0A90  0874               	movf	??_sys_tick_handler,w
 11603  0A91  07A0               	addwf	sys_tick_handler@i,f
 11604  0A92  29CE               	goto	i1l5344
 11605  0A93                     __end_of_sys_tick_handler:
 11606                           
 11607                           	psect	text66
 11608  101E                     __ptext66:	
 11609 ;; *************** function i1___bmul *****************
 11610 ;; Defined at:
 11611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;  multiplier      1    wreg     unsigned char 
 11614 ;;  multiplicand    1    0[COMMON] unsigned char 
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;  multiplier      1    3[COMMON] unsigned char 
 11617 ;;  product         1    2[COMMON] unsigned char 
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  1    wreg      unsigned char 
 11620 ;; Registers used:
 11621 ;;		wreg, status,2, status,0
 11622 ;; Tracked objects:
 11623 ;;		On entry : 300/0
 11624 ;;		On exit  : 300/0
 11625 ;;		Unchanged: 300/0
 11626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11627 ;;      Params:         1       0       0       0       0
 11628 ;;      Locals:         2       0       0       0       0
 11629 ;;      Temps:          1       0       0       0       0
 11630 ;;      Totals:         4       0       0       0       0
 11631 ;;Total ram usage:        4 bytes
 11632 ;; Hardware stack levels used: 1
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		_sys_tick_handler
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640  101E                     i1___bmul:	
 11641                           ;psect for function i1___bmul
 11642                           
 11643                           
 11644                           ;incstack = 0
 11645                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 11646                           ;i1___bmul@multiplier stored from wreg
 11647  101E  00F3               	movwf	i1___bmul@multiplier
 11648  101F  01F2               	clrf	i1___bmul@product
 11649  1020                     i1l3712:
 11650  1020  1C73               	btfss	i1___bmul@multiplier,0
 11651  1021  2826               	goto	i1l3716
 11652  1022  0870               	movf	i1___bmul@multiplicand,w
 11653  1023  00F1               	movwf	??i1___bmul
 11654  1024  0871               	movf	??i1___bmul,w
 11655  1025  07F2               	addwf	i1___bmul@product,f
 11656  1026                     i1l3716:
 11657  1026  1003               	clrc
 11658  1027  0DF0               	rlf	i1___bmul@multiplicand,f
 11659  1028  1003               	clrc
 11660  1029  0CF3               	rrf	i1___bmul@multiplier,f
 11661  102A  0873               	movf	i1___bmul@multiplier,w
 11662  102B  1D03               	btfss	3,2
 11663  102C  2820               	goto	i1l3712
 11664  102D  0872               	movf	i1___bmul@product,w
 11665  102E  0008               	return
 11666  102F                     __end_ofi1___bmul:
 11667                           
 11668                           	psect	text67
 11669  1F14                     __ptext67:	
 11670 ;; *************** function _led_ind_blink_handler *****************
 11671 ;; Defined at:
 11672 ;;		line 9 in file "led_ind.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, status,2, status,0, pclath, cstack
 11681 ;; Tracked objects:
 11682 ;;		On entry : B00/800
 11683 ;;		On exit  : B00/800
 11684 ;;		Unchanged: 800/0
 11685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11686 ;;      Params:         0       0       0       0       0
 11687 ;;      Locals:         0       0       0       0       0
 11688 ;;      Temps:          0       0       0       0       0
 11689 ;;      Totals:         0       0       0       0       0
 11690 ;;Total ram usage:        0 bytes
 11691 ;; Hardware stack levels used: 1
 11692 ;; Hardware stack levels required when called: 1
 11693 ;; This function calls:
 11694 ;;		_led_ind_toggle
 11695 ;; This function is called by:
 11696 ;;		_led_ind_init
 11697 ;;		_sys_tick_handler
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701  1F14                     _led_ind_blink_handler:	
 11702                           ;psect for function _led_ind_blink_handler
 11703                           
 11704                           
 11705                           ;led_ind.c: 10:     led_ind_toggle();
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in _led_ind_blink_handler: [wreg+status,2+status,0+pclath+cstack]
 11709  1F14  160A  158A  27A2   	fcall	_led_ind_toggle
 11710  1F17  0008               	return
 11711  1F18                     __end_of_led_ind_blink_handler:
 11712                           
 11713                           	psect	text68
 11714  1FA2                     __ptext68:	
 11715 ;; *************** function _led_ind_toggle *****************
 11716 ;; Defined at:
 11717 ;;		line 36 in file "led_ind.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;		None
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;		None
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  1    wreg      void 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0
 11726 ;; Tracked objects:
 11727 ;;		On entry : B00/800
 11728 ;;		On exit  : B00/800
 11729 ;;		Unchanged: 800/0
 11730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11731 ;;      Params:         0       0       0       0       0
 11732 ;;      Locals:         0       0       0       0       0
 11733 ;;      Temps:          1       0       0       0       0
 11734 ;;      Totals:         1       0       0       0       0
 11735 ;;Total ram usage:        1 bytes
 11736 ;; Hardware stack levels used: 1
 11737 ;; This function calls:
 11738 ;;		Nothing
 11739 ;; This function is called by:
 11740 ;;		_led_ind_blink_handler
 11741 ;; This function uses a non-reentrant model
 11742 ;;
 11743                           
 11744  1FA2                     _led_ind_toggle:	
 11745                           ;psect for function _led_ind_toggle
 11746                           
 11747                           
 11748                           ;led_ind.c: 37:     PORTBbits.RB5 ^= 1;
 11749                           
 11750                           ;incstack = 0
 11751                           ; Regs used in _led_ind_toggle: [wreg+status,2+status,0]
 11752  1FA2  0E06               	swapf	6,w	;volatile
 11753  1FA3  00F0               	movwf	??_led_ind_toggle
 11754  1FA4  0C70               	rrf	??_led_ind_toggle,w
 11755  1FA5  3901               	andlw	1
 11756  1FA6  00F0               	movwf	??_led_ind_toggle
 11757  1FA7  3001               	movlw	1
 11758  1FA8  06F0               	xorwf	??_led_ind_toggle,f
 11759  1FA9  0EF0               	swapf	??_led_ind_toggle,f
 11760  1FAA  0DF0               	rlf	??_led_ind_toggle,f
 11761  1FAB  0806               	movf	6,w	;volatile
 11762  1FAC  0670               	xorwf	??_led_ind_toggle,w
 11763  1FAD  39DF               	andlw	-33
 11764  1FAE  0670               	xorwf	??_led_ind_toggle,w
 11765  1FAF  0086               	movwf	6	;volatile
 11766  1FB0  0008               	return
 11767  1FB1                     __end_of_led_ind_toggle:
 11768                           
 11769                           	psect	text69
 11770  1097                     __ptext69:	
 11771 ;; *************** function _button_handler *****************
 11772 ;; Defined at:
 11773 ;;		line 56 in file "main.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2, status,0, pclath, cstack
 11782 ;; Tracked objects:
 11783 ;;		On entry : 300/0
 11784 ;;		On exit  : 200/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11787 ;;      Params:         0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0
 11789 ;;      Temps:          1       0       0       0       0
 11790 ;;      Totals:         1       0       0       0       0
 11791 ;;Total ram usage:        1 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; Hardware stack levels required when called: 1
 11794 ;; This function calls:
 11795 ;;		_xEventGroupSetBits
 11796 ;; This function is called by:
 11797 ;;		_button_init
 11798 ;;		_ISR
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802  1097                     _button_handler:	
 11803                           ;psect for function _button_handler
 11804                           
 11805                           
 11806                           ;main.c: 57:     if (!PORTBbits.RB1) {
 11807                           
 11808                           ;incstack = 0
 11809                           ; Regs used in _button_handler: [wreg+status,2+status,0+pclath+cstack]
 11810  1097  1886               	btfsc	6,1	;volatile
 11811  1098  0008               	return
 11812                           
 11813                           ;main.c: 58:         PORTDbits.RD2 ^= 1;
 11814  1099  0C08               	rrf	8,w	;volatile
 11815  109A  00F2               	movwf	??_button_handler
 11816  109B  0C72               	rrf	??_button_handler,w
 11817  109C  3901               	andlw	1
 11818  109D  00F2               	movwf	??_button_handler
 11819  109E  3001               	movlw	1
 11820  109F  06F2               	xorwf	??_button_handler,f
 11821  10A0  0DF2               	rlf	??_button_handler,f
 11822  10A1  0DF2               	rlf	??_button_handler,f
 11823  10A2  0808               	movf	8,w	;volatile
 11824  10A3  0672               	xorwf	??_button_handler,w
 11825  10A4  39FB               	andlw	-5
 11826  10A5  0672               	xorwf	??_button_handler,w
 11827  10A6  0088               	movwf	8	;volatile
 11828                           
 11829                           ;main.c: 59:         xEventGroupSetBits((1 << 2));
 11830  10A7  3004               	movlw	4
 11831  10A8  160A  158A  277A   	fcall	_xEventGroupSetBits
 11832  10AB  0008               	return
 11833  10AC                     __end_of_button_handler:
 11834                           
 11835                           	psect	text70
 11836  1F2F                     __ptext70:	
 11837 ;; *************** function _ade_zx_handler *****************
 11838 ;; Defined at:
 11839 ;;		line 25 in file "ade7753.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;		None
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		wreg, status,2, status,0, pclath, cstack
 11848 ;; Tracked objects:
 11849 ;;		On entry : 300/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11853 ;;      Params:         0       0       0       0       0
 11854 ;;      Locals:         0       0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0
 11856 ;;      Totals:         0       0       0       0       0
 11857 ;;Total ram usage:        0 bytes
 11858 ;; Hardware stack levels used: 1
 11859 ;; Hardware stack levels required when called: 2
 11860 ;; This function calls:
 11861 ;;		Absolute function
 11862 ;;		_ade_zx_cb_handler
 11863 ;; This function is called by:
 11864 ;;		_ade_config
 11865 ;;		_ISR
 11866 ;; This function uses a non-reentrant model
 11867 ;;
 11868                           
 11869  1F2F                     _ade_zx_handler:	
 11870                           ;psect for function _ade_zx_handler
 11871                           
 11872                           
 11873                           ;ade7753.c: 26:     if (_ade_zx_cb != (0)) _ade_zx_cb();
 11874                           
 11875                           ;incstack = 0
 11876                           ; Regs used in _ade_zx_handler: [wreg+status,2+status,0+pclath+cstack]
 11877  1F2F  0866               	movf	__ade_zx_cb,w
 11878  1F30  1903               	btfsc	3,2
 11879  1F31  0008               	return
 11880  1F32  0866               	movf	__ade_zx_cb,w
 11881  1F33  120A  118A  2046   	fcall	i1fptable
 11882  1F36  0008               	return
 11883  1F37                     __end_of_ade_zx_handler:
 11884                           
 11885                           	psect	text71
 11886  1F20                     __ptext71:	
 11887 ;; *************** function _ade_zx_cb_handler *****************
 11888 ;; Defined at:
 11889 ;;		line 99 in file "main.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;		None
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;		None
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  1    wreg      void 
 11896 ;; Registers used:
 11897 ;;		wreg, status,2, status,0, pclath, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 300/0
 11900 ;;		On exit  : 300/100
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11903 ;;      Params:         0       0       0       0       0
 11904 ;;      Locals:         0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0
 11906 ;;      Totals:         0       0       0       0       0
 11907 ;;Total ram usage:        0 bytes
 11908 ;; Hardware stack levels used: 1
 11909 ;; Hardware stack levels required when called: 1
 11910 ;; This function calls:
 11911 ;;		_xEventGroupSetBits
 11912 ;; This function is called by:
 11913 ;;		_main
 11914 ;;		_ade_zx_handler
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918  1F20                     _ade_zx_cb_handler:	
 11919                           ;psect for function _ade_zx_cb_handler
 11920                           
 11921                           
 11922                           ;main.c: 100:     xEventGroupSetBits((1 << 1));
 11923                           
 11924                           ;incstack = 0
 11925                           ; Regs used in _ade_zx_cb_handler: [wreg+status,2+status,0+pclath+cstack]
 11926  1F20  3002               	movlw	2
 11927  1F21  160A  158A  277A   	fcall	_xEventGroupSetBits
 11928  1F24  0008               	return
 11929  1F25                     __end_of_ade_zx_cb_handler:
 11930                           
 11931                           	psect	text72
 11932  1F7A                     __ptext72:	
 11933 ;; *************** function _xEventGroupSetBits *****************
 11934 ;; Defined at:
 11935 ;;		line 19 in file "event_groups.c"
 11936 ;; Parameters:    Size  Location     Type
 11937 ;;  uxBitsToSet     1    wreg     const unsigned char 
 11938 ;; Auto vars:     Size  Location     Type
 11939 ;;  uxBitsToSet     1    1[COMMON] const unsigned char 
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  1    wreg      unsigned char 
 11942 ;; Registers used:
 11943 ;;		wreg, status,2, status,0
 11944 ;; Tracked objects:
 11945 ;;		On entry : 0/800
 11946 ;;		On exit  : 300/100
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11949 ;;      Params:         0       0       0       0       0
 11950 ;;      Locals:         1       0       0       0       0
 11951 ;;      Temps:          1       0       0       0       0
 11952 ;;      Totals:         2       0       0       0       0
 11953 ;;Total ram usage:        2 bytes
 11954 ;; Hardware stack levels used: 1
 11955 ;; This function calls:
 11956 ;;		Nothing
 11957 ;; This function is called by:
 11958 ;;		_button_handler
 11959 ;;		_znp_msg_handler
 11960 ;;		_ade_zx_cb_handler
 11961 ;; This function uses a non-reentrant model
 11962 ;;
 11963                           
 11964  1F7A                     _xEventGroupSetBits:	
 11965                           ;psect for function _xEventGroupSetBits
 11966                           
 11967                           
 11968                           ;incstack = 0
 11969 ;; hardware stack exceeded
 11970                           ; Regs used in _xEventGroupSetBits: [wreg+status,2+status,0]
 11971                           ;xEventGroupSetBits@uxBitsToSet stored from wreg
 11972  1F7A  00F1               	movwf	xEventGroupSetBits@uxBitsToSet
 11973  1F7B                     i1l546:	
 11974                           ;event_groups.c: 20:     do {
 11975                           
 11976                           
 11977                           ;event_groups.c: 21:         uxBits |= uxBitsToSet;
 11978  1F7B  0871               	movf	xEventGroupSetBits@uxBitsToSet,w
 11979  1F7C  00F0               	movwf	??_xEventGroupSetBits
 11980  1F7D  0870               	movf	??_xEventGroupSetBits,w
 11981  1F7E  1683               	bsf	3,5	;RP0=1, select bank1
 11982  1F7F  1303               	bcf	3,6	;RP1=0, select bank1
 11983  1F80  04E7               	iorwf	_uxBits^(0+128),f
 11984                           
 11985                           ;event_groups.c: 22:     } while ((uxBits & uxBitsToSet) != uxBitsToSet);
 11986  1F81  0867               	movf	_uxBits^(0+128),w
 11987  1F82  0571               	andwf	xEventGroupSetBits@uxBitsToSet,w
 11988  1F83  0671               	xorwf	xEventGroupSetBits@uxBitsToSet,w
 11989  1F84  1903               	btfsc	3,2
 11990  1F85  0008               	return
 11991  1F86  2F7B               	goto	i1l546
 11992  1F87                     __end_of_xEventGroupSetBits:
 11993  000E                     
 11994                           	psect	functab
 11995  0045                     __pfunctab:
 11996  0045                     fptable:
 11997  0045  2845               	goto	fptable	;no entries
 11998  0046                     __i1fptable:
 11999  0046                     i1fptable:
 12000  0046  00FF               	movwf	(btemp+1)& (0+127)
 12001  0047  3000               	movlw	high i1fptable
 12002  0048  008A               	movwf	10
 12003  0049  087F               	movf	(btemp+1)& (0+127),w
 12004  004A  0782               	addwf	2,f
 12005  004B                     i1fpbase:
 12006  004B  284B               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
 12007  004C                     fp__ade_zx_cb_handler:
 12008  004C  160A  158A  2F20   	ljmp	_ade_zx_cb_handler
 12009  004F                     fp__ade_zx_handler:
 12010  004F  160A  158A  2F2F   	ljmp	_ade_zx_handler
 12011  0052                     fp__button_handler:
 12012  0052  160A  118A  2897   	ljmp	_button_handler
 12013  0055                     fp__led_ind_blink_handler:
 12014  0055  160A  158A  2F14   	ljmp	_led_ind_blink_handler
 12015  0058                     fp__sys_tick_handler:
 12016  0058  120A  158A  29B7   	ljmp	_sys_tick_handler
 12017  005B                     fp__znp_msg_handler:
 12018  005B  160A  118A  2B2A   	ljmp	_znp_msg_handler
 12019  005E                     fp__znp_usart_event_handler:
 12020  005E  160A  118A  2957   	ljmp	_znp_usart_event_handler
 12021  0061                     __end_of__i1fptable:
 12022  007E                     btemp	set	126	;btemp
 12023  007E                     wtemp0	set	126
 12024                           
 12025                           	psect	config
 12026                           
 12027                           ;Config register CONFIG1 @ 0x2007
 12028                           ;	Oscillator Selection bits
 12029                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 12030                           ;	Watchdog Timer Enable bit
 12031                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12032                           ;	Power-up Timer Enable bit
 12033                           ;	PWRTE = OFF, PWRT disabled
 12034                           ;	RE3/MCLR pin function select bit
 12035                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 12036                           ;	Code Protection bit
 12037                           ;	CP = OFF, Program memory code protection is disabled
 12038                           ;	Data Code Protection bit
 12039                           ;	CPD = OFF, Data memory code protection is disabled
 12040                           ;	Brown Out Reset Selection bits
 12041                           ;	BOREN = OFF, BOR disabled
 12042                           ;	Internal External Switchover bit
 12043                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12044                           ;	Fail-Safe Clock Monitor Enabled bit
 12045                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12046                           ;	Low Voltage Programming Enable bit
 12047                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12048                           ;	In-Circuit Debugger Mode bit
 12049                           ;	DEBUG = 0x1, unprogrammed default
 12050  2007                     	org	8199
 12051  2007  24F4               	dw	9460
 12052                           
 12053                           ;Config register CONFIG2 @ 0x2008
 12054                           ;	Brown-out Reset Selection bit
 12055                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12056                           ;	Flash Program Memory Self Write Enable bits
 12057                           ;	WRT = OFF, Write protection off
 12058  2008                     	org	8200
 12059  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      71
    BANK1            80     71      77
    BANK3            96     12      88
    BANK2            96      0      30

Pointer List with Targets:

    handler$1	PTR void  size(1) Largest target is 1
		 -> ISR@c(BANK0[1]), NULL(NULL[0]), 

    callback$1	PTR unsigned char  size(1) Largest target is 30
		 -> znp_data_rcv(BANK2[30]), 

    _zb_znp_cb$1	PTR unsigned char  size(1) Largest target is 30
		 -> znp_data_rcv(BANK2[30]), 

    _usart_rx_isr$1	PTR void  size(1) Largest target is 1
		 -> ISR@c(BANK0[1]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 13
		 -> dev_data(BANK3[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> dev_data(BANK3[13]), 

    sys_tick_register_callback_handler@cb	PTR FTN()void  size(1) Largest target is 1
		 -> led_ind_blink_handler(), 

    S1630$cb	PTR FTN()void  size(1) Largest target is 1
		 -> led_ind_blink_handler(), 

    _sys_tick._handle.cb	PTR FTN()void  size(1) Largest target is 1
		 -> led_ind_blink_handler(), 

    znp_af_data_request@data	PTR unsigned char  size(1) Largest target is 13
		 -> dev_data(BANK3[13]), NULL(NULL[0]), 

    znp_init@callback	PTR FTN(unsigned int ,PTR unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> znp_msg_handler(), 

    znp_usart_event_handler@event_data	PTR void  size(1) Largest target is 1
		 -> ISR@c(BANK0[1]), NULL(NULL[0]), 

    _zb_znp_cb	PTR FTN(unsigned int ,PTR unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> znp_msg_handler(), Absolute function(), 

    sp__memset	PTR void  size(1) Largest target is 13
		 -> dev_data(BANK3[13]), 

    znp_send_msg@data	PTR unsigned char  size(1) Largest target is 13
		 -> dev_data(BANK3[13]), NULL(NULL[0]), 

    znp_msg_handler@data	PTR unsigned char  size(1) Largest target is 30
		 -> znp_data_rcv(BANK2[30]), 

    ade_cfg.zx_cb	PTR FTN()void  size(1) Largest target is 1
		 -> ade_zx_cb_handler(), Absolute function(), 

    _ioc_rb7_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    _ioc_rb6_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    _ioc_rb5_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    _ioc_rb4_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    _ioc_rb3_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    _ioc_rb2_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    ioc_rb1_add_isr_handler@handler	PTR FTN()void  size(1) Largest target is 1
		 -> button_handler(), 

    _ioc_rb1_isr	PTR FTN()void  size(1) Largest target is 1
		 -> button_handler(), Absolute function(), 

    ex_int_add_isr_handler@handler	PTR FTN()void  size(1) Largest target is 1
		 -> ade_zx_handler(), 

    _ex_int_isr	PTR FTN()void  size(1) Largest target is 1
		 -> ade_zx_handler(), Absolute function(), 

    _tmr2_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    timer1_add_isr_handler@handler	PTR FTN()void  size(1) Largest target is 1
		 -> sys_tick_handler(), 

    _tmr1_isr	PTR FTN()void  size(1) Largest target is 1
		 -> sys_tick_handler(), Absolute function(), 

    usart_add_isr_handler@handler	PTR FTN(enum E1502,PTR void ,)void  size(1) Largest target is 1
		 -> znp_usart_event_handler(), 

    _usart_rx_isr	PTR FTN(enum E1502,PTR void ,)void  size(1) Largest target is 1
		 -> znp_usart_event_handler(), Absolute function(), 

    ade_get_power_meter_data@pData	PTR struct . size(1) Largest target is 13
		 -> dev_data(BANK3[13]), 

    S130$zx_cb	PTR FTN()void  size(1) Largest target is 1
		 -> ade_zx_cb_handler(), Absolute function(), 

    ade_config@config.zx_cb	PTR FTN()void  size(1) Largest target is 1
		 -> ade_zx_cb_handler(), Absolute function(), 

    ade_config@config	PTR struct . size(1) Largest target is 15
		 -> ade_cfg(BANK3[15]), 

    _ade_zx_cb	PTR FTN()void  size(1) Largest target is 1
		 -> ade_zx_cb_handler(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_sys_tick_handler
    _ISR->_znp_usart_event_handler
    _znp_usart_event_handler->_znp_frame_parser
    _znp_frame_parser->_znp_msg_handler
    _znp_msg_handler->_xEventGroupSetBits
    _sys_tick_handler->i1___bmul
    _led_ind_blink_handler->_led_ind_toggle
    _button_handler->_xEventGroupSetBits
    _ade_zx_cb_handler->_xEventGroupSetBits

Critical Paths under _main in BANK0

    _znp_send_msg->_znp_af_data_request
    _znp_af_data_request->_wait_for_status
    _znp_router_start->_znp_af_register
    _znp_router_start->_znp_set_logical_type
    _znp_router_start->_znp_set_startopt
    _znp_zdo_startup_from_app->_wait_for_msg
    _znp_set_startopt->_wait_for_status
    _znp_hard_reset->_wait_for_msg
    _znp_set_logical_type->_wait_for_status
    _znp_set_channels->_wait_for_status
    _znp_af_register->_wait_for_status
    _wait_for_status->_wait_for_msg
    _znp_init->_usart_add_isr_handler
    _xEventGroupWaitBits->_sys_tick_get_tick
    _sys_tick_init->_timer1_add_isr_handler
    _led_ind_init->_sys_tick_register_callback_handler
    _sys_tick_register_callback_handler->___bmul
    _led_ind_blink_stop->_sys_tick_stop
    _sys_tick_stop->___bmul
    _led_ind_blink_start->_sys_tick_start_periodic
    _sys_tick_start_periodic->___bmul
    _button_init->_ioc_rb1_add_isr_handler
    _ade_init->_ade_reset
    _ade_get_power_meter_data->___fladd
    _ade_get_VRMS->_ade_read
    _ade_get_PERIOD->_ade_read
    _ade_get_LAENERGY->_ade_signed_value
    _ade_signed_value->_ade_read
    _ade_get_IRMS->_ade_read
    ___xxtofl->___wmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___flmul
    _ade_config->_ade_set_GAIN
    _ade_set_LINECYC->_ade_write
    _ade_set_GAIN->_ade_write
    _ade_write->___bmul
    _ade_read->_spi_transfer

Critical Paths under _ISR in BANK0

    _ISR->_sys_tick_handler

Critical Paths under _main in BANK1

    _main->_ade_get_power_meter_data
    _ade_get_power_meter_data->___fladd
    ___fladd->___fldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   48655
                                              0 BANK3     12    12      0
                         _ade_config
           _ade_get_power_meter_data
                           _ade_init
                        _button_init
                        _eeprom_read
                       _eeprom_write
                _led_ind_blink_start
                 _led_ind_blink_stop
                       _led_ind_init
                        _led_ind_off
                         _led_ind_on
                             _memset
                         _relay_init
                  _sys_tick_get_tick
                      _sys_tick_init
               _xEventGroupClearBits
                  _xEventGroupCreate
                 _xEventGroupGetBits
                _xEventGroupWaitBits
                           _znp_init
                   _znp_router_start
                       _znp_send_msg
 ---------------------------------------------------------------------------------
 (1) _znp_send_msg                                         7     6      1    4037
                                             26 BANK0      7     6      1
                _znp_af_data_request
 ---------------------------------------------------------------------------------
 (2) _znp_af_data_request                                 11     6      5    3454
                                             15 BANK0     11     6      5
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (1) _znp_router_start                                     3     3      0   10633
                                             16 BANK0      3     3      0
                    _znp_af_register
                     _znp_hard_reset
                   _znp_set_channels
               _znp_set_logical_type
                   _znp_set_startopt
           _znp_zdo_startup_from_app
 ---------------------------------------------------------------------------------
 (2) _znp_zdo_startup_from_app                             0     0      0     374
                         _usart_send
                       _wait_for_msg
 ---------------------------------------------------------------------------------
 (2) _znp_set_startopt                                     1     1      0    2744
                                             15 BANK0      1     1      0
                         _usart_send
                    _wait_for_status
                     _znp_hard_reset
 ---------------------------------------------------------------------------------
 (3) _znp_hard_reset                                       2     2      0     343
                                             11 BANK0      2     2      0
                       _wait_for_msg
 ---------------------------------------------------------------------------------
 (2) _znp_set_logical_type                                 1     1      0    2401
                                             15 BANK0      1     1      0
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (2) _znp_set_channels                                     0     0      0    2339
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (2) _znp_af_register                                      1     1      0    2401
                                             15 BANK0      1     1      0
                         _usart_send
                    _wait_for_status
 ---------------------------------------------------------------------------------
 (3) _wait_for_status                                      4     0      4    2308
                                             11 BANK0      4     0      4
                       _wait_for_msg
 ---------------------------------------------------------------------------------
 (4) _wait_for_msg                                         2     0      2     343
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _usart_send                                           1     1      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _znp_init                                             2     2      0      62
                                             11 BANK0      2     2      0
              _usart_add_isr_handler
                         _usart_init
 ---------------------------------------------------------------------------------
 (2) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _usart_add_isr_handler                                2     2      0      31
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _xEventGroupWaitBits                                 13     9      4     335
                                             13 BANK0     13     9      4
                  _sys_tick_get_tick
 ---------------------------------------------------------------------------------
 (2) _sys_tick_get_tick                                    4     0      4       0
                                              9 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _xEventGroupGetBits                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _xEventGroupCreate                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _xEventGroupClearBits                                 2     2      0      62
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _sys_tick_init                                        0     0      0      31
             _timer1_add_isr_handler
 ---------------------------------------------------------------------------------
 (2) _timer1_add_isr_handler                               2     2      0      31
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _relay_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     384
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _led_ind_init                                         1     1      0     984
                                             17 BANK0      1     1      0
                         _led_ind_on
 _sys_tick_register_callback_handler
 ---------------------------------------------------------------------------------
 (2) _sys_tick_register_callback_handler                   4     4      0     984
                                             13 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _led_ind_on                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_ind_blink_stop                                   0     0      0     894
                        _led_ind_off
                      _sys_tick_stop
 ---------------------------------------------------------------------------------
 (2) _sys_tick_stop                                        4     4      0     894
                                             13 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _led_ind_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_ind_blink_start                                  0     0      0    1122
            _sys_tick_start_periodic
 ---------------------------------------------------------------------------------
 (2) _sys_tick_start_periodic                              8     4      4    1122
                                             13 BANK0      8     4      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1     270
                                              9 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _button_init                                          0     0      0      31
            _ioc_rb1_add_isr_handler
 ---------------------------------------------------------------------------------
 (2) _ioc_rb1_add_isr_handler                              2     2      0      31
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ade_init                                             0     0      0       0
                          _ade_reset
                    _spi_master_init
 ---------------------------------------------------------------------------------
 (2) _spi_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ade_reset                                            2     2      0       0
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ade_get_power_meter_data                            29    29      0   20225
                                             42 BANK1     29    29      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                             ___wmul
                           ___xxtofl
                       _ade_get_IRMS
                   _ade_get_LAENERGY
                     _ade_get_PERIOD
                       _ade_get_VRMS
 ---------------------------------------------------------------------------------
 (2) _ade_get_VRMS                                         4     1      3     690
                                             24 BANK0      4     1      3
                           _ade_read
 ---------------------------------------------------------------------------------
 (2) _ade_get_PERIOD                                       3     1      2     690
                                             24 BANK0      3     1      2
                           _ade_read
 ---------------------------------------------------------------------------------
 (2) _ade_get_LAENERGY                                     4     2      2    1127
                                             41 BANK0      4     2      2
                           _ade_read
                   _ade_signed_value
 ---------------------------------------------------------------------------------
 (3) _ade_signed_value                                    17    12      5     437
                                             24 BANK0     17    12      5
                           _ade_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _ade_get_IRMS                                         4     1      3     690
                                             24 BANK0      4     1      3
                           _ade_read
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1100
                                             15 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3656
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4550
                                             29 BANK0     26    18      8
                          __Umul8_16
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2    1106
                                              9 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     682
                                              9 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2307
                                              0 BANK1     26    18      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3942
                                             55 BANK0      4     4      0
                                             26 BANK1     16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ade_config                                           5     5      0    9480
                                             33 BANK0      5     5      0
                           _ade_read
                       _ade_set_GAIN
                    _ade_set_LINECYC
                          _ade_write
             _ex_int_add_isr_handler
 ---------------------------------------------------------------------------------
 (2) _ex_int_add_isr_handler                               2     2      0      31
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ade_set_LINECYC                                      3     1      2    2857
                                             28 BANK0      3     1      2
                          _ade_write
 ---------------------------------------------------------------------------------
 (2) _ade_set_GAIN                                         5     5      0    2722
                                             28 BANK0      5     5      0
                          _ade_write
 ---------------------------------------------------------------------------------
 (2) _ade_write                                           15    10      5    2691
                                             13 BANK0     15    10      5
                             ___bmul
                       _spi_transfer
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     764
                                              9 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _ade_read                                            14    10      4     690
                                             10 BANK0     14    10      4
                       _spi_transfer
 ---------------------------------------------------------------------------------
 (4) _spi_transfer                                         1     1      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  8     8      0    1869
                                              1 BANK0      8     8      0
                   Absolute function *
                     _ade_zx_handler *
                     _button_handler *
                   _sys_tick_handler *
            _znp_usart_event_handler *
 ---------------------------------------------------------------------------------
 (6) _znp_usart_event_handler                              4     2      2     910
                                             10 COMMON     4     2      2
                   _znp_frame_parser
 ---------------------------------------------------------------------------------
 (7) _znp_frame_parser                                     3     3      0     610
                                              7 COMMON     3     3      0
                   Absolute function *
                    _znp_msg_handler *
 ---------------------------------------------------------------------------------
 (8) _znp_msg_handler                                      5     1      4     390
                                              2 COMMON     5     1      4
                 _xEventGroupSetBits
 ---------------------------------------------------------------------------------
 (6) _sys_tick_handler                                    11    11      0     505
                                              4 COMMON    10    10      0
                                              0 BANK0      1     1      0
              _led_ind_blink_handler *
                           i1___bmul
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     220
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _led_ind_blink_handler                                0     0      0       0
                     _led_ind_toggle
 ---------------------------------------------------------------------------------
 (8) _led_ind_toggle                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _button_handler                                       1     1      0      66
                                              2 COMMON     1     1      0
                 _xEventGroupSetBits
 ---------------------------------------------------------------------------------
 (6) _ade_zx_handler                                       0     0      0      66
                   Absolute function *
                  _ade_zx_cb_handler *
 ---------------------------------------------------------------------------------
 (7) _ade_zx_cb_handler                                    0     0      0      66
                 _xEventGroupSetBits
 ---------------------------------------------------------------------------------
 (9) _xEventGroupSetBits                                   2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ade_config
     _ade_read
       _spi_transfer
     _ade_set_GAIN
       _ade_write
         ___bmul
         _spi_transfer
     _ade_set_LINECYC
       _ade_write
     _ade_write
     _ex_int_add_isr_handler
   _ade_get_power_meter_data
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flge
     ___flmul
     ___wmul
     ___xxtofl
     _ade_get_IRMS
       _ade_read
     _ade_get_LAENERGY
       _ade_read
       _ade_signed_value
         _ade_read (ARG)
     _ade_get_PERIOD
       _ade_read
     _ade_get_VRMS
       _ade_read
   _ade_init
     _ade_reset
     _spi_master_init
   _button_init
     _ioc_rb1_add_isr_handler
   _eeprom_read
   _eeprom_write
   _led_ind_blink_start
     _sys_tick_start_periodic
       ___bmul
   _led_ind_blink_stop
     _led_ind_off
     _sys_tick_stop
       ___bmul
   _led_ind_init
     _led_ind_on
     _sys_tick_register_callback_handler
       ___bmul
   _led_ind_off
   _led_ind_on
   _memset
   _relay_init
   _sys_tick_get_tick
   _sys_tick_init
     _timer1_add_isr_handler
   _xEventGroupClearBits
   _xEventGroupCreate
   _xEventGroupGetBits
   _xEventGroupWaitBits
     _sys_tick_get_tick
   _znp_init
     _usart_add_isr_handler
     _usart_init
   _znp_router_start
     _znp_af_register
       _usart_send
       _wait_for_status
         _wait_for_msg
     _znp_hard_reset
       _wait_for_msg
     _znp_set_channels
       _usart_send
       _wait_for_status
     _znp_set_logical_type
       _usart_send
       _wait_for_status
     _znp_set_startopt
       _usart_send
       _wait_for_status
       _znp_hard_reset
     _znp_zdo_startup_from_app
       _usart_send
       _wait_for_msg
   _znp_send_msg
     _znp_af_data_request
       _usart_send
       _wait_for_status

 _ISR (ROOT)
   Absolute function(Fake) *
   _ade_zx_handler *
     Absolute function(Fake) *
     _ade_zx_cb_handler *
       _xEventGroupSetBits
   _button_handler *
     _xEventGroupSetBits
   _sys_tick_handler *
     _led_ind_blink_handler *
       _led_ind_toggle
     i1___bmul *
   _znp_usart_event_handler *
     _znp_frame_parser
       Absolute function(Fake) *
       _znp_msg_handler *
         _xEventGroupSetBits

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      C      58       9       91.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      1E      11       31.2%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     47      4D       7       96.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3B      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     118      12        0.0%
ABS                  0      0     118       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Dec 01 14:24:18 2022

                              ??_znp_frame_parser 0077                                      ___fldiv@aexp 00B9  
                                    ___fldiv@bexp 00B8                                                 pc 0002  
                                    ___fldiv@sign 00B1                                    ___bmul@product 002B  
                                     _SSPSTATbits 0094                                                l65 12DB  
                                              l59 1328                                      ?_led_ind_off 0070  
                           wait_for_status@offset 002D                                                fsr 0004  
                             ___wmul@multiplicand 002B                                  ??_button_handler 0072  
                             __Umul8_16@word_mpld 002F                                 ??_wait_for_status 002F  
                                             l416 1F38                                               l601 1277  
                                             l460 1085                                               l551 1003  
                                             l395 1F4A                                               l902 16E4  
                                             l718 11F8                                               l728 11BD  
                                             l905 174A                                               l594 14D0  
                                             l698 110B                                               _ISR 15BB  
                                   ?_led_ind_init 0070                   __end_of_ioc_rb1_add_isr_handler 1F7A  
                                             fsr0 0004                                               indf 0000  
                        ?_znp_usart_event_handler 007A                            __end_of_led_ind_toggle 1FB1  
                      ??_ade_get_power_meter_data 005B                                      ___flmul@aexp 004B  
                                    ___flmul@bexp 004C                                      ___flmul@sign 004A  
                                    ___flmul@temp 0055                                      ___flmul@prod 0051  
                                            ?_ISR 0070                                              ISR@c 0026  
                          znp_af_data_request@len 0032                                              l1021 0DD3  
                                            l1101 07AF                                              l1025 0E96  
                                            l1042 0F5C                                              l1027 0E6D  
                                            l1046 0F7F                                              l1063 0FF1  
                                            l1055 0FD4                                              l1136 11E6  
                                            l1129 0349                                              l1161 177A  
                                            l1077 0662                                              l1174 17D0  
                                            l1175 17DA                                              l1167 17BA  
                                            l1099 07A1                                              l5100 17CE  
                                            l5030 029B                                              l5102 17BF  
                                            l5032 02B8                                              l4322 12B7  
                                            l4306 12EF                                              l5042 02D1  
                                            l5114 17F7                                              l5202 058A  
                                            l5140 0AC4                                              l5052 0303  
                                            l4260 1F63                                              l5300 138F  
                                            l4500 098F                                              l4270 1037  
                                            l5062 0332                                              l5038 02CF  
                                            l5310 0819                                              l5302 139F  
                                            l4502 09A4                                              l5056 0319  
                                            l5080 1772                                              l4424 14CC  
                                            l5240 1140                                              l5232 1260  
                                            l4266 1031                                              l5090 178D  
                                            l5170 03A9                                              l4612 0D92  
                                            l4348 11DE                                              l5092 179F  
                                            l4284 156B                                              l5316 0824  
                                            l4710 0ECA                                              l4702 0EA5  
                                            l4630 0DB6                                              l4606 0D82  
                                            l5086 1789                                              l4286 159F  
                                            l5166 039D                                              l4438 1538  
                                            l4462 0909                                              l4712 0ECC  
                                            l4720 0EE1                                              l4640 0DCA  
                                            l4616 0D96                                              l5184 04A2  
                                            l4448 12A1                                              l4464 091C  
                                            l5432 0B94                                              l4730 0F4E  
                                            l4618 0D9F                                              l4810 0634  
                                            l5178 0422                                              l4716 0ED1  
                                            l4636 0DC6                                              l4812 063C  
                                            l5196 057B                                              l5188 04D0  
                                            l5460 0BE6                                              l4646 0DE0  
                                            l4902 073C                                              l4830 065A  
                                            l4806 0631                                              l4566 11B5  
                                            l5294 1378                                              l4760 0F99  
                                            l4752 0F8B                                              l4912 076E  
                                            l4840 0681                                              l4584 16FE  
                                            l5296 1389                                              l5472 0C41  
                                            l5456 0BDB                                              l4746 0F84  
                                            l4738 0F71                                              l4754 0F8E  
                                            l4690 0E81                                              l4826 0657  
                                            l5618 1397                                              l5490 0D0F  
                                            l4764 0F9C                                              l4684 0E7A  
                                            l4676 0E33                                              l4916 0787  
                                            l4588 1724                                              l5476 0C89  
                                            l4782 0FE7                                              l4686 0E7C  
                                            l4694 0E90                                              l4846 068D  
                                            l4950 007E                                              l4928 07AB  
                                            l4872 06FB                                              l4952 0086  
                                            l5488 0CD1                                              l4786 0FEC  
                                            l4890 0706                                              l4866 06DC  
                                            l4874 06B8                                              l4970 00AB  
                                            l5498 0D48                                              l4892 0723  
                                            l4876 0700                                              l4948 007C  
                                            l4966 00A1                                              l4968 00A3  
                                            l4898 073A                                              l4978 00B9  
                                            _IOCB 0096                                              u5101 0F0D  
                                            u5005 0E84                                              u5110 0F21  
                                            u5102 0F0E                                              u5111 0F22  
                                            u5103 0F13                                              u5112 0F27  
                                            u5104 0F14                                              u5113 0F28  
                                            u5105 0F19                                              u5106 0F1A  
                                            u6005 1796                                              u6025 17B2  
                                            u5155 0F73                                              u4524 1551  
                                            u5093 0EF4                                              u5085 0ED4  
                                            u6045 17C7                                              u4525 154E  
                                            u6301 0838                                              u6302 0839  
                                            u5255 0FBB                                              u5415 06C1  
                                            u6303 083E                                              u4544 1587  
                                            u6304 083F                                              u5505 0715  
                                            u5425 06CA                                              u4545 1584  
                                            u6305 0844                                              u4570 1316  
                                            u6306 0845                                              u4555 1579  
                                            u6315 0853                                              u4565 12FE  
                                            u5445 06D5                                              u4821 170F  
                                            u4645 11E7                                              u6085 17E2  
                                            u4822 1710                                              u4575 1311  
                                            u5455 06EA                                              u4823 1715  
                                            u6175 040F                                              u4495 1F69  
                                            u4824 1716                                              u4841 1735  
                                            u4825 171B                                              u6281 1109  
                                            u4842 1736                                              u4826 171C  
                                            u4595 12BD                                              u4843 173B  
                                            u6531 0C6D                                              u4844 173C  
                                            u6532 0C6E                                              u5485 070A  
                                            u4845 1741                                              u5805 0250  
                                            u4765 11BE                                              u6533 0C73  
                                            u4846 1742                                              u6534 0C74  
                                            u5575 0759                                              u5735 0163  
                                            u4775 11C5                                              u6607 0D54  
                                            u6551 0CF3                                              u6543 0C87  
                                            u6535 0C79                                              u4960 0E57  
                                            u6552 0CF4                                              u6536 0C7A  
                                            u5585 0777                                              u6617 10DD  
                                            u6553 0CF9                                              u4970 0E58  
                                            u6554 0CFA                                              u4955 0E4B  
                                            u5595 0792                                              u5835 0287  
                                            u6627 10F4                                              u6563 0D0D  
                                            u6555 0CFF                                              u6556 0D00  
                                            u5845 029F                                              u5765 01BC  
                                            u6637 1101                                              u5935 02EE  
                                            u5945 030C                                              u5865 02AA  
                                            u5955 0324                                              u6587 0BA6  
                                            u6597 0D3E                          __end_of_znp_set_channels 16CA  
                                            _TMR0 0001                                              _TMR1 000E  
                                  ??_eeprom_write 002A                                 ?_ade_get_LAENERGY 0049  
                                            _main 0B70                                              btemp 007E  
                              ??_ade_get_LAENERGY 004B                    __end_of_timer1_add_isr_handler 080A  
                                            start 0012                                  _znp_router_start 1370  
                        _znp_zdo_startup_from_app 121B                                   ___fldiv@new_exp 00B2  
                               ___bmul@multiplier 002C                          znp_set_startopt@startopt 002F  
                                           ??_ISR 0021                      usart_add_isr_handler@handler 002A  
                         znp_af_data_request@data 0031                                   __end_of___fladd 1000  
                                  ??_led_ind_init 0031                                             ?_main 0070  
                           ade_signed_value@value 0038                                   __end_of___fldiv 07B7  
                                           _EEADR 010D                                   __end_of___flmul 0356  
                                           _ANSEL 0188                                             i1l223 1630  
                                           i1l190 15C1                                             i1l354 136F  
                                           i1l348 1349                                             i1l481 0902  
                                           i1l546 1F7B                                             i1l489 1174  
                             sys_tick_stop@handle 002F                                             _RCREG 001A  
                                           _SPBRG 0099                                             _PORTB 0006  
                                _ade_signed_value 153D                                             _TRISB 0086  
                                           _TXREG 0019                          __end_of_znp_set_startopt 1403  
                                    ?_button_init 0070                           __end_of_ade_set_LINECYC 113B  
                                    _ade_get_IRMS 1FC0                                   ?_led_ind_toggle 0070  
                                    _ade_get_VRMS 1FD0                        __end_of_led_ind_blink_stop 1F63  
                                           fpbase 0000                                  __end_ofi1___bmul 102F  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                             _usart_add_isr_handler 1FB1  
                                    _ade_set_GAIN 10AC                                  ?_znp_msg_handler 0072  
                                 __initialization 0015                                      __end_of_main 0D6F  
                                          ??_main 01DC                               znp_msg_handler@data 0074  
                                          _ADCON1 009F              ade_get_power_meter_data@line_periods 00CA  
                                          _EEDATA 010C                                            _EECON1 018C  
                                          _EECON2 018D                                            _ANSELH 0189  
                    ade_get_power_meter_data@irms 00DC                                            i1l3102 08E0  
                                          i1l3106 08E4                                            i1l3070 0878  
                                          i1l3064 0867                                            i1l3082 0892  
                                          i1l3058 085A                                            i1l3084 0899  
                                          i1l3076 0885                                            i1l3086 08A0  
                                          i1l3096 08BB                                            i1l3712 1020  
                                          i1l2840 134C                                            i1l2832 132B  
                                          i1l2842 1351                                            i1l5410 1627  
                                          i1l3716 1026                                  __end_of_ade_init 1051  
                                          i1l5342 0A8E                                            i1l5344 09CE  
                                          i1l2848 135D                                  __end_of_ade_read 12E5  
                                          i1l5620 116C                                            i1l5622 08EE  
                                          i1l5374 15F7                                            i1l5366 15E9  
                                          i1l5358 15D7                                            i1l5624 1365  
                                          i1l3952 1164                                            i1l5384 1606  
                                          i1l5626 136A                                            i1l3946 1158  
                                          i1l5386 1607                                            i1l3948 1160  
                    ade_get_power_meter_data@vrms 00E1                                            u634_25 0A44  
                                      __i1fptable 0046                           znp_af_register@endpoint 002F  
                                          _SSPBUF 0013                             _led_ind_blink_handler 1F14  
                                __end_of___xxtofl 1800                                      __ioc_rb1_isr 0061  
                                    __ioc_rb2_isr 0060                                      __ioc_rb3_isr 00EB  
                                    __ioc_rb4_isr 00EA                                      __ioc_rb5_isr 00E9  
                                    __ioc_rb6_isr 00E8                                      __ioc_rb7_isr 01BE  
                                    _znp_data_rcv 0110                                            ___flge 16CA  
                                          ___bmul 102F                       sys_tick_start_periodic@tick 002D  
                                       ??___fladd 00C2                                            ___wmul 11B3  
                                       ??___fldiv 00A8                                         ??___flmul 0045  
                                          _memset 113B                       __end_of_led_ind_blink_start 1F94  
                                          _uxBits 00E7                              __end_of_eeprom_write 121B  
                                ??_znp_hard_reset 002B                                            fptable 0045  
                                          fptotal 0000                  __end_of_ade_get_power_meter_data 0616  
                                          saved_w 007E                           ade_set_GAIN@gain_config 0040  
                                ?_ade_set_LINECYC 003C                                      _znp_send_msg 1247  
                                znp_init@callback 002C                xEventGroupWaitBits@uxBitsToWaitFor 0039  
                                      ___flge@ff1 0029                                        ___flge@ff2 002D  
                                    ___xxtofl@arg 0039                      __end_of_znp_set_logical_type 07FF  
                                    ___xxtofl@exp 0038                            ?_usart_add_isr_handler 0070  
                                    ___xxtofl@val 002F                                  __end_of_znp_init 10D6  
                         __end_of__initialization 0041                                        __ade_zx_cb 0066  
                                  sys_tick_stop@i 0030                                   eeprom_read@addr 002A  
                            __end_of_led_ind_init 2000                               ___bmul@multiplicand 0029  
                                 _wait_for_status 1085                                      __is_reversed 00EC  
                                  __pcstackCOMMON 0070                    ioc_rb1_add_isr_handler@handler 002A  
                                    __pidataBANK3 100E                                        _ade_config 0A93  
                                       ?i1___bmul 0070                                       ISR@newPORTB 0027  
                                  _OPTION_REGbits 0081                          __end_of_znp_router_start 13B6  
                         ade_write@bytes_to_write 0031                                 eeprom_write@value 0029  
                                     ISR@tmpPORTB 01CC                                  i1___bmul@product 0072  
                      ??_znp_zdo_startup_from_app 002B                    ade_get_power_meter_data@period 00D2  
                          ade_set_LINECYC@linecyc 003C                                        __pbssBANK0 005B  
                                      __pbssBANK1 00E7                                        __pbssBANK2 0110  
                                      __pbssBANK3 0190                          ?_ioc_rb1_add_isr_handler 0070  
                          ?_led_ind_blink_handler 0070                                 ?_znp_set_channels 0070  
                               ??_znp_af_register 002F                                ??_znp_set_channels 002F  
                               _xEventGroupCreate 1F11                          __end_of_ade_signed_value 15BB  
                               __end_of__Umul8_16 11F7                               _xEventGroupWaitBits 080A  
                                      __pmaintext 0B70                                ?_xEventGroupCreate 0070  
                                         ?___flge 0029                                           ?___bmul 0029  
                 znp_usart_event_handler@rx_event 007A                                           ?___wmul 0029  
                            fp__ade_zx_cb_handler 004C                                        __pintentry 0004  
                                         ?_memset 0029                                  ??_led_ind_toggle 0070  
                             ??_xEventGroupCreate 0029                                        ??i1___bmul 0071  
                                       ?_ade_init 0070                                         ?_ade_read 002A  
                   ade_get_power_meter_data@pData 00E6                        __end_of_xEventGroupGetBits 1F20  
                                      __zb_znp_cb 01BD                                        ade_write@i 003B  
                xEventGroupWaitBits@ticks_to_wait 002D                                         ?___xxtofl 002F  
                               __end_of_ade_reset 1106                                      ade_read@addr 0032  
                                    ade_read@data 0033                              ?_xEventGroupWaitBits 002D  
                               __end_of_ade_write 132A                                 ?_znp_set_startopt 0070  
                      __end_of_xEventGroupSetBits 1F87                                        _led_ind_on 1F0F  
                              ??_znp_set_startopt 002F                             ade_read@bytes_to_read 002A  
                         __end_of_wait_for_status 1097                                           i1fpbase 004B  
                       znp_send_msg@wait_for_rsps 003A                         __end_of_xEventGroupCreate 1F14  
                                  _ade_get_PERIOD 1F94                         ?_ade_get_power_meter_data 0070  
                              _led_ind_blink_stop 1F59                                  _sys_tick_handler 09B7  
                                         ___fladd 0D6F                                           ___fldiv 0616  
                                         ___flmul 0061                                           _ade_cfg 01CD  
                                     ?_ade_config 0070                                           __energy 01B3  
                        ??_ex_int_add_isr_handler 0029                               ?_led_ind_blink_stop 0070  
                            _znp_set_logical_type 07B7                                           __ptext1 1247  
                                         __ptext2 0903                                           __ptext3 1370  
                                         __ptext4 121B                                           __ptext5 13B6  
                                         __ptext6 10D6                                           __ptext7 07B7  
                                         __ptext8 163D                                           __ptext9 1403  
                                      ??_ade_init 002B                                        ??_ade_read 002E  
                             __size_of__i1fptable 001B                                         ?_znp_init 0070  
                    __end_of_xEventGroupClearBits 100E                                         _T1CONbits 0010  
                               fp__ade_zx_handler 004F                                     _sys_tick_init 1194  
               znp_usart_event_handler@event_data 007B                             ??_xEventGroupWaitBits 0031  
                                      ??___xxtofl 0033                                     _sys_tick_stop 1275  
                             i1___bmul@multiplier 0073                                     ?_wait_for_msg 0029  
                         _sys_tick_start_periodic 14CE                                           clrloop0 1F40  
                               fp__button_handler 0052                              end_of_initialization 0041  
                                         _znp_fcs 01B9                                           _znp_len 005E  
                                      _relay_init 1F2A                              ??_led_ind_blink_stop 0031  
                          __end_of_ade_get_PERIOD 1FA2                                           memset@c 0029  
                                         memset@n 002B                                           memset@p 002F  
                                    _eeprom_write 11F7                       znp_af_data_request@fcs_calc 0039  
                                       _RCSTAbits 0018                                 ??_spi_master_init 0029  
                     znp_af_data_request@endpoint 0036        __end_of_sys_tick_register_callback_handler 14CE  
            ??_sys_tick_register_callback_handler 002D               ?_sys_tick_register_callback_handler 0070  
              _sys_tick_register_callback_handler 1463                                fp__znp_msg_handler 005B  
                           ?_znp_set_logical_type 0070                                         _PORTBbits 0006  
                                       _PORTDbits 0008                                        ??_znp_init 002B  
                                  ?_sys_tick_init 0070                                  _znp_frame_parser 0858  
                                  ?_sys_tick_stop 0070                                      _led_ind_init 1FF0  
                                     ___fladd@grs 005A                                     ___xxtofl@sign 0037  
                                       _TRISBbits 0086                                         _TRISCbits 0087  
                                       _TRISDbits 0088                                  ade_config@config 0045  
                                  ??_wait_for_msg 002B                  __end_of_znp_zdo_startup_from_app 1247  
                                     ___fldiv@grs 00B4                           ??_usart_add_isr_handler 0029  
                                     ___fldiv@rem 00AD                                       ?_led_ind_on 0070  
                        ??_timer1_add_isr_handler 0029                                  ?_wait_for_status 002B  
                                     ___flmul@grs 004D                                   ?_ade_get_PERIOD 0038  
                         _znp_usart_event_handler 1157                                     ?_spi_transfer 0070  
                      fp__znp_usart_event_handler 005E                                     ??_eeprom_read 0029  
                                       _TXSTAbits 0098                                        _usart_init 1051  
                                      _usart_send 1F37                              ade_signed_value@bits 003C  
                                   ??_led_ind_off 0029                                    __end_of___flge 175D  
                                  __end_of___bmul 1040                                  _ade_get_LAENERGY 1175  
                   wait_for_status@status_to_wait 002E                                    __end_of___wmul 11D4  
                             _znp_af_data_request 0903                                       _BAUDCTLbits 0187  
                                  __end_of_memset 1157                              znp_send_msg@endpoint 0040  
                             start_initialization 0015                         ??_sys_tick_start_periodic 0031  
                               ?_znp_router_start 0070                                       __end_of_ISR 163D  
                                 _znp_af_register 1403                                znp_frame_parser@ch 0079  
                              main@keepalive_tick 01E0                           ??_led_ind_blink_handler 0071  
                              ??_znp_router_start 0030                              ?_znp_af_data_request 002F  
                                     ?_relay_init 0070                                    ??_spi_transfer 0029  
                              znp_msg_handler@cmd 0072                                znp_msg_handler@len 0075  
                            _xEventGroupClearBits 1000                                   wait_for_msg@cmd 0029  
                               ?_ade_signed_value 0038                  znp_set_logical_type@logical_type 002F  
                                        ??___flge 0031                                          ??___bmul 002A  
                              ??_ade_signed_value 003D                                          ??___wmul 002D  
                             __end_of_eeprom_read 1120                                        init_fetch0 1062  
                                       __Umul8_16 11D4                            ??_znp_set_logical_type 002F  
                                     __pdataBANK3 01CC                                      _last_cmd_rcv 005B  
                                        ??_memset 002D                                       __ex_int_isr 0062  
                                 ??_sys_tick_init 002B                      _ade_get_power_meter_data$354 00D4  
                    _ade_get_power_meter_data$357 00D8                      _ade_get_power_meter_data$358 00DF  
                                 ??_sys_tick_stop 002D                               fp__sys_tick_handler 0058  
                                       ___fladd@a 00BE                                         ___fladd@b 00BA  
                                  _ade_zx_handler 1F2F                                __end_of__i1fptable 0061  
                                       ___fldiv@a 00A0                                         ___fldiv@b 00A4  
                               ??_znp_msg_handler 0076                                     ??_button_init 002B  
                             __end_of_led_ind_off 1F1C                                         ___flmul@a 0041  
                                       ___flmul@b 003D                                     ?_ade_get_IRMS 0038  
                                       ___latbits 0002                                     ?_ade_get_VRMS 0038  
                                   __pcstackBANK0 0020                                     __pcstackBANK1 00A0  
                                   __pcstackBANK3 01DC                                    _button_handler 1097  
                        __end_of_sys_tick_handler 0A93                 xEventGroupClearBits@uxBitsToClear 002A  
                                      ISR@iocMask 0028                                         _ade_reset 10ED  
                       ??_znp_usart_event_handler 007C                             ??_znp_af_data_request 0034  
                                       _ade_write 12E5                                  eeprom_write@addr 002B  
                          _ex_int_add_isr_handler 1F50                                _xEventGroupGetBits 1F1C  
                                   ?_ade_set_GAIN 0070                             ?_xEventGroupClearBits 0070  
                                     ?_usart_init 0070                                       ?_usart_send 0070  
                 __end_of_sys_tick_start_periodic 153D                     ex_int_add_isr_handler@handler 002A  
                              _xEventGroupSetBits 1F7A                               ?_xEventGroupGetBits 0070  
                                       __tmr1_isr 0064                                         __tmr2_isr 0063  
                                       __pfunctab 0045                                         ade_read@i 0037  
                                     usart_send@c 0029                              __end_of_wait_for_msg 1F6E  
                                        ?___fladd 00BA                         ?_znp_zdo_startup_from_app 0070  
                                        ?___fldiv 00A0                                          ?___flmul 003D  
                                    ??_ade_config 0041                                        ?__Umul8_16 0029  
                             ?_xEventGroupSetBits 0070                            __end_of_ade_zx_handler 1F37  
                         __end_of_znp_af_register 1463                                  _led_blink_handle 005F  
                                       __sys_tick 0190                                    ??_ade_get_IRMS 003B  
                               ade_signed_value@i 0048                                    ??_ade_get_VRMS 003B  
                          __end_of_button_handler 10AC                              ??_xEventGroupGetBits 0029  
                                      ?_ade_reset 0070                                        ?_ade_write 002D  
                            ??_xEventGroupSetBits 0070                               __end_of_button_init 1F2A  
                                  ??_ade_set_GAIN 003C                                __end_of_ade_config 0B70  
                               interrupt_function 0004                                   _spi_master_init 1FE0  
                                  ___wmul@product 002D                                          _IOCBbits 0096  
                                znp_send_msg@data 003E                                         clear_ram0 1F3F  
                                     _eeprom_read 1106                          __end_of_znp_frame_parser 0903  
                                        _PIE1bits 008C                             i1___bmul@multiplicand 0070  
                                        _PIR1bits 000C                                 ??_ade_set_LINECYC 003E  
                 __end_of_znp_usart_event_handler 1175                            _timer1_add_isr_handler 0800  
                                     _led_ind_off 1F18                       __end_of_xEventGroupWaitBits 0858  
                                 ?_ade_zx_handler 0070                                          i1___bmul 101E  
                            __end_of_spi_transfer 1F50                                 ___wmul@multiplier 0029  
            sys_tick_register_callback_handler@cb 002F                                  spi_transfer@data 0029  
                            znp_af_data_request@i 0037                                   ?_button_handler 0070  
                                   ?_znp_send_msg 003A                                  ??_ade_get_PERIOD 003A  
                                    ??_led_ind_on 0029                                          i1fptable 0046  
                                        i1fptotal 000E                     __end_of_usart_add_isr_handler 1FC0  
                        __end_of_ade_get_LAENERGY 1194                                         _znp_state 01BC  
                        _ade_get_power_meter_data 0356                            ??_xEventGroupClearBits 0029  
                                      _EECON1bits 018C                               _led_ind_blink_start 1F87  
                ade_get_power_meter_data@laenergy 00E4                           _ioc_rb1_add_isr_handler 1F6E  
                                     ??__Umul8_16 002B                                  _znp_set_channels 163D  
                              __end_of_led_ind_on 1F11                                 _sys_tick_get_tick 1073  
                   sys_tick_start_periodic@handle 0033                                  ?_znp_af_register 0070  
                                        _ade_init 1040                                          _ade_read 12A6  
                              ?_sys_tick_get_tick 0029                                ade_write@write_buf 002D  
      ade_get_power_meter_data@accumulation_times 00CE                      xEventGroupWaitBits@last_tick 0035  
                                        ___xxtofl 175D                                          __linecyc 01B7  
sys_tick_register_callback_handler@_handler_index 0030                                       _button_init 1F25  
                                  ??_znp_send_msg 003B                     timer1_add_isr_handler@handler 002A  
                            ?_led_ind_blink_start 0070                                          _dev_data 01BF  
                         __end_of_spi_master_init 1FF0                                          __ptext10 1085  
                                        __ptext11 1F63                                          __ptext20 1000  
                                        __ptext12 1F37                                          __ptext21 1194  
                                        __ptext13 10C1                                          __ptext30 1F18  
                                        __ptext22 0800                                          __ptext14 1051  
                                        __ptext31 1F87                                          __ptext23 1F2A  
                                        __ptext15 1FB1                                          __ptext40 0356  
                                        __ptext32 14CE                                          __ptext24 113B  
                                        __ptext16 080A                                          __ptext41 1FD0  
                                        __ptext33 11F7                                          __ptext25 1FF0  
                                        __ptext17 1073                                          __ptext50 16CA  
                                        __ptext42 1F94                                          __ptext34 1106  
                                        __ptext26 1463                                          __ptext18 1F1C  
                                        __ptext51 0616                                          __ptext43 1175  
                                        __ptext35 1F25                                          __ptext27 1F0F  
                                        __ptext19 1F11                                          __ptext60 1F47  
                                        __ptext52 0D6F                                          __ptext44 153D  
                                        __ptext36 1F6E                                          __ptext28 1F59  
                                        __ptext61 15BB                                          __ptext53 0A93  
                                        __ptext45 1FC0                                          __ptext37 1040  
                                        __ptext29 1275                                          __ptext70 1F2F  
                                        __ptext62 1157                                          __ptext54 1F50  
                                        __ptext46 175D                                          __ptext38 1FE0  
                                        __ptext71 1F20                                          __ptext63 0858  
                                        __ptext55 1120                                          __ptext47 11B3  
                                        __ptext39 10ED                                          __ptext72 1F7A  
                                        __ptext64 132A                                          __ptext56 10AC  
                                        __ptext48 0061                                          __ptext65 09B7  
                                        __ptext57 12E5                                          __ptext49 11D4  
                                        __ptext66 101E                                          __ptext58 102F  
                                        __ptext67 1F14                                          __ptext59 12A6  
                                        __ptext68 1FA2                                          __ptext69 1097  
                             ??_sys_tick_get_tick 002D                                       ??_ade_reset 0029  
                                     ??_ade_write 0032                                    _znp_hard_reset 10D6  
                   __end_of_led_ind_blink_handler 1F18                                      ??_relay_init 0029  
                                _znp_set_startopt 13B6                                   znp_send_msg@len 003F  
                            __end_of_ade_get_IRMS 1FD0                              __end_of_ade_get_VRMS 1FE0  
                                   ade_write@addr 0039                                     ade_write@data 003A  
                       znp_router_start@start_opt 0032                                   _znp_msg_handler 132A  
                       __end_of_sys_tick_get_tick 1085                                wait_for_status@cmd 002B  
                        sys_tick_start_periodic@i 0034                              __end_of_ade_set_GAIN 10C1  
                                        _znp_cmd0 01BB                                          _znp_cmd1 01BA  
                                        _znp_init 10C1                                __end_of_relay_init 1F2F  
                                      _INTCONbits 000B                             ??_led_ind_blink_start 0035  
                                        init_ram0 1066                                          memset@p1 002E  
                          __end_of_znp_hard_reset 10ED                           ?_ex_int_add_isr_handler 0070  
                                    _wait_for_msg 1F63                                 ?_sys_tick_handler 0070  
                       znp_af_data_request@i_1601 0038                                          intlevel1 0045  
                   znp_af_data_request@cluster_id 002F                                 _ade_zx_cb_handler 1F20  
                              ??_sys_tick_handler 0074                                 main@ade_data_tick 01E4  
                                    ??_usart_init 0029                                ?_ade_zx_cb_handler 0070  
                                    ??_usart_send 0029                         ??_ioc_rb1_add_isr_handler 0029  
                   xEventGroupSetBits@uxBitsToSet 0071                                        _OSCCONbits 008F  
                               sys_tick_handler@i 0020                               ??_ade_zx_cb_handler 0072  
                        ?_sys_tick_start_periodic 002D                            __Umul8_16@multiplicand 0029  
                           __end_of_sys_tick_init 11B3                             __end_of_sys_tick_stop 12A6  
                     __end_of_znp_af_data_request 09B7                    __end_of_ex_int_add_isr_handler 1F59  
                              __end_of_usart_init 1062                                __end_of_usart_send 1F3F  
                                ?_spi_master_init 0070                                   ?_znp_hard_reset 0070  
                                  _led_ind_toggle 1FA2                  znp_af_data_request@wait_for_rsps 0033  
                                   __usart_rx_isr 0065                                     ___fladd@signs 0057  
                       __end_of_ade_zx_cb_handler 1F25                                   _ade_set_LINECYC 1120  
                                   ?_eeprom_write 0029                                      ___fladd@aexp 0058  
                                    ___fladd@bexp 0059                                        _STATUSbits 0003  
                                    _spi_transfer 1F47                           __end_of_znp_msg_handler 1370  
                            __Umul8_16@multiplier 0031                                      ?_eeprom_read 0070  
                                      _SSPCONbits 0014                                _znp_data_rcv_index 005D  
                               ?_znp_frame_parser 0070                          fp__led_ind_blink_handler 0055  
                         ?_timer1_add_isr_handler 0070                                 __Umul8_16@product 002D  
                            __end_of_znp_send_msg 1275                                  ??_ade_zx_handler 0072  
